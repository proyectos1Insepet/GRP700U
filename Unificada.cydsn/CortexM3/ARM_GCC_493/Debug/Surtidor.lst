ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Surtidor.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Surtidor_Init,"ax",%progbits
  19              		.align	2
  20              		.global	Surtidor_Init
  21              		.thumb
  22              		.thumb_func
  23              		.type	Surtidor_Init, %function
  24              	Surtidor_Init:
  25              	.LFB1:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\Surtidor.c"
   1:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Surtidor.c **** * File Name: Surtidor.c
   3:.\Generated_Source\PSoC5/Surtidor.c **** * Version 2.30
   4:.\Generated_Source\PSoC5/Surtidor.c **** *
   5:.\Generated_Source\PSoC5/Surtidor.c **** * Description:
   6:.\Generated_Source\PSoC5/Surtidor.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/Surtidor.c **** *
   8:.\Generated_Source\PSoC5/Surtidor.c **** * Note:
   9:.\Generated_Source\PSoC5/Surtidor.c **** *
  10:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/Surtidor.c **** * Copyright 2008-2012, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/Surtidor.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/Surtidor.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/Surtidor.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/Surtidor.c **** 
  17:.\Generated_Source\PSoC5/Surtidor.c **** #include "Surtidor.h"
  18:.\Generated_Source\PSoC5/Surtidor.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC5/Surtidor.c **** #if(Surtidor_INTERNAL_CLOCK_USED)
  20:.\Generated_Source\PSoC5/Surtidor.c ****     #include "Surtidor_IntClock.h"
  21:.\Generated_Source\PSoC5/Surtidor.c **** #endif /* End Surtidor_INTERNAL_CLOCK_USED */
  22:.\Generated_Source\PSoC5/Surtidor.c **** 
  23:.\Generated_Source\PSoC5/Surtidor.c **** 
  24:.\Generated_Source\PSoC5/Surtidor.c **** /***************************************
  25:.\Generated_Source\PSoC5/Surtidor.c **** * Global data allocation
  26:.\Generated_Source\PSoC5/Surtidor.c **** ***************************************/
  27:.\Generated_Source\PSoC5/Surtidor.c **** 
  28:.\Generated_Source\PSoC5/Surtidor.c **** uint8 Surtidor_initVar = 0u;
  29:.\Generated_Source\PSoC5/Surtidor.c **** #if( Surtidor_TX_ENABLED && (Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH))
  30:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_txBuffer[Surtidor_TXBUFFERSIZE];
  31:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_txBufferRead = 0u;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 2


  32:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/Surtidor.c **** #endif /* End Surtidor_TX_ENABLED */
  34:.\Generated_Source\PSoC5/Surtidor.c **** #if( ( Surtidor_RX_ENABLED || Surtidor_HD_ENABLED ) && \
  35:.\Generated_Source\PSoC5/Surtidor.c ****      (Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH) )
  36:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_rxBuffer[Surtidor_RXBUFFERSIZE];
  37:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint16 Surtidor_rxBufferRead = 0u;
  38:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint16 Surtidor_rxBufferWrite = 0u;
  39:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_rxBufferLoopDetect = 0u;
  40:.\Generated_Source\PSoC5/Surtidor.c ****     volatile uint8 Surtidor_rxBufferOverflow = 0u;
  41:.\Generated_Source\PSoC5/Surtidor.c ****     #if (Surtidor_RXHW_ADDRESS_ENABLED)
  42:.\Generated_Source\PSoC5/Surtidor.c ****         volatile uint8 Surtidor_rxAddressMode = Surtidor_RXADDRESSMODE;
  43:.\Generated_Source\PSoC5/Surtidor.c ****         volatile uint8 Surtidor_rxAddressDetected = 0u;
  44:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End EnableHWAddress */
  45:.\Generated_Source\PSoC5/Surtidor.c **** #endif /* End Surtidor_RX_ENABLED */
  46:.\Generated_Source\PSoC5/Surtidor.c **** 
  47:.\Generated_Source\PSoC5/Surtidor.c **** 
  48:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
  49:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_Start
  50:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
  51:.\Generated_Source\PSoC5/Surtidor.c **** *
  52:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
  53:.\Generated_Source\PSoC5/Surtidor.c **** *  Initialize and Enable the UART component.
  54:.\Generated_Source\PSoC5/Surtidor.c **** *  Enable the clock input to enable operation.
  55:.\Generated_Source\PSoC5/Surtidor.c **** *
  56:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
  57:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
  58:.\Generated_Source\PSoC5/Surtidor.c **** *
  59:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
  60:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
  61:.\Generated_Source\PSoC5/Surtidor.c **** *
  62:.\Generated_Source\PSoC5/Surtidor.c **** * Global variables:
  63:.\Generated_Source\PSoC5/Surtidor.c **** *  The Surtidor_intiVar variable is used to indicate initial
  64:.\Generated_Source\PSoC5/Surtidor.c **** *  configuration of this component. The variable is initialized to zero (0u)
  65:.\Generated_Source\PSoC5/Surtidor.c **** *  and set to one (1u) the first time UART_Start() is called. This allows for
  66:.\Generated_Source\PSoC5/Surtidor.c **** *  component initialization without re-initialization in all subsequent calls
  67:.\Generated_Source\PSoC5/Surtidor.c **** *  to the Surtidor_Start() routine.
  68:.\Generated_Source\PSoC5/Surtidor.c **** *
  69:.\Generated_Source\PSoC5/Surtidor.c **** * Reentrant:
  70:.\Generated_Source\PSoC5/Surtidor.c **** *  No.
  71:.\Generated_Source\PSoC5/Surtidor.c **** *
  72:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
  73:.\Generated_Source\PSoC5/Surtidor.c **** void Surtidor_Start(void) 
  74:.\Generated_Source\PSoC5/Surtidor.c **** {
  75:.\Generated_Source\PSoC5/Surtidor.c ****     /* If not Initialized then initialize all required hardware and software */
  76:.\Generated_Source\PSoC5/Surtidor.c ****     if(Surtidor_initVar == 0u)
  77:.\Generated_Source\PSoC5/Surtidor.c ****     {
  78:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_Init();
  79:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_initVar = 1u;
  80:.\Generated_Source\PSoC5/Surtidor.c ****     }
  81:.\Generated_Source\PSoC5/Surtidor.c ****     Surtidor_Enable();
  82:.\Generated_Source\PSoC5/Surtidor.c **** }
  83:.\Generated_Source\PSoC5/Surtidor.c **** 
  84:.\Generated_Source\PSoC5/Surtidor.c **** 
  85:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
  86:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_Init
  87:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
  88:.\Generated_Source\PSoC5/Surtidor.c **** *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 3


  89:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
  90:.\Generated_Source\PSoC5/Surtidor.c **** *  Initialize component's parameters to the parameters set by user in the
  91:.\Generated_Source\PSoC5/Surtidor.c **** *  customizer of the component placed onto schematic. Usually called in
  92:.\Generated_Source\PSoC5/Surtidor.c **** *  Surtidor_Start().
  93:.\Generated_Source\PSoC5/Surtidor.c **** *
  94:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
  95:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
  96:.\Generated_Source\PSoC5/Surtidor.c **** *
  97:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
  98:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
  99:.\Generated_Source\PSoC5/Surtidor.c **** *
 100:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
 101:.\Generated_Source\PSoC5/Surtidor.c **** void Surtidor_Init(void) 
 102:.\Generated_Source\PSoC5/Surtidor.c **** {
  27              		.loc 1 102 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
 103:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 104:.\Generated_Source\PSoC5/Surtidor.c **** 
 105:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RX_INTERRUPT_ENABLED && (Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH))
 106:.\Generated_Source\PSoC5/Surtidor.c ****             /* Set the RX Interrupt. */
 107:.\Generated_Source\PSoC5/Surtidor.c ****             (void)CyIntSetVector(Surtidor_RX_VECT_NUM, &Surtidor_RXISR);
  35              		.loc 1 107 0
  36 0002 0420     		movs	r0, #4
  37 0004 0B49     		ldr	r1, .L3
  38 0006 FFF7FEFF 		bl	CyIntSetVector
  39              	.LVL0:
 108:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntSetPriority(Surtidor_RX_VECT_NUM, Surtidor_RX_PRIOR_NUM);
  40              		.loc 1 108 0
  41 000a 0420     		movs	r0, #4
  42 000c 0721     		movs	r1, #7
  43 000e FFF7FEFF 		bl	CyIntSetPriority
  44              	.LVL1:
 109:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RX_INTERRUPT_ENABLED */
 110:.\Generated_Source\PSoC5/Surtidor.c **** 
 111:.\Generated_Source\PSoC5/Surtidor.c ****         #if (Surtidor_RXHW_ADDRESS_ENABLED)
 112:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_SetRxAddressMode(Surtidor_RXAddressMode);
 113:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_SetRxAddress1(Surtidor_RXHWADDRESS1);
 114:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_SetRxAddress2(Surtidor_RXHWADDRESS2);
 115:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RXHW_ADDRESS_ENABLED */
 116:.\Generated_Source\PSoC5/Surtidor.c **** 
 117:.\Generated_Source\PSoC5/Surtidor.c ****         /* Init Count7 period */
 118:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXBITCTR_PERIOD_REG = Surtidor_RXBITCTR_INIT;
  45              		.loc 1 118 0
  46 0012 7222     		movs	r2, #114
  47 0014 084B     		ldr	r3, .L3+4
  48 0016 1A70     		strb	r2, [r3]
 119:.\Generated_Source\PSoC5/Surtidor.c ****         /* Configure the Initial RX interrupt mask */
 120:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXSTATUS_MASK_REG  = Surtidor_INIT_RX_INTERRUPTS_MASK;
  49              		.loc 1 120 0
  50 0018 2022     		movs	r2, #32
  51 001a 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 4


  52 001c 1A70     		strb	r2, [r3]
 121:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_RX_ENABLED || Surtidor_HD_ENABLED*/
 122:.\Generated_Source\PSoC5/Surtidor.c **** 
 123:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_TX_ENABLED)
 124:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_TX_INTERRUPT_ENABLED && (Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH))
 125:.\Generated_Source\PSoC5/Surtidor.c ****             /* Set the TX Interrupt. */
 126:.\Generated_Source\PSoC5/Surtidor.c ****             (void)CyIntSetVector(Surtidor_TX_VECT_NUM, &Surtidor_TXISR);
 127:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntSetPriority(Surtidor_TX_VECT_NUM, Surtidor_TX_PRIOR_NUM);
 128:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TX_INTERRUPT_ENABLED */
 129:.\Generated_Source\PSoC5/Surtidor.c **** 
 130:.\Generated_Source\PSoC5/Surtidor.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 131:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_TXCLKGEN_DP)
 132:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCLKGEN_CTR_REG = Surtidor_BIT_CENTER;
  53              		.loc 1 132 0
  54 001e 0722     		movs	r2, #7
  55 0020 663B     		subs	r3, r3, #102
  56 0022 1A70     		strb	r2, [r3]
 133:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCLKTX_COMPLETE_REG = (Surtidor_NUMBER_OF_DATA_BITS +
  57              		.loc 1 133 0
  58 0024 4822     		movs	r2, #72
  59 0026 1033     		adds	r3, r3, #16
  60 0028 1A70     		strb	r2, [r3]
 134:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_NUMBER_OF_START_BIT) * Surtidor_OVER_SAMPLE_COUNT;
 135:.\Generated_Source\PSoC5/Surtidor.c ****         #else
 136:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCTR_PERIOD_REG = ((Surtidor_NUMBER_OF_DATA_BITS +
 137:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_NUMBER_OF_START_BIT) * Surtidor_OVER_SAMPLE_8) - 1u;
 138:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TXCLKGEN_DP */
 139:.\Generated_Source\PSoC5/Surtidor.c **** 
 140:.\Generated_Source\PSoC5/Surtidor.c ****         /* Configure the Initial TX interrupt mask */
 141:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_TX_INTERRUPT_ENABLED && (Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH))
 142:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXSTATUS_MASK_REG = Surtidor_TX_STS_FIFO_EMPTY;
 143:.\Generated_Source\PSoC5/Surtidor.c ****         #else
 144:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXSTATUS_MASK_REG = Surtidor_INIT_TX_INTERRUPTS_MASK;
  61              		.loc 1 144 0
  62 002a 0022     		movs	r2, #0
  63 002c 4F33     		adds	r3, r3, #79
  64 002e 1A70     		strb	r2, [r3]
  65 0030 08BD     		pop	{r3, pc}
  66              	.L4:
  67 0032 00BF     		.align	2
  68              	.L3:
  69 0034 00000000 		.word	Surtidor_RXISR
  70 0038 8E640040 		.word	1073767566
  71              		.cfi_endproc
  72              	.LFE1:
  73              		.size	Surtidor_Init, .-Surtidor_Init
  74              		.section	.text.Surtidor_Enable,"ax",%progbits
  75              		.align	2
  76              		.global	Surtidor_Enable
  77              		.thumb
  78              		.thumb_func
  79              		.type	Surtidor_Enable, %function
  80              	Surtidor_Enable:
  81              	.LFB2:
 145:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /*End Surtidor_TX_INTERRUPT_ENABLED*/
 146:.\Generated_Source\PSoC5/Surtidor.c **** 
 147:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_TX_ENABLED */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 5


 148:.\Generated_Source\PSoC5/Surtidor.c **** 
 149:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 150:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_WriteControlRegister( \
 151:.\Generated_Source\PSoC5/Surtidor.c ****             (Surtidor_ReadControlRegister() & (uint8)~Surtidor_CTRL_PARITY_TYPE_MASK) | \
 152:.\Generated_Source\PSoC5/Surtidor.c ****             (uint8)(Surtidor_PARITY_TYPE << Surtidor_CTRL_PARITY_TYPE0_SHIFT) );
 153:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_PARITY_TYPE_SW */
 154:.\Generated_Source\PSoC5/Surtidor.c **** }
 155:.\Generated_Source\PSoC5/Surtidor.c **** 
 156:.\Generated_Source\PSoC5/Surtidor.c **** 
 157:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
 158:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_Enable
 159:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
 160:.\Generated_Source\PSoC5/Surtidor.c **** *
 161:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
 162:.\Generated_Source\PSoC5/Surtidor.c **** *  Enables the UART block operation
 163:.\Generated_Source\PSoC5/Surtidor.c **** *
 164:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
 165:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 166:.\Generated_Source\PSoC5/Surtidor.c **** *
 167:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
 168:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 169:.\Generated_Source\PSoC5/Surtidor.c **** *
 170:.\Generated_Source\PSoC5/Surtidor.c **** * Global Variables:
 171:.\Generated_Source\PSoC5/Surtidor.c **** *  Surtidor_rxAddressDetected - set to initial state (0).
 172:.\Generated_Source\PSoC5/Surtidor.c **** *
 173:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
 174:.\Generated_Source\PSoC5/Surtidor.c **** void Surtidor_Enable(void) 
 175:.\Generated_Source\PSoC5/Surtidor.c **** {
  82              		.loc 1 175 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 0
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86 0000 08B5     		push	{r3, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 3, -8
  89              		.cfi_offset 14, -4
 176:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 enableInterrupts;
 177:.\Generated_Source\PSoC5/Surtidor.c ****     enableInterrupts = CyEnterCriticalSection();
  90              		.loc 1 177 0
  91 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  92              	.LVL2:
 178:.\Generated_Source\PSoC5/Surtidor.c **** 
 179:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 180:.\Generated_Source\PSoC5/Surtidor.c ****         /*RX Counter (Count7) Enable */
 181:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXBITCTR_CONTROL_REG |= Surtidor_CNTR_ENABLE;
  93              		.loc 1 181 0
  94 0006 0A4A     		ldr	r2, .L7
  95 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  96 000a 43F02003 		orr	r3, r3, #32
  97 000e 1370     		strb	r3, [r2]
 182:.\Generated_Source\PSoC5/Surtidor.c ****         /* Enable the RX Interrupt. */
 183:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXSTATUS_ACTL_REG  |= Surtidor_INT_ENABLE;
  98              		.loc 1 183 0
  99 0010 013A     		subs	r2, r2, #1
 100 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 101 0014 43F01003 		orr	r3, r3, #16
 102 0018 1370     		strb	r3, [r2]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 6


 184:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RX_INTERRUPT_ENABLED && (Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH))
 185:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntEnable(Surtidor_RX_VECT_NUM);
 103              		.loc 1 185 0
 104 001a 1022     		movs	r2, #16
 105 001c 054B     		ldr	r3, .L7+4
 106 001e 1A60     		str	r2, [r3]
 186:.\Generated_Source\PSoC5/Surtidor.c ****             #if (Surtidor_RXHW_ADDRESS_ENABLED)
 187:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_rxAddressDetected = 0u;
 188:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_RXHW_ADDRESS_ENABLED */
 189:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RX_INTERRUPT_ENABLED */
 190:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_RX_ENABLED || Surtidor_HD_ENABLED*/
 191:.\Generated_Source\PSoC5/Surtidor.c **** 
 192:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_TX_ENABLED)
 193:.\Generated_Source\PSoC5/Surtidor.c ****         /*TX Counter (DP/Count7) Enable */
 194:.\Generated_Source\PSoC5/Surtidor.c ****         #if(!Surtidor_TXCLKGEN_DP)
 195:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCTR_CONTROL_REG |= Surtidor_CNTR_ENABLE;
 196:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TXCLKGEN_DP */
 197:.\Generated_Source\PSoC5/Surtidor.c ****         /* Enable the TX Interrupt. */
 198:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXSTATUS_ACTL_REG |= Surtidor_INT_ENABLE;
 107              		.loc 1 198 0
 108 0020 054A     		ldr	r2, .L7+8
 109 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 110 0024 43F01003 		orr	r3, r3, #16
 111 0028 1370     		strb	r3, [r2]
 199:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_TX_INTERRUPT_ENABLED && (Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH))
 200:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntEnable(Surtidor_TX_VECT_NUM);
 201:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TX_INTERRUPT_ENABLED*/
 202:.\Generated_Source\PSoC5/Surtidor.c ****      #endif /* End Surtidor_TX_ENABLED */
 203:.\Generated_Source\PSoC5/Surtidor.c **** 
 204:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_INTERNAL_CLOCK_USED)
 205:.\Generated_Source\PSoC5/Surtidor.c ****         /* Enable the clock. */
 206:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_IntClock_Start();
 207:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_INTERNAL_CLOCK_USED */
 208:.\Generated_Source\PSoC5/Surtidor.c **** 
 209:.\Generated_Source\PSoC5/Surtidor.c ****     CyExitCriticalSection(enableInterrupts);
 112              		.loc 1 209 0
 113 002a FFF7FEFF 		bl	CyExitCriticalSection
 114              	.LVL3:
 115 002e 08BD     		pop	{r3, pc}
 116              	.L8:
 117              		.align	2
 118              	.L7:
 119 0030 9E640040 		.word	1073767582
 120 0034 00E100E0 		.word	-536813312
 121 0038 96640040 		.word	1073767574
 122              		.cfi_endproc
 123              	.LFE2:
 124              		.size	Surtidor_Enable, .-Surtidor_Enable
 125              		.section	.text.Surtidor_Start,"ax",%progbits
 126              		.align	2
 127              		.global	Surtidor_Start
 128              		.thumb
 129              		.thumb_func
 130              		.type	Surtidor_Start, %function
 131              	Surtidor_Start:
 132              	.LFB0:
  74:.\Generated_Source\PSoC5/Surtidor.c ****     /* If not Initialized then initialize all required hardware and software */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 7


 133              		.loc 1 74 0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137 0000 08B5     		push	{r3, lr}
 138              		.cfi_def_cfa_offset 8
 139              		.cfi_offset 3, -8
 140              		.cfi_offset 14, -4
  76:.\Generated_Source\PSoC5/Surtidor.c ****     {
 141              		.loc 1 76 0
 142 0002 054B     		ldr	r3, .L12
 143 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 144 0006 23B9     		cbnz	r3, .L10
  78:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_initVar = 1u;
 145              		.loc 1 78 0
 146 0008 FFF7FEFF 		bl	Surtidor_Init
 147              	.LVL4:
  79:.\Generated_Source\PSoC5/Surtidor.c ****     }
 148              		.loc 1 79 0
 149 000c 0122     		movs	r2, #1
 150 000e 024B     		ldr	r3, .L12
 151 0010 1A70     		strb	r2, [r3]
 152              	.L10:
  81:.\Generated_Source\PSoC5/Surtidor.c **** }
 153              		.loc 1 81 0
 154 0012 FFF7FEFF 		bl	Surtidor_Enable
 155              	.LVL5:
 156 0016 08BD     		pop	{r3, pc}
 157              	.L13:
 158              		.align	2
 159              	.L12:
 160 0018 00000000 		.word	.LANCHOR0
 161              		.cfi_endproc
 162              	.LFE0:
 163              		.size	Surtidor_Start, .-Surtidor_Start
 164              		.section	.text.Surtidor_ReadControlRegister,"ax",%progbits
 165              		.align	2
 166              		.global	Surtidor_ReadControlRegister
 167              		.thumb
 168              		.thumb_func
 169              		.type	Surtidor_ReadControlRegister, %function
 170              	Surtidor_ReadControlRegister:
 171              	.LFB4:
 210:.\Generated_Source\PSoC5/Surtidor.c **** }
 211:.\Generated_Source\PSoC5/Surtidor.c **** 
 212:.\Generated_Source\PSoC5/Surtidor.c **** 
 213:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
 214:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_Stop
 215:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
 216:.\Generated_Source\PSoC5/Surtidor.c **** *
 217:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
 218:.\Generated_Source\PSoC5/Surtidor.c **** *  Disable the UART component
 219:.\Generated_Source\PSoC5/Surtidor.c **** *
 220:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
 221:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 222:.\Generated_Source\PSoC5/Surtidor.c **** *
 223:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 8


 224:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 225:.\Generated_Source\PSoC5/Surtidor.c **** *
 226:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
 227:.\Generated_Source\PSoC5/Surtidor.c **** void Surtidor_Stop(void) 
 228:.\Generated_Source\PSoC5/Surtidor.c **** {
 229:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 enableInterrupts;
 230:.\Generated_Source\PSoC5/Surtidor.c ****     enableInterrupts = CyEnterCriticalSection();
 231:.\Generated_Source\PSoC5/Surtidor.c **** 
 232:.\Generated_Source\PSoC5/Surtidor.c ****     /* Write Bit Counter Disable */
 233:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 234:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXBITCTR_CONTROL_REG &= (uint8)~Surtidor_CNTR_ENABLE;
 235:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_RX_ENABLED */
 236:.\Generated_Source\PSoC5/Surtidor.c **** 
 237:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_TX_ENABLED)
 238:.\Generated_Source\PSoC5/Surtidor.c ****         #if(!Surtidor_TXCLKGEN_DP)
 239:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_TXBITCTR_CONTROL_REG &= (uint8)~Surtidor_CNTR_ENABLE;
 240:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TXCLKGEN_DP */
 241:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* Surtidor_TX_ENABLED */
 242:.\Generated_Source\PSoC5/Surtidor.c **** 
 243:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_INTERNAL_CLOCK_USED)
 244:.\Generated_Source\PSoC5/Surtidor.c ****         /* Disable the clock. */
 245:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_IntClock_Stop();
 246:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_INTERNAL_CLOCK_USED */
 247:.\Generated_Source\PSoC5/Surtidor.c **** 
 248:.\Generated_Source\PSoC5/Surtidor.c ****     /* Disable internal interrupt component */
 249:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 250:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXSTATUS_ACTL_REG  &= (uint8)~Surtidor_INT_ENABLE;
 251:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RX_INTERRUPT_ENABLED && (Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH))
 252:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_DisableRxInt();
 253:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RX_INTERRUPT_ENABLED */
 254:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_RX_ENABLED */
 255:.\Generated_Source\PSoC5/Surtidor.c **** 
 256:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_TX_ENABLED)
 257:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXSTATUS_ACTL_REG &= (uint8)~Surtidor_INT_ENABLE;
 258:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_TX_INTERRUPT_ENABLED && (Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH))
 259:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_DisableTxInt();
 260:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TX_INTERRUPT_ENABLED */
 261:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_TX_ENABLED */
 262:.\Generated_Source\PSoC5/Surtidor.c **** 
 263:.\Generated_Source\PSoC5/Surtidor.c ****     CyExitCriticalSection(enableInterrupts);
 264:.\Generated_Source\PSoC5/Surtidor.c **** }
 265:.\Generated_Source\PSoC5/Surtidor.c **** 
 266:.\Generated_Source\PSoC5/Surtidor.c **** 
 267:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
 268:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_ReadControlRegister
 269:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
 270:.\Generated_Source\PSoC5/Surtidor.c **** *
 271:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
 272:.\Generated_Source\PSoC5/Surtidor.c **** *  Read the current state of the control register
 273:.\Generated_Source\PSoC5/Surtidor.c **** *
 274:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
 275:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 276:.\Generated_Source\PSoC5/Surtidor.c **** *
 277:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
 278:.\Generated_Source\PSoC5/Surtidor.c **** *  Current state of the control register.
 279:.\Generated_Source\PSoC5/Surtidor.c **** *
 280:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 9


 281:.\Generated_Source\PSoC5/Surtidor.c **** uint8 Surtidor_ReadControlRegister(void) 
 282:.\Generated_Source\PSoC5/Surtidor.c **** {
 172              		.loc 1 282 0
 173              		.cfi_startproc
 174              		@ args = 0, pretend = 0, frame = 0
 175              		@ frame_needed = 0, uses_anonymous_args = 0
 176              		@ link register save eliminated.
 283:.\Generated_Source\PSoC5/Surtidor.c ****     #if( Surtidor_CONTROL_REG_REMOVED )
 284:.\Generated_Source\PSoC5/Surtidor.c ****         return(0u);
 285:.\Generated_Source\PSoC5/Surtidor.c ****     #else
 286:.\Generated_Source\PSoC5/Surtidor.c ****         return(Surtidor_CONTROL_REG);
 287:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_CONTROL_REG_REMOVED */
 288:.\Generated_Source\PSoC5/Surtidor.c **** }
 177              		.loc 1 288 0
 178 0000 0020     		movs	r0, #0
 179 0002 7047     		bx	lr
 180              		.cfi_endproc
 181              	.LFE4:
 182              		.size	Surtidor_ReadControlRegister, .-Surtidor_ReadControlRegister
 183              		.section	.text.Surtidor_WriteControlRegister,"ax",%progbits
 184              		.align	2
 185              		.global	Surtidor_WriteControlRegister
 186              		.thumb
 187              		.thumb_func
 188              		.type	Surtidor_WriteControlRegister, %function
 189              	Surtidor_WriteControlRegister:
 190              	.LFB5:
 289:.\Generated_Source\PSoC5/Surtidor.c **** 
 290:.\Generated_Source\PSoC5/Surtidor.c **** 
 291:.\Generated_Source\PSoC5/Surtidor.c **** /*******************************************************************************
 292:.\Generated_Source\PSoC5/Surtidor.c **** * Function Name: Surtidor_WriteControlRegister
 293:.\Generated_Source\PSoC5/Surtidor.c **** ********************************************************************************
 294:.\Generated_Source\PSoC5/Surtidor.c **** *
 295:.\Generated_Source\PSoC5/Surtidor.c **** * Summary:
 296:.\Generated_Source\PSoC5/Surtidor.c **** *  Writes an 8-bit value into the control register
 297:.\Generated_Source\PSoC5/Surtidor.c **** *
 298:.\Generated_Source\PSoC5/Surtidor.c **** * Parameters:
 299:.\Generated_Source\PSoC5/Surtidor.c **** *  control:  control register value
 300:.\Generated_Source\PSoC5/Surtidor.c **** *
 301:.\Generated_Source\PSoC5/Surtidor.c **** * Return:
 302:.\Generated_Source\PSoC5/Surtidor.c **** *  None.
 303:.\Generated_Source\PSoC5/Surtidor.c **** *
 304:.\Generated_Source\PSoC5/Surtidor.c **** *******************************************************************************/
 305:.\Generated_Source\PSoC5/Surtidor.c **** void  Surtidor_WriteControlRegister(uint8 control) 
 306:.\Generated_Source\PSoC5/Surtidor.c **** {
 191              		.loc 1 306 0
 192              		.cfi_startproc
 193              		@ args = 0, pretend = 0, frame = 0
 194              		@ frame_needed = 0, uses_anonymous_args = 0
 195              		@ link register save eliminated.
 196              	.LVL6:
 197 0000 7047     		bx	lr
 198              		.cfi_endproc
 199              	.LFE5:
 200              		.size	Surtidor_WriteControlRegister, .-Surtidor_WriteControlRegister
 201 0002 00BF     		.section	.text.Surtidor_EnableRxInt,"ax",%progbits
 202              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 10


 203              		.global	Surtidor_EnableRxInt
 204              		.thumb
 205              		.thumb_func
 206              		.type	Surtidor_EnableRxInt, %function
 207              	Surtidor_EnableRxInt:
 208              	.LFB6:
 307:.\Generated_Source\PSoC5/Surtidor.c ****     #if( Surtidor_CONTROL_REG_REMOVED )
 308:.\Generated_Source\PSoC5/Surtidor.c ****         if(control != 0u) { }      /* release compiler warning */
 309:.\Generated_Source\PSoC5/Surtidor.c ****     #else
 310:.\Generated_Source\PSoC5/Surtidor.c ****        Surtidor_CONTROL_REG = control;
 311:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_CONTROL_REG_REMOVED */
 312:.\Generated_Source\PSoC5/Surtidor.c **** }
 313:.\Generated_Source\PSoC5/Surtidor.c **** 
 314:.\Generated_Source\PSoC5/Surtidor.c **** 
 315:.\Generated_Source\PSoC5/Surtidor.c **** #if(Surtidor_RX_ENABLED || Surtidor_HD_ENABLED)
 316:.\Generated_Source\PSoC5/Surtidor.c **** 
 317:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_RX_INTERRUPT_ENABLED)
 318:.\Generated_Source\PSoC5/Surtidor.c **** 
 319:.\Generated_Source\PSoC5/Surtidor.c ****         /*******************************************************************************
 320:.\Generated_Source\PSoC5/Surtidor.c ****         * Function Name: Surtidor_EnableRxInt
 321:.\Generated_Source\PSoC5/Surtidor.c ****         ********************************************************************************
 322:.\Generated_Source\PSoC5/Surtidor.c ****         *
 323:.\Generated_Source\PSoC5/Surtidor.c ****         * Summary:
 324:.\Generated_Source\PSoC5/Surtidor.c ****         *  Enable RX interrupt generation
 325:.\Generated_Source\PSoC5/Surtidor.c ****         *
 326:.\Generated_Source\PSoC5/Surtidor.c ****         * Parameters:
 327:.\Generated_Source\PSoC5/Surtidor.c ****         *  None.
 328:.\Generated_Source\PSoC5/Surtidor.c ****         *
 329:.\Generated_Source\PSoC5/Surtidor.c ****         * Return:
 330:.\Generated_Source\PSoC5/Surtidor.c ****         *  None.
 331:.\Generated_Source\PSoC5/Surtidor.c ****         *
 332:.\Generated_Source\PSoC5/Surtidor.c ****         * Theory:
 333:.\Generated_Source\PSoC5/Surtidor.c ****         *  Enable the interrupt output -or- the interrupt component itself
 334:.\Generated_Source\PSoC5/Surtidor.c ****         *
 335:.\Generated_Source\PSoC5/Surtidor.c ****         *******************************************************************************/
 336:.\Generated_Source\PSoC5/Surtidor.c ****         void Surtidor_EnableRxInt(void) 
 337:.\Generated_Source\PSoC5/Surtidor.c ****         {
 209              		.loc 1 337 0
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 0
 212              		@ frame_needed = 0, uses_anonymous_args = 0
 213              		@ link register save eliminated.
 338:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntEnable(Surtidor_RX_VECT_NUM);
 214              		.loc 1 338 0
 215 0000 1022     		movs	r2, #16
 216 0002 014B     		ldr	r3, .L17
 217 0004 1A60     		str	r2, [r3]
 218 0006 7047     		bx	lr
 219              	.L18:
 220              		.align	2
 221              	.L17:
 222 0008 00E100E0 		.word	-536813312
 223              		.cfi_endproc
 224              	.LFE6:
 225              		.size	Surtidor_EnableRxInt, .-Surtidor_EnableRxInt
 226              		.section	.text.Surtidor_DisableRxInt,"ax",%progbits
 227              		.align	2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 11


 228              		.global	Surtidor_DisableRxInt
 229              		.thumb
 230              		.thumb_func
 231              		.type	Surtidor_DisableRxInt, %function
 232              	Surtidor_DisableRxInt:
 233              	.LFB7:
 339:.\Generated_Source\PSoC5/Surtidor.c ****         }
 340:.\Generated_Source\PSoC5/Surtidor.c **** 
 341:.\Generated_Source\PSoC5/Surtidor.c **** 
 342:.\Generated_Source\PSoC5/Surtidor.c ****         /*******************************************************************************
 343:.\Generated_Source\PSoC5/Surtidor.c ****         * Function Name: Surtidor_DisableRxInt
 344:.\Generated_Source\PSoC5/Surtidor.c ****         ********************************************************************************
 345:.\Generated_Source\PSoC5/Surtidor.c ****         *
 346:.\Generated_Source\PSoC5/Surtidor.c ****         * Summary:
 347:.\Generated_Source\PSoC5/Surtidor.c ****         *  Disable RX interrupt generation
 348:.\Generated_Source\PSoC5/Surtidor.c ****         *
 349:.\Generated_Source\PSoC5/Surtidor.c ****         * Parameters:
 350:.\Generated_Source\PSoC5/Surtidor.c ****         *  None.
 351:.\Generated_Source\PSoC5/Surtidor.c ****         *
 352:.\Generated_Source\PSoC5/Surtidor.c ****         * Return:
 353:.\Generated_Source\PSoC5/Surtidor.c ****         *  None.
 354:.\Generated_Source\PSoC5/Surtidor.c ****         *
 355:.\Generated_Source\PSoC5/Surtidor.c ****         * Theory:
 356:.\Generated_Source\PSoC5/Surtidor.c ****         *  Disable the interrupt output -or- the interrupt component itself
 357:.\Generated_Source\PSoC5/Surtidor.c ****         *
 358:.\Generated_Source\PSoC5/Surtidor.c ****         *******************************************************************************/
 359:.\Generated_Source\PSoC5/Surtidor.c ****         void Surtidor_DisableRxInt(void) 
 360:.\Generated_Source\PSoC5/Surtidor.c ****         {
 234              		.loc 1 360 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 361:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntDisable(Surtidor_RX_VECT_NUM);
 239              		.loc 1 361 0
 240 0000 1022     		movs	r2, #16
 241 0002 014B     		ldr	r3, .L20
 242 0004 1A60     		str	r2, [r3]
 243 0006 7047     		bx	lr
 244              	.L21:
 245              		.align	2
 246              	.L20:
 247 0008 80E100E0 		.word	-536813184
 248              		.cfi_endproc
 249              	.LFE7:
 250              		.size	Surtidor_DisableRxInt, .-Surtidor_DisableRxInt
 251              		.section	.text.Surtidor_Stop,"ax",%progbits
 252              		.align	2
 253              		.global	Surtidor_Stop
 254              		.thumb
 255              		.thumb_func
 256              		.type	Surtidor_Stop, %function
 257              	Surtidor_Stop:
 258              	.LFB3:
 228:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 enableInterrupts;
 259              		.loc 1 228 0
 260              		.cfi_startproc
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 12


 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 230:.\Generated_Source\PSoC5/Surtidor.c **** 
 267              		.loc 1 230 0
 268 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 269              	.LVL7:
 270 0006 0446     		mov	r4, r0
 271              	.LVL8:
 234:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* End Surtidor_RX_ENABLED */
 272              		.loc 1 234 0
 273 0008 0A4A     		ldr	r2, .L24
 274 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 275 000c 03F0DF03 		and	r3, r3, #223
 276 0010 1370     		strb	r3, [r2]
 250:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RX_INTERRUPT_ENABLED && (Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH))
 277              		.loc 1 250 0
 278 0012 013A     		subs	r2, r2, #1
 279 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 280 0016 03F0EF03 		and	r3, r3, #239
 281 001a 1370     		strb	r3, [r2]
 252:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RX_INTERRUPT_ENABLED */
 282              		.loc 1 252 0
 283 001c FFF7FEFF 		bl	Surtidor_DisableRxInt
 284              	.LVL9:
 257:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_TX_INTERRUPT_ENABLED && (Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH))
 285              		.loc 1 257 0
 286 0020 054A     		ldr	r2, .L24+4
 287 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 288 0024 03F0EF03 		and	r3, r3, #239
 289 0028 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/Surtidor.c **** }
 290              		.loc 1 263 0
 291 002a 2046     		mov	r0, r4
 292 002c FFF7FEFF 		bl	CyExitCriticalSection
 293              	.LVL10:
 294 0030 10BD     		pop	{r4, pc}
 295              	.LVL11:
 296              	.L25:
 297 0032 00BF     		.align	2
 298              	.L24:
 299 0034 9E640040 		.word	1073767582
 300 0038 96640040 		.word	1073767574
 301              		.cfi_endproc
 302              	.LFE3:
 303              		.size	Surtidor_Stop, .-Surtidor_Stop
 304              		.section	.text.Surtidor_SetRxInterruptMode,"ax",%progbits
 305              		.align	2
 306              		.global	Surtidor_SetRxInterruptMode
 307              		.thumb
 308              		.thumb_func
 309              		.type	Surtidor_SetRxInterruptMode, %function
 310              	Surtidor_SetRxInterruptMode:
 311              	.LFB8:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 13


 362:.\Generated_Source\PSoC5/Surtidor.c ****         }
 363:.\Generated_Source\PSoC5/Surtidor.c **** 
 364:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* Surtidor_RX_INTERRUPT_ENABLED */
 365:.\Generated_Source\PSoC5/Surtidor.c **** 
 366:.\Generated_Source\PSoC5/Surtidor.c **** 
 367:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 368:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetRxInterruptMode
 369:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 370:.\Generated_Source\PSoC5/Surtidor.c ****     *
 371:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 372:.\Generated_Source\PSoC5/Surtidor.c ****     *  Configure which status bits trigger an interrupt event
 373:.\Generated_Source\PSoC5/Surtidor.c ****     *
 374:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 375:.\Generated_Source\PSoC5/Surtidor.c ****     *  IntSrc:  An or'd combination of the desired status bit masks (defined in
 376:.\Generated_Source\PSoC5/Surtidor.c ****     *           the header file)
 377:.\Generated_Source\PSoC5/Surtidor.c ****     *
 378:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 379:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 380:.\Generated_Source\PSoC5/Surtidor.c ****     *
 381:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
 382:.\Generated_Source\PSoC5/Surtidor.c ****     *  Enables the output of specific status bits to the interrupt controller
 383:.\Generated_Source\PSoC5/Surtidor.c ****     *
 384:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 385:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetRxInterruptMode(uint8 intSrc) 
 386:.\Generated_Source\PSoC5/Surtidor.c ****     {
 312              		.loc 1 386 0
 313              		.cfi_startproc
 314              		@ args = 0, pretend = 0, frame = 0
 315              		@ frame_needed = 0, uses_anonymous_args = 0
 316              		@ link register save eliminated.
 317              	.LVL12:
 387:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXSTATUS_MASK_REG  = intSrc;
 318              		.loc 1 387 0
 319 0000 014B     		ldr	r3, .L27
 320 0002 1870     		strb	r0, [r3]
 321 0004 7047     		bx	lr
 322              	.L28:
 323 0006 00BF     		.align	2
 324              	.L27:
 325 0008 8D640040 		.word	1073767565
 326              		.cfi_endproc
 327              	.LFE8:
 328              		.size	Surtidor_SetRxInterruptMode, .-Surtidor_SetRxInterruptMode
 329              		.section	.text.Surtidor_ReadRxData,"ax",%progbits
 330              		.align	2
 331              		.global	Surtidor_ReadRxData
 332              		.thumb
 333              		.thumb_func
 334              		.type	Surtidor_ReadRxData, %function
 335              	Surtidor_ReadRxData:
 336              	.LFB9:
 388:.\Generated_Source\PSoC5/Surtidor.c ****     }
 389:.\Generated_Source\PSoC5/Surtidor.c **** 
 390:.\Generated_Source\PSoC5/Surtidor.c **** 
 391:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 392:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ReadRxData
 393:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 14


 394:.\Generated_Source\PSoC5/Surtidor.c ****     *
 395:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 396:.\Generated_Source\PSoC5/Surtidor.c ****     *  Returns data in RX Data register without checking status register to
 397:.\Generated_Source\PSoC5/Surtidor.c ****     *  determine if data is valid
 398:.\Generated_Source\PSoC5/Surtidor.c ****     *
 399:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 400:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 401:.\Generated_Source\PSoC5/Surtidor.c ****     *
 402:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 403:.\Generated_Source\PSoC5/Surtidor.c ****     *  Received data from RX register
 404:.\Generated_Source\PSoC5/Surtidor.c ****     *
 405:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 406:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBuffer - RAM buffer pointer for save received data.
 407:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferWrite - cyclic index for write to rxBuffer,
 408:.\Generated_Source\PSoC5/Surtidor.c ****     *     checked to identify new data.
 409:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferRead - cyclic index for read from rxBuffer,
 410:.\Generated_Source\PSoC5/Surtidor.c ****     *     incremented after each byte has been read from buffer.
 411:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferLoopDetect - creared if loop condition was detected
 412:.\Generated_Source\PSoC5/Surtidor.c ****     *     in RX ISR.
 413:.\Generated_Source\PSoC5/Surtidor.c ****     *
 414:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 415:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 416:.\Generated_Source\PSoC5/Surtidor.c ****     *
 417:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 418:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_ReadRxData(void) 
 419:.\Generated_Source\PSoC5/Surtidor.c ****     {
 337              		.loc 1 419 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 0
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341 0000 10B5     		push	{r4, lr}
 342              		.cfi_def_cfa_offset 8
 343              		.cfi_offset 4, -8
 344              		.cfi_offset 14, -4
 420:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 rxData;
 421:.\Generated_Source\PSoC5/Surtidor.c **** 
 422:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH)
 423:.\Generated_Source\PSoC5/Surtidor.c ****             uint16 loc_rxBufferRead;
 424:.\Generated_Source\PSoC5/Surtidor.c ****             uint16 loc_rxBufferWrite;
 425:.\Generated_Source\PSoC5/Surtidor.c ****             /* Protect variables that could change on interrupt. */
 426:.\Generated_Source\PSoC5/Surtidor.c ****             /* Disable Rx interrupt. */
 427:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_RX_INTERRUPT_ENABLED)
 428:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_DisableRxInt();
 345              		.loc 1 428 0
 346 0002 FFF7FEFF 		bl	Surtidor_DisableRxInt
 347              	.LVL13:
 429:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* Surtidor_RX_INTERRUPT_ENABLED */
 430:.\Generated_Source\PSoC5/Surtidor.c ****             loc_rxBufferRead = Surtidor_rxBufferRead;
 348              		.loc 1 430 0
 349 0006 124A     		ldr	r2, .L36
 350 0008 5388     		ldrh	r3, [r2, #2]
 351 000a 9BB2     		uxth	r3, r3
 352              	.LVL14:
 431:.\Generated_Source\PSoC5/Surtidor.c ****             loc_rxBufferWrite = Surtidor_rxBufferWrite;
 353              		.loc 1 431 0
 354 000c 9188     		ldrh	r1, [r2, #4]
 355 000e 89B2     		uxth	r1, r1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 15


 356              	.LVL15:
 432:.\Generated_Source\PSoC5/Surtidor.c **** 
 433:.\Generated_Source\PSoC5/Surtidor.c ****             if( (Surtidor_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 357              		.loc 1 433 0
 358 0010 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 359 0012 12F0FF0F 		tst	r2, #255
 360 0016 01D1     		bne	.L30
 361              		.loc 1 433 0 is_stmt 0 discriminator 1
 362 0018 8B42     		cmp	r3, r1
 363 001a 11D0     		beq	.L31
 364              	.L30:
 434:.\Generated_Source\PSoC5/Surtidor.c ****             {
 435:.\Generated_Source\PSoC5/Surtidor.c ****                 rxData = Surtidor_rxBuffer[loc_rxBufferRead];
 365              		.loc 1 435 0 is_stmt 1
 366 001c 0D4A     		ldr	r2, .L36+4
 367 001e D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
 368 0020 E4B2     		uxtb	r4, r4
 369              	.LVL16:
 436:.\Generated_Source\PSoC5/Surtidor.c ****                 loc_rxBufferRead++;
 370              		.loc 1 436 0
 371 0022 0133     		adds	r3, r3, #1
 372              	.LVL17:
 373 0024 9BB2     		uxth	r3, r3
 374              	.LVL18:
 437:.\Generated_Source\PSoC5/Surtidor.c **** 
 438:.\Generated_Source\PSoC5/Surtidor.c ****                 if(loc_rxBufferRead >= Surtidor_RXBUFFERSIZE)
 375              		.loc 1 438 0
 376 0026 FF2B     		cmp	r3, #255
 377 0028 00D9     		bls	.L32
 439:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 440:.\Generated_Source\PSoC5/Surtidor.c ****                     loc_rxBufferRead = 0u;
 378              		.loc 1 440 0
 379 002a 0023     		movs	r3, #0
 380              	.LVL19:
 381              	.L32:
 441:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 442:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Update the real pointer */
 443:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_rxBufferRead = loc_rxBufferRead;
 382              		.loc 1 443 0
 383 002c 084A     		ldr	r2, .L36
 384 002e 5380     		strh	r3, [r2, #2]	@ movhi
 444:.\Generated_Source\PSoC5/Surtidor.c **** 
 445:.\Generated_Source\PSoC5/Surtidor.c ****                 if(Surtidor_rxBufferLoopDetect != 0u )
 385              		.loc 1 445 0
 386 0030 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 387              	.LVL20:
 388 0032 13F0FF0F 		tst	r3, #255
 389 0036 06D0     		beq	.L33
 446:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 447:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_rxBufferLoopDetect = 0u;
 390              		.loc 1 447 0
 391 0038 0022     		movs	r2, #0
 392 003a 054B     		ldr	r3, .L36
 393 003c 9A71     		strb	r2, [r3, #6]
 394              	.LVL21:
 395 003e 02E0     		b	.L33
 396              	.LVL22:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 16


 397              	.L31:
 448:.\Generated_Source\PSoC5/Surtidor.c ****                     #if( (Surtidor_RX_INTERRUPT_ENABLED) && (Surtidor_FLOW_CONTROL != 0u) && \
 449:.\Generated_Source\PSoC5/Surtidor.c ****                          (Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH) )
 450:.\Generated_Source\PSoC5/Surtidor.c ****                         /* When Hardware Flow Control selected - return RX mask */
 451:.\Generated_Source\PSoC5/Surtidor.c ****                         #if( Surtidor_HD_ENABLED )
 452:.\Generated_Source\PSoC5/Surtidor.c ****                             if((Surtidor_CONTROL_REG & Surtidor_CTRL_HD_SEND) == 0u)
 453:.\Generated_Source\PSoC5/Surtidor.c ****                             {   /* In Half duplex mode return RX mask only in RX
 454:.\Generated_Source\PSoC5/Surtidor.c ****                                 *  configuration set, otherwise
 455:.\Generated_Source\PSoC5/Surtidor.c ****                                 *  mask will be returned in LoadRxConfig() API.
 456:.\Generated_Source\PSoC5/Surtidor.c ****                                 */
 457:.\Generated_Source\PSoC5/Surtidor.c ****                                 Surtidor_RXSTATUS_MASK_REG  |= Surtidor_RX_STS_FIFO_NOTEMPTY;
 458:.\Generated_Source\PSoC5/Surtidor.c ****                             }
 459:.\Generated_Source\PSoC5/Surtidor.c ****                         #else
 460:.\Generated_Source\PSoC5/Surtidor.c ****                             Surtidor_RXSTATUS_MASK_REG  |= Surtidor_RX_STS_FIFO_NOTEMPTY;
 461:.\Generated_Source\PSoC5/Surtidor.c ****                         #endif /* end Surtidor_HD_ENABLED */
 462:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* Surtidor_RX_INTERRUPT_ENABLED and Hardware flow control*/
 463:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 464:.\Generated_Source\PSoC5/Surtidor.c ****             }
 465:.\Generated_Source\PSoC5/Surtidor.c ****             else
 466:.\Generated_Source\PSoC5/Surtidor.c ****             {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 467:.\Generated_Source\PSoC5/Surtidor.c ****                 rxData = Surtidor_RXDATA_REG;
 398              		.loc 1 467 0
 399 0040 054B     		ldr	r3, .L36+8
 400              	.LVL23:
 401 0042 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 402 0044 E4B2     		uxtb	r4, r4
 403              	.LVL24:
 404              	.L33:
 468:.\Generated_Source\PSoC5/Surtidor.c ****             }
 469:.\Generated_Source\PSoC5/Surtidor.c **** 
 470:.\Generated_Source\PSoC5/Surtidor.c ****             /* Enable Rx interrupt. */
 471:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_RX_INTERRUPT_ENABLED)
 472:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_EnableRxInt();
 405              		.loc 1 472 0
 406 0046 FFF7FEFF 		bl	Surtidor_EnableRxInt
 407              	.LVL25:
 473:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_RX_INTERRUPT_ENABLED */
 474:.\Generated_Source\PSoC5/Surtidor.c **** 
 475:.\Generated_Source\PSoC5/Surtidor.c ****         #else /* Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH */
 476:.\Generated_Source\PSoC5/Surtidor.c **** 
 477:.\Generated_Source\PSoC5/Surtidor.c ****             /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit*/
 478:.\Generated_Source\PSoC5/Surtidor.c ****             rxData = Surtidor_RXDATA_REG;
 479:.\Generated_Source\PSoC5/Surtidor.c **** 
 480:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH */
 481:.\Generated_Source\PSoC5/Surtidor.c **** 
 482:.\Generated_Source\PSoC5/Surtidor.c ****         return(rxData);
 483:.\Generated_Source\PSoC5/Surtidor.c ****     }
 408              		.loc 1 483 0
 409 004a 2046     		mov	r0, r4
 410 004c 10BD     		pop	{r4, pc}
 411              	.LVL26:
 412              	.L37:
 413 004e 00BF     		.align	2
 414              	.L36:
 415 0050 00000000 		.word	.LANCHOR0
 416 0054 00000000 		.word	Surtidor_rxBuffer
 417 0058 4E640040 		.word	1073767502
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 17


 418              		.cfi_endproc
 419              	.LFE9:
 420              		.size	Surtidor_ReadRxData, .-Surtidor_ReadRxData
 421              		.section	.text.Surtidor_ReadRxStatus,"ax",%progbits
 422              		.align	2
 423              		.global	Surtidor_ReadRxStatus
 424              		.thumb
 425              		.thumb_func
 426              		.type	Surtidor_ReadRxStatus, %function
 427              	Surtidor_ReadRxStatus:
 428              	.LFB10:
 484:.\Generated_Source\PSoC5/Surtidor.c **** 
 485:.\Generated_Source\PSoC5/Surtidor.c **** 
 486:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 487:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ReadRxStatus
 488:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 489:.\Generated_Source\PSoC5/Surtidor.c ****     *
 490:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 491:.\Generated_Source\PSoC5/Surtidor.c ****     *  Read the current state of the status register
 492:.\Generated_Source\PSoC5/Surtidor.c ****     *  And detect software buffer overflow.
 493:.\Generated_Source\PSoC5/Surtidor.c ****     *
 494:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 495:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 496:.\Generated_Source\PSoC5/Surtidor.c ****     *
 497:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 498:.\Generated_Source\PSoC5/Surtidor.c ****     *  Current state of the status register.
 499:.\Generated_Source\PSoC5/Surtidor.c ****     *
 500:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 501:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferOverflow - used to indicate overload condition.
 502:.\Generated_Source\PSoC5/Surtidor.c ****     *   It set to one in RX interrupt when there isn?t free space in
 503:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_rxBufferRead to write new data. This condition returned
 504:.\Generated_Source\PSoC5/Surtidor.c ****     *   and cleared to zero by this API as an
 505:.\Generated_Source\PSoC5/Surtidor.c ****     *   Surtidor_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 506:.\Generated_Source\PSoC5/Surtidor.c ****     *   bits.
 507:.\Generated_Source\PSoC5/Surtidor.c ****     *
 508:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 509:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_ReadRxStatus(void) 
 510:.\Generated_Source\PSoC5/Surtidor.c ****     {
 429              		.loc 1 510 0
 430              		.cfi_startproc
 431              		@ args = 0, pretend = 0, frame = 0
 432              		@ frame_needed = 0, uses_anonymous_args = 0
 433              		@ link register save eliminated.
 511:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 status;
 512:.\Generated_Source\PSoC5/Surtidor.c **** 
 513:.\Generated_Source\PSoC5/Surtidor.c ****         status = Surtidor_RXSTATUS_REG & Surtidor_RX_HW_MASK;
 434              		.loc 1 513 0
 435 0000 074B     		ldr	r3, .L40
 436 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 437 0004 00F07F00 		and	r0, r0, #127
 438              	.LVL27:
 514:.\Generated_Source\PSoC5/Surtidor.c **** 
 515:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH)
 516:.\Generated_Source\PSoC5/Surtidor.c ****             if( Surtidor_rxBufferOverflow != 0u )
 439              		.loc 1 516 0
 440 0008 064B     		ldr	r3, .L40+4
 441 000a DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 18


 442 000c 13F0FF0F 		tst	r3, #255
 443 0010 04D0     		beq	.L39
 517:.\Generated_Source\PSoC5/Surtidor.c ****             {
 518:.\Generated_Source\PSoC5/Surtidor.c ****                 status |= Surtidor_RX_STS_SOFT_BUFF_OVER;
 444              		.loc 1 518 0
 445 0012 40F08000 		orr	r0, r0, #128
 446              	.LVL28:
 519:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_rxBufferOverflow = 0u;
 447              		.loc 1 519 0
 448 0016 0022     		movs	r2, #0
 449 0018 024B     		ldr	r3, .L40+4
 450 001a DA71     		strb	r2, [r3, #7]
 451              	.L39:
 520:.\Generated_Source\PSoC5/Surtidor.c ****             }
 521:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* Surtidor_RXBUFFERSIZE */
 522:.\Generated_Source\PSoC5/Surtidor.c **** 
 523:.\Generated_Source\PSoC5/Surtidor.c ****         return(status);
 524:.\Generated_Source\PSoC5/Surtidor.c ****     }
 452              		.loc 1 524 0
 453 001c 7047     		bx	lr
 454              	.L41:
 455 001e 00BF     		.align	2
 456              	.L40:
 457 0020 6D640040 		.word	1073767533
 458 0024 00000000 		.word	.LANCHOR0
 459              		.cfi_endproc
 460              	.LFE10:
 461              		.size	Surtidor_ReadRxStatus, .-Surtidor_ReadRxStatus
 462              		.section	.text.Surtidor_GetChar,"ax",%progbits
 463              		.align	2
 464              		.global	Surtidor_GetChar
 465              		.thumb
 466              		.thumb_func
 467              		.type	Surtidor_GetChar, %function
 468              	Surtidor_GetChar:
 469              	.LFB11:
 525:.\Generated_Source\PSoC5/Surtidor.c **** 
 526:.\Generated_Source\PSoC5/Surtidor.c **** 
 527:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 528:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_GetChar
 529:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 530:.\Generated_Source\PSoC5/Surtidor.c ****     *
 531:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 532:.\Generated_Source\PSoC5/Surtidor.c ****     *  Reads UART RX buffer immediately, if data is not available or an error
 533:.\Generated_Source\PSoC5/Surtidor.c ****     *  condition exists, zero is returned; otherwise, character is read and
 534:.\Generated_Source\PSoC5/Surtidor.c ****     *  returned.
 535:.\Generated_Source\PSoC5/Surtidor.c ****     *
 536:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 537:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 538:.\Generated_Source\PSoC5/Surtidor.c ****     *
 539:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 540:.\Generated_Source\PSoC5/Surtidor.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 541:.\Generated_Source\PSoC5/Surtidor.c ****     *  A returned zero signifies an error condition or no data available.
 542:.\Generated_Source\PSoC5/Surtidor.c ****     *
 543:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 544:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBuffer - RAM buffer pointer for save received data.
 545:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferWrite - cyclic index for write to rxBuffer,
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 19


 546:.\Generated_Source\PSoC5/Surtidor.c ****     *     checked to identify new data.
 547:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferRead - cyclic index for read from rxBuffer,
 548:.\Generated_Source\PSoC5/Surtidor.c ****     *     incremented after each byte has been read from buffer.
 549:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferLoopDetect - creared if loop condition was detected
 550:.\Generated_Source\PSoC5/Surtidor.c ****     *     in RX ISR.
 551:.\Generated_Source\PSoC5/Surtidor.c ****     *
 552:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 553:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 554:.\Generated_Source\PSoC5/Surtidor.c ****     *
 555:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 556:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_GetChar(void) 
 557:.\Generated_Source\PSoC5/Surtidor.c ****     {
 470              		.loc 1 557 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474 0000 10B5     		push	{r4, lr}
 475              		.cfi_def_cfa_offset 8
 476              		.cfi_offset 4, -8
 477              		.cfi_offset 14, -4
 478              	.LVL29:
 558:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 rxData = 0u;
 559:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 rxStatus;
 560:.\Generated_Source\PSoC5/Surtidor.c **** 
 561:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH)
 562:.\Generated_Source\PSoC5/Surtidor.c ****             uint16 loc_rxBufferRead;
 563:.\Generated_Source\PSoC5/Surtidor.c ****             uint16 loc_rxBufferWrite;
 564:.\Generated_Source\PSoC5/Surtidor.c ****             /* Protect variables that could change on interrupt. */
 565:.\Generated_Source\PSoC5/Surtidor.c ****             /* Disable Rx interrupt. */
 566:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_RX_INTERRUPT_ENABLED)
 567:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_DisableRxInt();
 479              		.loc 1 567 0
 480 0002 FFF7FEFF 		bl	Surtidor_DisableRxInt
 481              	.LVL30:
 568:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* Surtidor_RX_INTERRUPT_ENABLED */
 569:.\Generated_Source\PSoC5/Surtidor.c ****             loc_rxBufferRead = Surtidor_rxBufferRead;
 482              		.loc 1 569 0
 483 0006 184A     		ldr	r2, .L51
 484 0008 5388     		ldrh	r3, [r2, #2]
 485 000a 9BB2     		uxth	r3, r3
 486              	.LVL31:
 570:.\Generated_Source\PSoC5/Surtidor.c ****             loc_rxBufferWrite = Surtidor_rxBufferWrite;
 487              		.loc 1 570 0
 488 000c 9188     		ldrh	r1, [r2, #4]
 489 000e 89B2     		uxth	r1, r1
 490              	.LVL32:
 571:.\Generated_Source\PSoC5/Surtidor.c **** 
 572:.\Generated_Source\PSoC5/Surtidor.c ****             if( (Surtidor_rxBufferLoopDetect != 0u) || (loc_rxBufferRead != loc_rxBufferWrite) )
 491              		.loc 1 572 0
 492 0010 9279     		ldrb	r2, [r2, #6]	@ zero_extendqisi2
 493 0012 12F0FF0F 		tst	r2, #255
 494 0016 01D1     		bne	.L43
 495              		.loc 1 572 0 is_stmt 0 discriminator 1
 496 0018 8B42     		cmp	r3, r1
 497 001a 11D0     		beq	.L44
 498              	.L43:
 573:.\Generated_Source\PSoC5/Surtidor.c ****             {
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 20


 574:.\Generated_Source\PSoC5/Surtidor.c ****                 rxData = Surtidor_rxBuffer[loc_rxBufferRead];
 499              		.loc 1 574 0 is_stmt 1
 500 001c 134A     		ldr	r2, .L51+4
 501 001e D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
 502 0020 E4B2     		uxtb	r4, r4
 503              	.LVL33:
 575:.\Generated_Source\PSoC5/Surtidor.c ****                 loc_rxBufferRead++;
 504              		.loc 1 575 0
 505 0022 0133     		adds	r3, r3, #1
 506              	.LVL34:
 507 0024 9BB2     		uxth	r3, r3
 508              	.LVL35:
 576:.\Generated_Source\PSoC5/Surtidor.c ****                 if(loc_rxBufferRead >= Surtidor_RXBUFFERSIZE)
 509              		.loc 1 576 0
 510 0026 FF2B     		cmp	r3, #255
 511 0028 00D9     		bls	.L45
 577:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 578:.\Generated_Source\PSoC5/Surtidor.c ****                     loc_rxBufferRead = 0u;
 512              		.loc 1 578 0
 513 002a 0023     		movs	r3, #0
 514              	.LVL36:
 515              	.L45:
 579:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 580:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Update the real pointer */
 581:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_rxBufferRead = loc_rxBufferRead;
 516              		.loc 1 581 0
 517 002c 0E4A     		ldr	r2, .L51
 518 002e 5380     		strh	r3, [r2, #2]	@ movhi
 582:.\Generated_Source\PSoC5/Surtidor.c **** 
 583:.\Generated_Source\PSoC5/Surtidor.c ****                 if(Surtidor_rxBufferLoopDetect > 0u )
 519              		.loc 1 583 0
 520 0030 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 521              	.LVL37:
 522 0032 13F0FF0F 		tst	r3, #255
 523 0036 13D0     		beq	.L46
 584:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 585:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_rxBufferLoopDetect = 0u;
 524              		.loc 1 585 0
 525 0038 0022     		movs	r2, #0
 526 003a 0B4B     		ldr	r3, .L51
 527 003c 9A71     		strb	r2, [r3, #6]
 528              	.LVL38:
 529 003e 0FE0     		b	.L46
 530              	.LVL39:
 531              	.L44:
 586:.\Generated_Source\PSoC5/Surtidor.c ****                     #if( (Surtidor_RX_INTERRUPT_ENABLED) && (Surtidor_FLOW_CONTROL != 0u) )
 587:.\Generated_Source\PSoC5/Surtidor.c ****                         /* When Hardware Flow Control selected - return RX mask */
 588:.\Generated_Source\PSoC5/Surtidor.c ****                         #if( Surtidor_HD_ENABLED )
 589:.\Generated_Source\PSoC5/Surtidor.c ****                             if((Surtidor_CONTROL_REG & Surtidor_CTRL_HD_SEND) == 0u)
 590:.\Generated_Source\PSoC5/Surtidor.c ****                             {   /* In Half duplex mode return RX mask only if
 591:.\Generated_Source\PSoC5/Surtidor.c ****                                 *  RX configuration set, otherwise
 592:.\Generated_Source\PSoC5/Surtidor.c ****                                 *  mask will be returned in LoadRxConfig() API.
 593:.\Generated_Source\PSoC5/Surtidor.c ****                                 */
 594:.\Generated_Source\PSoC5/Surtidor.c ****                                 Surtidor_RXSTATUS_MASK_REG  |= Surtidor_RX_STS_FIFO_NOTEMPTY;
 595:.\Generated_Source\PSoC5/Surtidor.c ****                             }
 596:.\Generated_Source\PSoC5/Surtidor.c ****                         #else
 597:.\Generated_Source\PSoC5/Surtidor.c ****                             Surtidor_RXSTATUS_MASK_REG  |= Surtidor_RX_STS_FIFO_NOTEMPTY;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 21


 598:.\Generated_Source\PSoC5/Surtidor.c ****                         #endif /* end Surtidor_HD_ENABLED */
 599:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* Surtidor_RX_INTERRUPT_ENABLED and Hardware flow control*/
 600:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 601:.\Generated_Source\PSoC5/Surtidor.c **** 
 602:.\Generated_Source\PSoC5/Surtidor.c ****             }
 603:.\Generated_Source\PSoC5/Surtidor.c ****             else
 604:.\Generated_Source\PSoC5/Surtidor.c ****             {   rxStatus = Surtidor_RXSTATUS_REG;
 532              		.loc 1 604 0
 533 0040 0B4B     		ldr	r3, .L51+8
 534              	.LVL40:
 535 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 536 0044 DBB2     		uxtb	r3, r3
 537              	.LVL41:
 605:.\Generated_Source\PSoC5/Surtidor.c ****                 if((rxStatus & Surtidor_RX_STS_FIFO_NOTEMPTY) != 0u)
 538              		.loc 1 605 0
 539 0046 13F0200F 		tst	r3, #32
 540 004a 06D0     		beq	.L48
 606:.\Generated_Source\PSoC5/Surtidor.c ****                 {   /* Read received data from FIFO*/
 607:.\Generated_Source\PSoC5/Surtidor.c ****                     rxData = Surtidor_RXDATA_REG;
 541              		.loc 1 607 0
 542 004c 094A     		ldr	r2, .L51+12
 543 004e 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 544 0050 E4B2     		uxtb	r4, r4
 545              	.LVL42:
 608:.\Generated_Source\PSoC5/Surtidor.c ****                     /*Check status on error*/
 609:.\Generated_Source\PSoC5/Surtidor.c ****                     if((rxStatus & (Surtidor_RX_STS_BREAK | Surtidor_RX_STS_PAR_ERROR |
 546              		.loc 1 609 0
 547 0052 13F01E0F 		tst	r3, #30
 548 0056 02D1     		bne	.L49
 549 0058 02E0     		b	.L46
 550              	.LVL43:
 551              	.L48:
 558:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 rxStatus;
 552              		.loc 1 558 0
 553 005a 0024     		movs	r4, #0
 554 005c 00E0     		b	.L46
 555              	.LVL44:
 556              	.L49:
 610:.\Generated_Source\PSoC5/Surtidor.c ****                                    Surtidor_RX_STS_STOP_ERROR | Surtidor_RX_STS_OVERRUN)) != 0u)
 611:.\Generated_Source\PSoC5/Surtidor.c ****                     {
 612:.\Generated_Source\PSoC5/Surtidor.c ****                         rxData = 0u;
 557              		.loc 1 612 0
 558 005e 0024     		movs	r4, #0
 559              	.LVL45:
 560              	.L46:
 613:.\Generated_Source\PSoC5/Surtidor.c ****                     }
 614:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 615:.\Generated_Source\PSoC5/Surtidor.c ****             }
 616:.\Generated_Source\PSoC5/Surtidor.c **** 
 617:.\Generated_Source\PSoC5/Surtidor.c ****             /* Enable Rx interrupt. */
 618:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_RX_INTERRUPT_ENABLED)
 619:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_EnableRxInt();
 561              		.loc 1 619 0
 562 0060 FFF7FEFF 		bl	Surtidor_EnableRxInt
 563              	.LVL46:
 620:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* Surtidor_RX_INTERRUPT_ENABLED */
 621:.\Generated_Source\PSoC5/Surtidor.c **** 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 22


 622:.\Generated_Source\PSoC5/Surtidor.c ****         #else /* Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH */
 623:.\Generated_Source\PSoC5/Surtidor.c **** 
 624:.\Generated_Source\PSoC5/Surtidor.c ****             rxStatus =Surtidor_RXSTATUS_REG;
 625:.\Generated_Source\PSoC5/Surtidor.c ****             if((rxStatus & Surtidor_RX_STS_FIFO_NOTEMPTY) != 0u)
 626:.\Generated_Source\PSoC5/Surtidor.c ****             {   /* Read received data from FIFO*/
 627:.\Generated_Source\PSoC5/Surtidor.c ****                 rxData = Surtidor_RXDATA_REG;
 628:.\Generated_Source\PSoC5/Surtidor.c ****                 /*Check status on error*/
 629:.\Generated_Source\PSoC5/Surtidor.c ****                 if((rxStatus & (Surtidor_RX_STS_BREAK | Surtidor_RX_STS_PAR_ERROR |
 630:.\Generated_Source\PSoC5/Surtidor.c ****                                Surtidor_RX_STS_STOP_ERROR | Surtidor_RX_STS_OVERRUN)) != 0u)
 631:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 632:.\Generated_Source\PSoC5/Surtidor.c ****                     rxData = 0u;
 633:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 634:.\Generated_Source\PSoC5/Surtidor.c ****             }
 635:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH */
 636:.\Generated_Source\PSoC5/Surtidor.c **** 
 637:.\Generated_Source\PSoC5/Surtidor.c ****         return(rxData);
 638:.\Generated_Source\PSoC5/Surtidor.c ****     }
 564              		.loc 1 638 0
 565 0064 2046     		mov	r0, r4
 566 0066 10BD     		pop	{r4, pc}
 567              	.LVL47:
 568              	.L52:
 569              		.align	2
 570              	.L51:
 571 0068 00000000 		.word	.LANCHOR0
 572 006c 00000000 		.word	Surtidor_rxBuffer
 573 0070 6D640040 		.word	1073767533
 574 0074 4E640040 		.word	1073767502
 575              		.cfi_endproc
 576              	.LFE11:
 577              		.size	Surtidor_GetChar, .-Surtidor_GetChar
 578              		.section	.text.Surtidor_GetByte,"ax",%progbits
 579              		.align	2
 580              		.global	Surtidor_GetByte
 581              		.thumb
 582              		.thumb_func
 583              		.type	Surtidor_GetByte, %function
 584              	Surtidor_GetByte:
 585              	.LFB12:
 639:.\Generated_Source\PSoC5/Surtidor.c **** 
 640:.\Generated_Source\PSoC5/Surtidor.c **** 
 641:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 642:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_GetByte
 643:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 644:.\Generated_Source\PSoC5/Surtidor.c ****     *
 645:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 646:.\Generated_Source\PSoC5/Surtidor.c ****     *  Grab the next available byte of data from the recieve FIFO
 647:.\Generated_Source\PSoC5/Surtidor.c ****     *
 648:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 649:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 650:.\Generated_Source\PSoC5/Surtidor.c ****     *
 651:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 652:.\Generated_Source\PSoC5/Surtidor.c ****     *  MSB contains Status Register and LSB contains UART RX data
 653:.\Generated_Source\PSoC5/Surtidor.c ****     *
 654:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 655:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 656:.\Generated_Source\PSoC5/Surtidor.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 23


 657:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 658:.\Generated_Source\PSoC5/Surtidor.c ****     uint16 Surtidor_GetByte(void) 
 659:.\Generated_Source\PSoC5/Surtidor.c ****     {
 586              		.loc 1 659 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590 0000 10B5     		push	{r4, lr}
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 4, -8
 593              		.cfi_offset 14, -4
 660:.\Generated_Source\PSoC5/Surtidor.c ****         return ( ((uint16)Surtidor_ReadRxStatus() << 8u) | Surtidor_ReadRxData() );
 594              		.loc 1 660 0
 595 0002 FFF7FEFF 		bl	Surtidor_ReadRxStatus
 596              	.LVL48:
 597 0006 0402     		lsls	r4, r0, #8
 598 0008 FFF7FEFF 		bl	Surtidor_ReadRxData
 599              	.LVL49:
 600 000c 2043     		orrs	r0, r0, r4
 661:.\Generated_Source\PSoC5/Surtidor.c ****     }
 601              		.loc 1 661 0
 602 000e 80B2     		uxth	r0, r0
 603 0010 10BD     		pop	{r4, pc}
 604              		.cfi_endproc
 605              	.LFE12:
 606              		.size	Surtidor_GetByte, .-Surtidor_GetByte
 607 0012 00BF     		.section	.text.Surtidor_GetRxBufferSize,"ax",%progbits
 608              		.align	2
 609              		.global	Surtidor_GetRxBufferSize
 610              		.thumb
 611              		.thumb_func
 612              		.type	Surtidor_GetRxBufferSize, %function
 613              	Surtidor_GetRxBufferSize:
 614              	.LFB13:
 662:.\Generated_Source\PSoC5/Surtidor.c **** 
 663:.\Generated_Source\PSoC5/Surtidor.c **** 
 664:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 665:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_GetRxBufferSize
 666:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 667:.\Generated_Source\PSoC5/Surtidor.c ****     *
 668:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 669:.\Generated_Source\PSoC5/Surtidor.c ****     *  Determine the amount of bytes left in the RX buffer and return the count in
 670:.\Generated_Source\PSoC5/Surtidor.c ****     *  bytes
 671:.\Generated_Source\PSoC5/Surtidor.c ****     *
 672:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 673:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 674:.\Generated_Source\PSoC5/Surtidor.c ****     *
 675:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 676:.\Generated_Source\PSoC5/Surtidor.c ****     *  uint16: Integer count of the number of bytes left
 677:.\Generated_Source\PSoC5/Surtidor.c ****     *  in the RX buffer
 678:.\Generated_Source\PSoC5/Surtidor.c ****     *
 679:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 680:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferWrite - used to calculate left bytes.
 681:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferRead - used to calculate left bytes.
 682:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferLoopDetect - checked to decide left bytes amount.
 683:.\Generated_Source\PSoC5/Surtidor.c ****     *
 684:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 24


 685:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 686:.\Generated_Source\PSoC5/Surtidor.c ****     *
 687:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
 688:.\Generated_Source\PSoC5/Surtidor.c ****     *  Allows the user to find out how full the RX Buffer is.
 689:.\Generated_Source\PSoC5/Surtidor.c ****     *
 690:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC5/Surtidor.c ****     uint16 Surtidor_GetRxBufferSize(void)
 692:.\Generated_Source\PSoC5/Surtidor.c ****                                                             
 693:.\Generated_Source\PSoC5/Surtidor.c ****     {
 615              		.loc 1 693 0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619 0000 10B5     		push	{r4, lr}
 620              		.cfi_def_cfa_offset 8
 621              		.cfi_offset 4, -8
 622              		.cfi_offset 14, -4
 694:.\Generated_Source\PSoC5/Surtidor.c ****         uint16 size;
 695:.\Generated_Source\PSoC5/Surtidor.c **** 
 696:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH)
 697:.\Generated_Source\PSoC5/Surtidor.c **** 
 698:.\Generated_Source\PSoC5/Surtidor.c ****             /* Disable Rx interrupt. */
 699:.\Generated_Source\PSoC5/Surtidor.c ****             /* Protect variables that could change on interrupt. */
 700:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_RX_INTERRUPT_ENABLED)
 701:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_DisableRxInt();
 623              		.loc 1 701 0
 624 0002 FFF7FEFF 		bl	Surtidor_DisableRxInt
 625              	.LVL50:
 702:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* Surtidor_RX_INTERRUPT_ENABLED */
 703:.\Generated_Source\PSoC5/Surtidor.c **** 
 704:.\Generated_Source\PSoC5/Surtidor.c ****             if(Surtidor_rxBufferRead == Surtidor_rxBufferWrite)
 626              		.loc 1 704 0
 627 0006 154B     		ldr	r3, .L61
 628 0008 5A88     		ldrh	r2, [r3, #2]
 629 000a 92B2     		uxth	r2, r2
 630 000c 9B88     		ldrh	r3, [r3, #4]
 631 000e 9BB2     		uxth	r3, r3
 632 0010 9A42     		cmp	r2, r3
 633 0012 07D1     		bne	.L56
 705:.\Generated_Source\PSoC5/Surtidor.c ****             {
 706:.\Generated_Source\PSoC5/Surtidor.c ****                 if(Surtidor_rxBufferLoopDetect > 0u)
 634              		.loc 1 706 0
 635 0014 114B     		ldr	r3, .L61
 636 0016 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 637 0018 13F0FF0F 		tst	r3, #255
 638 001c 19D0     		beq	.L59
 707:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 708:.\Generated_Source\PSoC5/Surtidor.c ****                     size = Surtidor_RXBUFFERSIZE;
 639              		.loc 1 708 0
 640 001e 4FF48074 		mov	r4, #256
 641 0022 17E0     		b	.L57
 642              	.L56:
 709:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 710:.\Generated_Source\PSoC5/Surtidor.c ****                 else
 711:.\Generated_Source\PSoC5/Surtidor.c ****                 {
 712:.\Generated_Source\PSoC5/Surtidor.c ****                     size = 0u;
 713:.\Generated_Source\PSoC5/Surtidor.c ****                 }
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 25


 714:.\Generated_Source\PSoC5/Surtidor.c ****             }
 715:.\Generated_Source\PSoC5/Surtidor.c ****             else if(Surtidor_rxBufferRead < Surtidor_rxBufferWrite)
 643              		.loc 1 715 0
 644 0024 0D4B     		ldr	r3, .L61
 645 0026 5A88     		ldrh	r2, [r3, #2]
 646 0028 92B2     		uxth	r2, r2
 647 002a 9B88     		ldrh	r3, [r3, #4]
 648 002c 9BB2     		uxth	r3, r3
 649 002e 9A42     		cmp	r2, r3
 650 0030 05D2     		bcs	.L58
 716:.\Generated_Source\PSoC5/Surtidor.c ****             {
 717:.\Generated_Source\PSoC5/Surtidor.c ****                 size = (Surtidor_rxBufferWrite - Surtidor_rxBufferRead);
 651              		.loc 1 717 0
 652 0032 0A4A     		ldr	r2, .L61
 653 0034 9388     		ldrh	r3, [r2, #4]
 654 0036 5488     		ldrh	r4, [r2, #2]
 655 0038 1C1B     		subs	r4, r3, r4
 656 003a A4B2     		uxth	r4, r4
 657              	.LVL51:
 658 003c 0AE0     		b	.L57
 659              	.LVL52:
 660              	.L58:
 718:.\Generated_Source\PSoC5/Surtidor.c ****             }
 719:.\Generated_Source\PSoC5/Surtidor.c ****             else
 720:.\Generated_Source\PSoC5/Surtidor.c ****             {
 721:.\Generated_Source\PSoC5/Surtidor.c ****                 size = (Surtidor_RXBUFFERSIZE - Surtidor_rxBufferRead) + Surtidor_rxBufferWrite;
 661              		.loc 1 721 0
 662 003e 074A     		ldr	r2, .L61
 663 0040 9488     		ldrh	r4, [r2, #4]
 664 0042 A3B2     		uxth	r3, r4
 665 0044 5488     		ldrh	r4, [r2, #2]
 666 0046 A4B2     		uxth	r4, r4
 667 0048 1C1B     		subs	r4, r3, r4
 668 004a 04F58074 		add	r4, r4, #256
 669 004e A4B2     		uxth	r4, r4
 670              	.LVL53:
 671 0050 00E0     		b	.L57
 672              	.LVL54:
 673              	.L59:
 712:.\Generated_Source\PSoC5/Surtidor.c ****                 }
 674              		.loc 1 712 0
 675 0052 0024     		movs	r4, #0
 676              	.L57:
 677              	.LVL55:
 722:.\Generated_Source\PSoC5/Surtidor.c ****             }
 723:.\Generated_Source\PSoC5/Surtidor.c **** 
 724:.\Generated_Source\PSoC5/Surtidor.c ****             /* Enable Rx interrupt. */
 725:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_RX_INTERRUPT_ENABLED)
 726:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_EnableRxInt();
 678              		.loc 1 726 0
 679 0054 FFF7FEFF 		bl	Surtidor_EnableRxInt
 680              	.LVL56:
 727:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_RX_INTERRUPT_ENABLED */
 728:.\Generated_Source\PSoC5/Surtidor.c **** 
 729:.\Generated_Source\PSoC5/Surtidor.c ****         #else /* Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH */
 730:.\Generated_Source\PSoC5/Surtidor.c **** 
 731:.\Generated_Source\PSoC5/Surtidor.c ****             /* We can only know if there is data in the fifo. */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 26


 732:.\Generated_Source\PSoC5/Surtidor.c ****             size = ((Surtidor_RXSTATUS_REG & Surtidor_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 733:.\Generated_Source\PSoC5/Surtidor.c **** 
 734:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH */
 735:.\Generated_Source\PSoC5/Surtidor.c **** 
 736:.\Generated_Source\PSoC5/Surtidor.c ****         return(size);
 737:.\Generated_Source\PSoC5/Surtidor.c ****     }
 681              		.loc 1 737 0
 682 0058 2046     		mov	r0, r4
 683 005a 10BD     		pop	{r4, pc}
 684              	.LVL57:
 685              	.L62:
 686              		.align	2
 687              	.L61:
 688 005c 00000000 		.word	.LANCHOR0
 689              		.cfi_endproc
 690              	.LFE13:
 691              		.size	Surtidor_GetRxBufferSize, .-Surtidor_GetRxBufferSize
 692              		.section	.text.Surtidor_ClearRxBuffer,"ax",%progbits
 693              		.align	2
 694              		.global	Surtidor_ClearRxBuffer
 695              		.thumb
 696              		.thumb_func
 697              		.type	Surtidor_ClearRxBuffer, %function
 698              	Surtidor_ClearRxBuffer:
 699              	.LFB14:
 738:.\Generated_Source\PSoC5/Surtidor.c **** 
 739:.\Generated_Source\PSoC5/Surtidor.c **** 
 740:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 741:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ClearRxBuffer
 742:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 743:.\Generated_Source\PSoC5/Surtidor.c ****     *
 744:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 745:.\Generated_Source\PSoC5/Surtidor.c ****     *  Clears the RX RAM buffer by setting the read and write pointers both to zero.
 746:.\Generated_Source\PSoC5/Surtidor.c ****     *  Clears hardware RX FIFO.
 747:.\Generated_Source\PSoC5/Surtidor.c ****     *
 748:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 749:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 750:.\Generated_Source\PSoC5/Surtidor.c ****     *
 751:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 752:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 753:.\Generated_Source\PSoC5/Surtidor.c ****     *
 754:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 755:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferWrite - cleared to zero.
 756:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferRead - cleared to zero.
 757:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferLoopDetect - cleared to zero.
 758:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxBufferOverflow - cleared to zero.
 759:.\Generated_Source\PSoC5/Surtidor.c ****     *
 760:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 761:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
 762:.\Generated_Source\PSoC5/Surtidor.c ****     *
 763:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
 764:.\Generated_Source\PSoC5/Surtidor.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 765:.\Generated_Source\PSoC5/Surtidor.c ****     *  read and writing will resume at address 0 overwriting any data that may
 766:.\Generated_Source\PSoC5/Surtidor.c ****     *  have remained in the RAM.
 767:.\Generated_Source\PSoC5/Surtidor.c ****     *
 768:.\Generated_Source\PSoC5/Surtidor.c ****     * Side Effects:
 769:.\Generated_Source\PSoC5/Surtidor.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 27


 770:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 771:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_ClearRxBuffer(void) 
 772:.\Generated_Source\PSoC5/Surtidor.c ****     {
 700              		.loc 1 772 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704 0000 08B5     		push	{r3, lr}
 705              		.cfi_def_cfa_offset 8
 706              		.cfi_offset 3, -8
 707              		.cfi_offset 14, -4
 773:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 enableInterrupts;
 774:.\Generated_Source\PSoC5/Surtidor.c **** 
 775:.\Generated_Source\PSoC5/Surtidor.c ****         /* clear the HW FIFO */
 776:.\Generated_Source\PSoC5/Surtidor.c ****         /* Enter critical section */
 777:.\Generated_Source\PSoC5/Surtidor.c ****         enableInterrupts = CyEnterCriticalSection();
 708              		.loc 1 777 0
 709 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 710              	.LVL58:
 778:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXDATA_AUX_CTL_REG |=  Surtidor_RX_FIFO_CLR;
 711              		.loc 1 778 0
 712 0006 0B4B     		ldr	r3, .L65
 713 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 714 000a 42F00102 		orr	r2, r2, #1
 715 000e 1A70     		strb	r2, [r3]
 779:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXDATA_AUX_CTL_REG &= (uint8)~Surtidor_RX_FIFO_CLR;
 716              		.loc 1 779 0
 717 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 718 0012 02F0FE02 		and	r2, r2, #254
 719 0016 1A70     		strb	r2, [r3]
 780:.\Generated_Source\PSoC5/Surtidor.c ****         /* Exit critical section */
 781:.\Generated_Source\PSoC5/Surtidor.c ****         CyExitCriticalSection(enableInterrupts);
 720              		.loc 1 781 0
 721 0018 FFF7FEFF 		bl	CyExitCriticalSection
 722              	.LVL59:
 782:.\Generated_Source\PSoC5/Surtidor.c **** 
 783:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH)
 784:.\Generated_Source\PSoC5/Surtidor.c ****             /* Disable Rx interrupt. */
 785:.\Generated_Source\PSoC5/Surtidor.c ****             /* Protect variables that could change on interrupt. */
 786:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_RX_INTERRUPT_ENABLED)
 787:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_DisableRxInt();
 723              		.loc 1 787 0
 724 001c FFF7FEFF 		bl	Surtidor_DisableRxInt
 725              	.LVL60:
 788:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_RX_INTERRUPT_ENABLED */
 789:.\Generated_Source\PSoC5/Surtidor.c **** 
 790:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_rxBufferRead = 0u;
 726              		.loc 1 790 0
 727 0020 054B     		ldr	r3, .L65+4
 728 0022 0022     		movs	r2, #0
 729 0024 5A80     		strh	r2, [r3, #2]	@ movhi
 791:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_rxBufferWrite = 0u;
 730              		.loc 1 791 0
 731 0026 9A80     		strh	r2, [r3, #4]	@ movhi
 792:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_rxBufferLoopDetect = 0u;
 732              		.loc 1 792 0
 733 0028 9A71     		strb	r2, [r3, #6]
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 28


 793:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_rxBufferOverflow = 0u;
 734              		.loc 1 793 0
 735 002a DA71     		strb	r2, [r3, #7]
 794:.\Generated_Source\PSoC5/Surtidor.c **** 
 795:.\Generated_Source\PSoC5/Surtidor.c ****             /* Enable Rx interrupt. */
 796:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_RX_INTERRUPT_ENABLED)
 797:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_EnableRxInt();
 736              		.loc 1 797 0
 737 002c FFF7FEFF 		bl	Surtidor_EnableRxInt
 738              	.LVL61:
 739 0030 08BD     		pop	{r3, pc}
 740              	.L66:
 741 0032 00BF     		.align	2
 742              	.L65:
 743 0034 9E640040 		.word	1073767582
 744 0038 00000000 		.word	.LANCHOR0
 745              		.cfi_endproc
 746              	.LFE14:
 747              		.size	Surtidor_ClearRxBuffer, .-Surtidor_ClearRxBuffer
 748              		.section	.text.Surtidor_SetRxAddressMode,"ax",%progbits
 749              		.align	2
 750              		.global	Surtidor_SetRxAddressMode
 751              		.thumb
 752              		.thumb_func
 753              		.type	Surtidor_SetRxAddressMode, %function
 754              	Surtidor_SetRxAddressMode:
 755              	.LFB15:
 798:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_RX_INTERRUPT_ENABLED */
 799:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH */
 800:.\Generated_Source\PSoC5/Surtidor.c **** 
 801:.\Generated_Source\PSoC5/Surtidor.c ****     }
 802:.\Generated_Source\PSoC5/Surtidor.c **** 
 803:.\Generated_Source\PSoC5/Surtidor.c **** 
 804:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 805:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetRxAddressMode
 806:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 807:.\Generated_Source\PSoC5/Surtidor.c ****     *
 808:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 809:.\Generated_Source\PSoC5/Surtidor.c ****     *  Set the receive addressing mode
 810:.\Generated_Source\PSoC5/Surtidor.c ****     *
 811:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 812:.\Generated_Source\PSoC5/Surtidor.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 813:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 814:.\Generated_Source\PSoC5/Surtidor.c ****     *                                               detection
 815:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 816:.\Generated_Source\PSoC5/Surtidor.c ****     *                                               address detection
 817:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 818:.\Generated_Source\PSoC5/Surtidor.c ****     *                                               detection
 819:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 820:.\Generated_Source\PSoC5/Surtidor.c ****     *                                               address detection
 821:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor__B_UART__AM_NONE - No address detection
 822:.\Generated_Source\PSoC5/Surtidor.c ****     *
 823:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 824:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 825:.\Generated_Source\PSoC5/Surtidor.c ****     *
 826:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 827:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxAddressMode - the parameter stored in this variable for
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 29


 828:.\Generated_Source\PSoC5/Surtidor.c ****     *   the farther usage in RX ISR.
 829:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_rxAddressDetected - set to initial state (0).
 830:.\Generated_Source\PSoC5/Surtidor.c ****     *
 831:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 832:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetRxAddressMode(uint8 addressMode)
 833:.\Generated_Source\PSoC5/Surtidor.c ****                                                         
 834:.\Generated_Source\PSoC5/Surtidor.c ****     {
 756              		.loc 1 834 0
 757              		.cfi_startproc
 758              		@ args = 0, pretend = 0, frame = 0
 759              		@ frame_needed = 0, uses_anonymous_args = 0
 760              		@ link register save eliminated.
 761              	.LVL62:
 762 0000 7047     		bx	lr
 763              		.cfi_endproc
 764              	.LFE15:
 765              		.size	Surtidor_SetRxAddressMode, .-Surtidor_SetRxAddressMode
 766 0002 00BF     		.section	.text.Surtidor_SetRxAddress1,"ax",%progbits
 767              		.align	2
 768              		.global	Surtidor_SetRxAddress1
 769              		.thumb
 770              		.thumb_func
 771              		.type	Surtidor_SetRxAddress1, %function
 772              	Surtidor_SetRxAddress1:
 773              	.LFB16:
 835:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_RXHW_ADDRESS_ENABLED)
 836:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_CONTROL_REG_REMOVED)
 837:.\Generated_Source\PSoC5/Surtidor.c ****                 if(addressMode != 0u) { }     /* release compiler warning */
 838:.\Generated_Source\PSoC5/Surtidor.c ****             #else /* Surtidor_CONTROL_REG_REMOVED */
 839:.\Generated_Source\PSoC5/Surtidor.c ****                 uint8 tmpCtrl;
 840:.\Generated_Source\PSoC5/Surtidor.c ****                 tmpCtrl = Surtidor_CONTROL_REG & (uint8)~Surtidor_CTRL_RXADDR_MODE_MASK;
 841:.\Generated_Source\PSoC5/Surtidor.c ****                 tmpCtrl |= (uint8)(addressMode << Surtidor_CTRL_RXADDR_MODE0_SHIFT);
 842:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_CONTROL_REG = tmpCtrl;
 843:.\Generated_Source\PSoC5/Surtidor.c ****                 #if(Surtidor_RX_INTERRUPT_ENABLED && \
 844:.\Generated_Source\PSoC5/Surtidor.c ****                    (Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH) )
 845:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_rxAddressMode = addressMode;
 846:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_rxAddressDetected = 0u;
 847:.\Generated_Source\PSoC5/Surtidor.c ****                 #endif /* End Surtidor_RXBUFFERSIZE > Surtidor_FIFO_LENGTH*/
 848:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_CONTROL_REG_REMOVED */
 849:.\Generated_Source\PSoC5/Surtidor.c ****         #else /* Surtidor_RXHW_ADDRESS_ENABLED */
 850:.\Generated_Source\PSoC5/Surtidor.c ****             if(addressMode != 0u) { }     /* release compiler warning */
 851:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_RXHW_ADDRESS_ENABLED */
 852:.\Generated_Source\PSoC5/Surtidor.c ****     }
 853:.\Generated_Source\PSoC5/Surtidor.c **** 
 854:.\Generated_Source\PSoC5/Surtidor.c **** 
 855:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 856:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetRxAddress1
 857:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 858:.\Generated_Source\PSoC5/Surtidor.c ****     *
 859:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 860:.\Generated_Source\PSoC5/Surtidor.c ****     *  Set the first hardware address compare value
 861:.\Generated_Source\PSoC5/Surtidor.c ****     *
 862:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 863:.\Generated_Source\PSoC5/Surtidor.c ****     *  address
 864:.\Generated_Source\PSoC5/Surtidor.c ****     *
 865:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 866:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 30


 867:.\Generated_Source\PSoC5/Surtidor.c ****     *
 868:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 869:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetRxAddress1(uint8 address) 
 870:.\Generated_Source\PSoC5/Surtidor.c **** 
 871:.\Generated_Source\PSoC5/Surtidor.c ****     {
 774              		.loc 1 871 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 0, uses_anonymous_args = 0
 778              		@ link register save eliminated.
 779              	.LVL63:
 872:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXADDRESS1_REG = address;
 780              		.loc 1 872 0
 781 0000 014B     		ldr	r3, .L69
 782 0002 1870     		strb	r0, [r3]
 783 0004 7047     		bx	lr
 784              	.L70:
 785 0006 00BF     		.align	2
 786              	.L69:
 787 0008 2E640040 		.word	1073767470
 788              		.cfi_endproc
 789              	.LFE16:
 790              		.size	Surtidor_SetRxAddress1, .-Surtidor_SetRxAddress1
 791              		.section	.text.Surtidor_SetRxAddress2,"ax",%progbits
 792              		.align	2
 793              		.global	Surtidor_SetRxAddress2
 794              		.thumb
 795              		.thumb_func
 796              		.type	Surtidor_SetRxAddress2, %function
 797              	Surtidor_SetRxAddress2:
 798              	.LFB17:
 873:.\Generated_Source\PSoC5/Surtidor.c ****     }
 874:.\Generated_Source\PSoC5/Surtidor.c **** 
 875:.\Generated_Source\PSoC5/Surtidor.c **** 
 876:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 877:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetRxAddress2
 878:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 879:.\Generated_Source\PSoC5/Surtidor.c ****     *
 880:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 881:.\Generated_Source\PSoC5/Surtidor.c ****     *  Set the second hardware address compare value
 882:.\Generated_Source\PSoC5/Surtidor.c ****     *
 883:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 884:.\Generated_Source\PSoC5/Surtidor.c ****     *  address
 885:.\Generated_Source\PSoC5/Surtidor.c ****     *
 886:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 887:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 888:.\Generated_Source\PSoC5/Surtidor.c ****     *
 889:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 890:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetRxAddress2(uint8 address) 
 891:.\Generated_Source\PSoC5/Surtidor.c ****     {
 799              		.loc 1 891 0
 800              		.cfi_startproc
 801              		@ args = 0, pretend = 0, frame = 0
 802              		@ frame_needed = 0, uses_anonymous_args = 0
 803              		@ link register save eliminated.
 804              	.LVL64:
 892:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_RXADDRESS2_REG = address;
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 31


 805              		.loc 1 892 0
 806 0000 014B     		ldr	r3, .L72
 807 0002 1870     		strb	r0, [r3]
 808 0004 7047     		bx	lr
 809              	.L73:
 810 0006 00BF     		.align	2
 811              	.L72:
 812 0008 3E640040 		.word	1073767486
 813              		.cfi_endproc
 814              	.LFE17:
 815              		.size	Surtidor_SetRxAddress2, .-Surtidor_SetRxAddress2
 816              		.section	.text.Surtidor_SetTxInterruptMode,"ax",%progbits
 817              		.align	2
 818              		.global	Surtidor_SetTxInterruptMode
 819              		.thumb
 820              		.thumb_func
 821              		.type	Surtidor_SetTxInterruptMode, %function
 822              	Surtidor_SetTxInterruptMode:
 823              	.LFB18:
 893:.\Generated_Source\PSoC5/Surtidor.c ****     }
 894:.\Generated_Source\PSoC5/Surtidor.c **** 
 895:.\Generated_Source\PSoC5/Surtidor.c **** #endif  /* Surtidor_RX_ENABLED || Surtidor_HD_ENABLED*/
 896:.\Generated_Source\PSoC5/Surtidor.c **** 
 897:.\Generated_Source\PSoC5/Surtidor.c **** 
 898:.\Generated_Source\PSoC5/Surtidor.c **** #if( (Surtidor_TX_ENABLED) || (Surtidor_HD_ENABLED) )
 899:.\Generated_Source\PSoC5/Surtidor.c **** 
 900:.\Generated_Source\PSoC5/Surtidor.c ****     #if(Surtidor_TX_INTERRUPT_ENABLED)
 901:.\Generated_Source\PSoC5/Surtidor.c **** 
 902:.\Generated_Source\PSoC5/Surtidor.c ****         /*******************************************************************************
 903:.\Generated_Source\PSoC5/Surtidor.c ****         * Function Name: Surtidor_EnableTxInt
 904:.\Generated_Source\PSoC5/Surtidor.c ****         ********************************************************************************
 905:.\Generated_Source\PSoC5/Surtidor.c ****         *
 906:.\Generated_Source\PSoC5/Surtidor.c ****         * Summary:
 907:.\Generated_Source\PSoC5/Surtidor.c ****         *  Enable TX interrupt generation
 908:.\Generated_Source\PSoC5/Surtidor.c ****         *
 909:.\Generated_Source\PSoC5/Surtidor.c ****         * Parameters:
 910:.\Generated_Source\PSoC5/Surtidor.c ****         *  None.
 911:.\Generated_Source\PSoC5/Surtidor.c ****         *
 912:.\Generated_Source\PSoC5/Surtidor.c ****         * Return:
 913:.\Generated_Source\PSoC5/Surtidor.c ****         *  None.
 914:.\Generated_Source\PSoC5/Surtidor.c ****         *
 915:.\Generated_Source\PSoC5/Surtidor.c ****         * Theory:
 916:.\Generated_Source\PSoC5/Surtidor.c ****         *  Enable the interrupt output -or- the interrupt component itself
 917:.\Generated_Source\PSoC5/Surtidor.c ****         *
 918:.\Generated_Source\PSoC5/Surtidor.c ****         *******************************************************************************/
 919:.\Generated_Source\PSoC5/Surtidor.c ****         void Surtidor_EnableTxInt(void) 
 920:.\Generated_Source\PSoC5/Surtidor.c ****         {
 921:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntEnable(Surtidor_TX_VECT_NUM);
 922:.\Generated_Source\PSoC5/Surtidor.c ****         }
 923:.\Generated_Source\PSoC5/Surtidor.c **** 
 924:.\Generated_Source\PSoC5/Surtidor.c **** 
 925:.\Generated_Source\PSoC5/Surtidor.c ****         /*******************************************************************************
 926:.\Generated_Source\PSoC5/Surtidor.c ****         * Function Name: Surtidor_DisableTxInt
 927:.\Generated_Source\PSoC5/Surtidor.c ****         ********************************************************************************
 928:.\Generated_Source\PSoC5/Surtidor.c ****         *
 929:.\Generated_Source\PSoC5/Surtidor.c ****         * Summary:
 930:.\Generated_Source\PSoC5/Surtidor.c ****         *  Disable TX interrupt generation
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 32


 931:.\Generated_Source\PSoC5/Surtidor.c ****         *
 932:.\Generated_Source\PSoC5/Surtidor.c ****         * Parameters:
 933:.\Generated_Source\PSoC5/Surtidor.c ****         *  None.
 934:.\Generated_Source\PSoC5/Surtidor.c ****         *
 935:.\Generated_Source\PSoC5/Surtidor.c ****         * Return:
 936:.\Generated_Source\PSoC5/Surtidor.c ****         *  None.
 937:.\Generated_Source\PSoC5/Surtidor.c ****         *
 938:.\Generated_Source\PSoC5/Surtidor.c ****         * Theory:
 939:.\Generated_Source\PSoC5/Surtidor.c ****         *  Disable the interrupt output -or- the interrupt component itself
 940:.\Generated_Source\PSoC5/Surtidor.c ****         *
 941:.\Generated_Source\PSoC5/Surtidor.c ****         *******************************************************************************/
 942:.\Generated_Source\PSoC5/Surtidor.c ****         void Surtidor_DisableTxInt(void) 
 943:.\Generated_Source\PSoC5/Surtidor.c ****         {
 944:.\Generated_Source\PSoC5/Surtidor.c ****             CyIntDisable(Surtidor_TX_VECT_NUM);
 945:.\Generated_Source\PSoC5/Surtidor.c ****         }
 946:.\Generated_Source\PSoC5/Surtidor.c **** 
 947:.\Generated_Source\PSoC5/Surtidor.c ****     #endif /* Surtidor_TX_INTERRUPT_ENABLED */
 948:.\Generated_Source\PSoC5/Surtidor.c **** 
 949:.\Generated_Source\PSoC5/Surtidor.c **** 
 950:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 951:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetTxInterruptMode
 952:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 953:.\Generated_Source\PSoC5/Surtidor.c ****     *
 954:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 955:.\Generated_Source\PSoC5/Surtidor.c ****     *  Configure which status bits trigger an interrupt event
 956:.\Generated_Source\PSoC5/Surtidor.c ****     *
 957:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 958:.\Generated_Source\PSoC5/Surtidor.c ****     *  intSrc: An or'd combination of the desired status bit masks (defined in
 959:.\Generated_Source\PSoC5/Surtidor.c ****     *          the header file)
 960:.\Generated_Source\PSoC5/Surtidor.c ****     *
 961:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 962:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
 963:.\Generated_Source\PSoC5/Surtidor.c ****     *
 964:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
 965:.\Generated_Source\PSoC5/Surtidor.c ****     *  Enables the output of specific status bits to the interrupt controller
 966:.\Generated_Source\PSoC5/Surtidor.c ****     *
 967:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
 968:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetTxInterruptMode(uint8 intSrc) 
 969:.\Generated_Source\PSoC5/Surtidor.c ****     {
 824              		.loc 1 969 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              		@ link register save eliminated.
 829              	.LVL65:
 970:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXSTATUS_MASK_REG = intSrc;
 830              		.loc 1 970 0
 831 0000 014B     		ldr	r3, .L75
 832 0002 1870     		strb	r0, [r3]
 833 0004 7047     		bx	lr
 834              	.L76:
 835 0006 00BF     		.align	2
 836              	.L75:
 837 0008 86640040 		.word	1073767558
 838              		.cfi_endproc
 839              	.LFE18:
 840              		.size	Surtidor_SetTxInterruptMode, .-Surtidor_SetTxInterruptMode
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 33


 841              		.section	.text.Surtidor_WriteTxData,"ax",%progbits
 842              		.align	2
 843              		.global	Surtidor_WriteTxData
 844              		.thumb
 845              		.thumb_func
 846              		.type	Surtidor_WriteTxData, %function
 847              	Surtidor_WriteTxData:
 848              	.LFB19:
 971:.\Generated_Source\PSoC5/Surtidor.c ****     }
 972:.\Generated_Source\PSoC5/Surtidor.c **** 
 973:.\Generated_Source\PSoC5/Surtidor.c **** 
 974:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
 975:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_WriteTxData
 976:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
 977:.\Generated_Source\PSoC5/Surtidor.c ****     *
 978:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
 979:.\Generated_Source\PSoC5/Surtidor.c ****     *  Write a byte of data to the Transmit FIFO or TX buffer to be sent when the
 980:.\Generated_Source\PSoC5/Surtidor.c ****     *  bus is available. WriteTxData sends a byte without checking for buffer room
 981:.\Generated_Source\PSoC5/Surtidor.c ****     *  or status. It is up to the user to separately check status.
 982:.\Generated_Source\PSoC5/Surtidor.c ****     *
 983:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
 984:.\Generated_Source\PSoC5/Surtidor.c ****     *  TXDataByte: byte of data to place in the transmit FIFO
 985:.\Generated_Source\PSoC5/Surtidor.c ****     *
 986:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
 987:.\Generated_Source\PSoC5/Surtidor.c ****     * void
 988:.\Generated_Source\PSoC5/Surtidor.c ****     *
 989:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
 990:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBuffer - RAM buffer pointer for save data for transmission
 991:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferWrite - cyclic index for write to txBuffer,
 992:.\Generated_Source\PSoC5/Surtidor.c ****     *    incremented after each byte saved to buffer.
 993:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferRead - cyclic index for read from txBuffer,
 994:.\Generated_Source\PSoC5/Surtidor.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 995:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
 996:.\Generated_Source\PSoC5/Surtidor.c ****     *    initialized.
 997:.\Generated_Source\PSoC5/Surtidor.c ****     *
 998:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
 999:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1000:.\Generated_Source\PSoC5/Surtidor.c ****     *
1001:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1002:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_WriteTxData(uint8 txDataByte) 
1003:.\Generated_Source\PSoC5/Surtidor.c ****     {
 849              		.loc 1 1003 0
 850              		.cfi_startproc
 851              		@ args = 0, pretend = 0, frame = 0
 852              		@ frame_needed = 0, uses_anonymous_args = 0
 853              		@ link register save eliminated.
 854              	.LVL66:
1004:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function*/
1005:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 855              		.loc 1 1005 0
 856 0000 024B     		ldr	r3, .L79
 857 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 858 0004 0BB1     		cbz	r3, .L77
1006:.\Generated_Source\PSoC5/Surtidor.c ****         {
1007:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH)
1008:.\Generated_Source\PSoC5/Surtidor.c **** 
1009:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Disable Tx interrupt. */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 34


1010:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Protect variables that could change on interrupt. */
1011:.\Generated_Source\PSoC5/Surtidor.c ****                 #if(Surtidor_TX_INTERRUPT_ENABLED)
1012:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_DisableTxInt();
1013:.\Generated_Source\PSoC5/Surtidor.c ****                 #endif /* End Surtidor_TX_INTERRUPT_ENABLED */
1014:.\Generated_Source\PSoC5/Surtidor.c **** 
1015:.\Generated_Source\PSoC5/Surtidor.c ****                 if( (Surtidor_txBufferRead == Surtidor_txBufferWrite) &&
1016:.\Generated_Source\PSoC5/Surtidor.c ****                     ((Surtidor_TXSTATUS_REG & Surtidor_TX_STS_FIFO_FULL) == 0u) )
1017:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1018:.\Generated_Source\PSoC5/Surtidor.c ****                     /* Add directly to the FIFO. */
1019:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_TXDATA_REG = txDataByte;
1020:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1021:.\Generated_Source\PSoC5/Surtidor.c ****                 else
1022:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1023:.\Generated_Source\PSoC5/Surtidor.c ****                     if(Surtidor_txBufferWrite >= Surtidor_TXBUFFERSIZE)
1024:.\Generated_Source\PSoC5/Surtidor.c ****                     {
1025:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_txBufferWrite = 0u;
1026:.\Generated_Source\PSoC5/Surtidor.c ****                     }
1027:.\Generated_Source\PSoC5/Surtidor.c **** 
1028:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_txBuffer[Surtidor_txBufferWrite] = txDataByte;
1029:.\Generated_Source\PSoC5/Surtidor.c **** 
1030:.\Generated_Source\PSoC5/Surtidor.c ****                     /* Add to the software buffer. */
1031:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_txBufferWrite++;
1032:.\Generated_Source\PSoC5/Surtidor.c **** 
1033:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1034:.\Generated_Source\PSoC5/Surtidor.c **** 
1035:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Enable Tx interrupt. */
1036:.\Generated_Source\PSoC5/Surtidor.c ****                 #if(Surtidor_TX_INTERRUPT_ENABLED)
1037:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_EnableTxInt();
1038:.\Generated_Source\PSoC5/Surtidor.c ****                 #endif /* End Surtidor_TX_INTERRUPT_ENABLED */
1039:.\Generated_Source\PSoC5/Surtidor.c **** 
1040:.\Generated_Source\PSoC5/Surtidor.c ****             #else /* Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH */
1041:.\Generated_Source\PSoC5/Surtidor.c **** 
1042:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Add directly to the FIFO. */
1043:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_TXDATA_REG = txDataByte;
 859              		.loc 1 1043 0
 860 0006 024B     		ldr	r3, .L79+4
 861 0008 1870     		strb	r0, [r3]
 862              	.L77:
 863 000a 7047     		bx	lr
 864              	.L80:
 865              		.align	2
 866              	.L79:
 867 000c 00000000 		.word	.LANCHOR0
 868 0010 46640040 		.word	1073767494
 869              		.cfi_endproc
 870              	.LFE19:
 871              		.size	Surtidor_WriteTxData, .-Surtidor_WriteTxData
 872              		.section	.text.Surtidor_ReadTxStatus,"ax",%progbits
 873              		.align	2
 874              		.global	Surtidor_ReadTxStatus
 875              		.thumb
 876              		.thumb_func
 877              		.type	Surtidor_ReadTxStatus, %function
 878              	Surtidor_ReadTxStatus:
 879              	.LFB20:
1044:.\Generated_Source\PSoC5/Surtidor.c **** 
1045:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 35


1046:.\Generated_Source\PSoC5/Surtidor.c ****         }
1047:.\Generated_Source\PSoC5/Surtidor.c ****     }
1048:.\Generated_Source\PSoC5/Surtidor.c **** 
1049:.\Generated_Source\PSoC5/Surtidor.c **** 
1050:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1051:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ReadTxStatus
1052:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1053:.\Generated_Source\PSoC5/Surtidor.c ****     *
1054:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1055:.\Generated_Source\PSoC5/Surtidor.c ****     *  Read the status register for the component
1056:.\Generated_Source\PSoC5/Surtidor.c ****     *
1057:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1058:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1059:.\Generated_Source\PSoC5/Surtidor.c ****     *
1060:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1061:.\Generated_Source\PSoC5/Surtidor.c ****     *  Contents of the status register
1062:.\Generated_Source\PSoC5/Surtidor.c ****     *
1063:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1064:.\Generated_Source\PSoC5/Surtidor.c ****     *  This function reads the status register which is clear on read. It is up to
1065:.\Generated_Source\PSoC5/Surtidor.c ****     *  the user to handle all bits in this return value accordingly, even if the bit
1066:.\Generated_Source\PSoC5/Surtidor.c ****     *  was not enabled as an interrupt source the event happened and must be handled
1067:.\Generated_Source\PSoC5/Surtidor.c ****     *  accordingly.
1068:.\Generated_Source\PSoC5/Surtidor.c ****     *
1069:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1070:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_ReadTxStatus(void) 
1071:.\Generated_Source\PSoC5/Surtidor.c ****     {
 880              		.loc 1 1071 0
 881              		.cfi_startproc
 882              		@ args = 0, pretend = 0, frame = 0
 883              		@ frame_needed = 0, uses_anonymous_args = 0
 884              		@ link register save eliminated.
1072:.\Generated_Source\PSoC5/Surtidor.c ****         return(Surtidor_TXSTATUS_REG);
 885              		.loc 1 1072 0
 886 0000 014B     		ldr	r3, .L82
 887 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
1073:.\Generated_Source\PSoC5/Surtidor.c ****     }
 888              		.loc 1 1073 0
 889 0004 7047     		bx	lr
 890              	.L83:
 891 0006 00BF     		.align	2
 892              	.L82:
 893 0008 66640040 		.word	1073767526
 894              		.cfi_endproc
 895              	.LFE20:
 896              		.size	Surtidor_ReadTxStatus, .-Surtidor_ReadTxStatus
 897              		.section	.text.Surtidor_PutChar,"ax",%progbits
 898              		.align	2
 899              		.global	Surtidor_PutChar
 900              		.thumb
 901              		.thumb_func
 902              		.type	Surtidor_PutChar, %function
 903              	Surtidor_PutChar:
 904              	.LFB21:
1074:.\Generated_Source\PSoC5/Surtidor.c **** 
1075:.\Generated_Source\PSoC5/Surtidor.c **** 
1076:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1077:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_PutChar
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 36


1078:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1079:.\Generated_Source\PSoC5/Surtidor.c ****     *
1080:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1081:.\Generated_Source\PSoC5/Surtidor.c ****     *  Wait to send byte until TX register or buffer has room.
1082:.\Generated_Source\PSoC5/Surtidor.c ****     *
1083:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1084:.\Generated_Source\PSoC5/Surtidor.c ****     *  txDataByte: The 8-bit data value to send across the UART.
1085:.\Generated_Source\PSoC5/Surtidor.c ****     *
1086:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1087:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1088:.\Generated_Source\PSoC5/Surtidor.c ****     *
1089:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1090:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBuffer - RAM buffer pointer for save data for transmission
1091:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferWrite - cyclic index for write to txBuffer,
1092:.\Generated_Source\PSoC5/Surtidor.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1093:.\Generated_Source\PSoC5/Surtidor.c ****     *     saved to buffer.
1094:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferRead - cyclic index for read from txBuffer,
1095:.\Generated_Source\PSoC5/Surtidor.c ****     *     checked to identify free space in txBuffer.
1096:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1097:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1098:.\Generated_Source\PSoC5/Surtidor.c ****     *
1099:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1100:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1101:.\Generated_Source\PSoC5/Surtidor.c ****     *
1102:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1103:.\Generated_Source\PSoC5/Surtidor.c ****     *  Allows the user to transmit any byte of data in a single transfer
1104:.\Generated_Source\PSoC5/Surtidor.c ****     *
1105:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1106:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_PutChar(uint8 txDataByte) 
1107:.\Generated_Source\PSoC5/Surtidor.c ****     {
 905              		.loc 1 1107 0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 909              		@ link register save eliminated.
 910              	.LVL67:
 911              	.L85:
1108:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH)
1109:.\Generated_Source\PSoC5/Surtidor.c ****                 /* The temporary output pointer is used since it takes two instructions
1110:.\Generated_Source\PSoC5/Surtidor.c ****                 *  to increment with a wrap, and we can't risk doing that with the real
1111:.\Generated_Source\PSoC5/Surtidor.c ****                 *  pointer and getting an interrupt in between instructions.
1112:.\Generated_Source\PSoC5/Surtidor.c ****                 */
1113:.\Generated_Source\PSoC5/Surtidor.c ****                 uint8 loc_txBufferWrite;
1114:.\Generated_Source\PSoC5/Surtidor.c ****                 uint8 loc_txBufferRead;
1115:.\Generated_Source\PSoC5/Surtidor.c **** 
1116:.\Generated_Source\PSoC5/Surtidor.c ****                 do{
1117:.\Generated_Source\PSoC5/Surtidor.c ****                     /* Block if software buffer is full, so we don't overwrite. */
1118:.\Generated_Source\PSoC5/Surtidor.c ****                     #if ((Surtidor_TXBUFFERSIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3))
1119:.\Generated_Source\PSoC5/Surtidor.c ****                         /* Disable TX interrupt to protect variables that could change on interrupt
1120:.\Generated_Source\PSoC5/Surtidor.c ****                         CyIntDisable(Surtidor_TX_VECT_NUM);
1121:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1122:.\Generated_Source\PSoC5/Surtidor.c ****                     loc_txBufferWrite = Surtidor_txBufferWrite;
1123:.\Generated_Source\PSoC5/Surtidor.c ****                     loc_txBufferRead = Surtidor_txBufferRead;
1124:.\Generated_Source\PSoC5/Surtidor.c ****                     #if ((Surtidor_TXBUFFERSIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3))
1125:.\Generated_Source\PSoC5/Surtidor.c ****                         /* Enable interrupt to continue transmission */
1126:.\Generated_Source\PSoC5/Surtidor.c ****                         CyIntEnable(Surtidor_TX_VECT_NUM);
1127:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* End TXBUFFERSIZE > 255 */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 37


1128:.\Generated_Source\PSoC5/Surtidor.c ****                 }while( (loc_txBufferWrite < loc_txBufferRead) ? (loc_txBufferWrite == (loc_txBuffe
1129:.\Generated_Source\PSoC5/Surtidor.c ****                                         ((loc_txBufferWrite - loc_txBufferRead) ==
1130:.\Generated_Source\PSoC5/Surtidor.c ****                                         (uint8)(Surtidor_TXBUFFERSIZE - 1u)) );
1131:.\Generated_Source\PSoC5/Surtidor.c **** 
1132:.\Generated_Source\PSoC5/Surtidor.c ****                 if( (loc_txBufferRead == loc_txBufferWrite) &&
1133:.\Generated_Source\PSoC5/Surtidor.c ****                     ((Surtidor_TXSTATUS_REG & Surtidor_TX_STS_FIFO_FULL) == 0u) )
1134:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1135:.\Generated_Source\PSoC5/Surtidor.c ****                     /* Add directly to the FIFO. */
1136:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_TXDATA_REG = txDataByte;
1137:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1138:.\Generated_Source\PSoC5/Surtidor.c ****                 else
1139:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1140:.\Generated_Source\PSoC5/Surtidor.c ****                     if(loc_txBufferWrite >= Surtidor_TXBUFFERSIZE)
1141:.\Generated_Source\PSoC5/Surtidor.c ****                     {
1142:.\Generated_Source\PSoC5/Surtidor.c ****                         loc_txBufferWrite = 0u;
1143:.\Generated_Source\PSoC5/Surtidor.c ****                     }
1144:.\Generated_Source\PSoC5/Surtidor.c ****                     /* Add to the software buffer. */
1145:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_txBuffer[loc_txBufferWrite] = txDataByte;
1146:.\Generated_Source\PSoC5/Surtidor.c ****                     loc_txBufferWrite++;
1147:.\Generated_Source\PSoC5/Surtidor.c **** 
1148:.\Generated_Source\PSoC5/Surtidor.c ****                     /* Finally, update the real output pointer */
1149:.\Generated_Source\PSoC5/Surtidor.c ****                     #if ((Surtidor_TXBUFFERSIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3))
1150:.\Generated_Source\PSoC5/Surtidor.c ****                         CyIntDisable(Surtidor_TX_VECT_NUM);
1151:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1152:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_txBufferWrite = loc_txBufferWrite;
1153:.\Generated_Source\PSoC5/Surtidor.c ****                     #if ((Surtidor_TXBUFFERSIZE > Surtidor_MAX_BYTE_VALUE) && (CY_PSOC3))
1154:.\Generated_Source\PSoC5/Surtidor.c ****                         CyIntEnable(Surtidor_TX_VECT_NUM);
1155:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* End TXBUFFERSIZE > 255 */
1156:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1157:.\Generated_Source\PSoC5/Surtidor.c **** 
1158:.\Generated_Source\PSoC5/Surtidor.c ****             #else /* Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH */
1159:.\Generated_Source\PSoC5/Surtidor.c **** 
1160:.\Generated_Source\PSoC5/Surtidor.c ****                 while((Surtidor_TXSTATUS_REG & Surtidor_TX_STS_FIFO_FULL) != 0u)
 912              		.loc 1 1160 0 discriminator 1
 913 0000 034B     		ldr	r3, .L86
 914 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 915 0004 13F0040F 		tst	r3, #4
 916 0008 FAD1     		bne	.L85
1161:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1162:.\Generated_Source\PSoC5/Surtidor.c ****                     ; /* Wait for room in the FIFO. */
1163:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1164:.\Generated_Source\PSoC5/Surtidor.c **** 
1165:.\Generated_Source\PSoC5/Surtidor.c ****                 /* Add directly to the FIFO. */
1166:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_TXDATA_REG = txDataByte;
 917              		.loc 1 1166 0
 918 000a 024B     		ldr	r3, .L86+4
 919 000c 1870     		strb	r0, [r3]
 920 000e 7047     		bx	lr
 921              	.L87:
 922              		.align	2
 923              	.L86:
 924 0010 66640040 		.word	1073767526
 925 0014 46640040 		.word	1073767494
 926              		.cfi_endproc
 927              	.LFE21:
 928              		.size	Surtidor_PutChar, .-Surtidor_PutChar
 929              		.section	.text.Surtidor_PutString,"ax",%progbits
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 38


 930              		.align	2
 931              		.global	Surtidor_PutString
 932              		.thumb
 933              		.thumb_func
 934              		.type	Surtidor_PutString, %function
 935              	Surtidor_PutString:
 936              	.LFB22:
1167:.\Generated_Source\PSoC5/Surtidor.c **** 
1168:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH */
1169:.\Generated_Source\PSoC5/Surtidor.c ****     }
1170:.\Generated_Source\PSoC5/Surtidor.c **** 
1171:.\Generated_Source\PSoC5/Surtidor.c **** 
1172:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1173:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_PutString
1174:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1175:.\Generated_Source\PSoC5/Surtidor.c ****     *
1176:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1177:.\Generated_Source\PSoC5/Surtidor.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1178:.\Generated_Source\PSoC5/Surtidor.c ****     *
1179:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1180:.\Generated_Source\PSoC5/Surtidor.c ****     *  string: char pointer to character string of Data to Send.
1181:.\Generated_Source\PSoC5/Surtidor.c ****     *
1182:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1183:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1184:.\Generated_Source\PSoC5/Surtidor.c ****     *
1185:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1186:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1187:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1188:.\Generated_Source\PSoC5/Surtidor.c ****     *
1189:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1190:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1191:.\Generated_Source\PSoC5/Surtidor.c ****     *
1192:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1193:.\Generated_Source\PSoC5/Surtidor.c ****     *  This function will block if there is not enough memory to place the whole
1194:.\Generated_Source\PSoC5/Surtidor.c ****     *  string, it will block until the entire string has been written to the
1195:.\Generated_Source\PSoC5/Surtidor.c ****     *  transmit buffer.
1196:.\Generated_Source\PSoC5/Surtidor.c ****     *
1197:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1198:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_PutString(const char8 string[]) 
1199:.\Generated_Source\PSoC5/Surtidor.c ****     {
 937              		.loc 1 1199 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 0
 940              		@ frame_needed = 0, uses_anonymous_args = 0
 941              	.LVL68:
 942 0000 38B5     		push	{r3, r4, r5, lr}
 943              		.cfi_def_cfa_offset 16
 944              		.cfi_offset 3, -16
 945              		.cfi_offset 4, -12
 946              		.cfi_offset 5, -8
 947              		.cfi_offset 14, -4
 948              	.LVL69:
1200:.\Generated_Source\PSoC5/Surtidor.c ****         uint16 buf_index = 0u;
1201:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function*/
1202:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 949              		.loc 1 1202 0
 950 0002 074B     		ldr	r3, .L94
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 39


 951 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952 0006 2BB9     		cbnz	r3, .L92
 953 0008 38BD     		pop	{r3, r4, r5, pc}
 954              	.LVL70:
 955              	.L91:
1203:.\Generated_Source\PSoC5/Surtidor.c ****         {
1204:.\Generated_Source\PSoC5/Surtidor.c ****             /* This is a blocking function, it will not exit until all data is sent*/
1205:.\Generated_Source\PSoC5/Surtidor.c ****             while(string[buf_index] != (char8)0)
1206:.\Generated_Source\PSoC5/Surtidor.c ****             {
1207:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_PutChar((uint8)string[buf_index]);
 956              		.loc 1 1207 0
 957 000a FFF7FEFF 		bl	Surtidor_PutChar
 958              	.LVL71:
1208:.\Generated_Source\PSoC5/Surtidor.c ****                 buf_index++;
 959              		.loc 1 1208 0
 960 000e 0134     		adds	r4, r4, #1
 961              	.LVL72:
 962 0010 A4B2     		uxth	r4, r4
 963              	.LVL73:
 964 0012 01E0     		b	.L89
 965              	.LVL74:
 966              	.L92:
 967 0014 0546     		mov	r5, r0
 968 0016 0024     		movs	r4, #0
 969              	.LVL75:
 970              	.L89:
1205:.\Generated_Source\PSoC5/Surtidor.c ****             {
 971              		.loc 1 1205 0
 972 0018 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 973 001a 0028     		cmp	r0, #0
 974 001c F5D1     		bne	.L91
 975 001e 38BD     		pop	{r3, r4, r5, pc}
 976              	.LVL76:
 977              	.L95:
 978              		.align	2
 979              	.L94:
 980 0020 00000000 		.word	.LANCHOR0
 981              		.cfi_endproc
 982              	.LFE22:
 983              		.size	Surtidor_PutString, .-Surtidor_PutString
 984              		.section	.text.Surtidor_PutArray,"ax",%progbits
 985              		.align	2
 986              		.global	Surtidor_PutArray
 987              		.thumb
 988              		.thumb_func
 989              		.type	Surtidor_PutArray, %function
 990              	Surtidor_PutArray:
 991              	.LFB23:
1209:.\Generated_Source\PSoC5/Surtidor.c ****             }
1210:.\Generated_Source\PSoC5/Surtidor.c ****         }
1211:.\Generated_Source\PSoC5/Surtidor.c ****     }
1212:.\Generated_Source\PSoC5/Surtidor.c **** 
1213:.\Generated_Source\PSoC5/Surtidor.c **** 
1214:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1215:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_PutArray
1216:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1217:.\Generated_Source\PSoC5/Surtidor.c ****     *
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 40


1218:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1219:.\Generated_Source\PSoC5/Surtidor.c ****     *  Write a Sequence of bytes on the Transmit line. Data comes from RAM or ROM.
1220:.\Generated_Source\PSoC5/Surtidor.c ****     *
1221:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1222:.\Generated_Source\PSoC5/Surtidor.c ****     *  string: Address of the memory array residing in RAM or ROM.
1223:.\Generated_Source\PSoC5/Surtidor.c ****     *  byteCount: Number of Bytes to be transmitted.
1224:.\Generated_Source\PSoC5/Surtidor.c ****     *
1225:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1226:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1227:.\Generated_Source\PSoC5/Surtidor.c ****     *
1228:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1229:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1230:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1231:.\Generated_Source\PSoC5/Surtidor.c ****     *
1232:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1233:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1234:.\Generated_Source\PSoC5/Surtidor.c ****     *
1235:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1236:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_PutArray(const uint8 string[], uint8 byteCount)
1237:.\Generated_Source\PSoC5/Surtidor.c ****                                                                     
1238:.\Generated_Source\PSoC5/Surtidor.c ****     {
 992              		.loc 1 1238 0
 993              		.cfi_startproc
 994              		@ args = 0, pretend = 0, frame = 0
 995              		@ frame_needed = 0, uses_anonymous_args = 0
 996              	.LVL77:
1239:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 buf_index = 0u;
1240:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function*/
1241:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 997              		.loc 1 1241 0
 998 0000 074B     		ldr	r3, .L101
 999 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1000 0004 5BB1     		cbz	r3, .L100
1238:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 buf_index = 0u;
 1001              		.loc 1 1238 0
 1002 0006 70B5     		push	{r4, r5, r6, lr}
 1003              		.cfi_def_cfa_offset 16
 1004              		.cfi_offset 4, -16
 1005              		.cfi_offset 5, -12
 1006              		.cfi_offset 6, -8
 1007              		.cfi_offset 14, -4
 1008 0008 0E46     		mov	r6, r1
 1009 000a 0546     		mov	r5, r0
 1010 000c 0024     		movs	r4, #0
 1011              	.LVL78:
 1012              	.L98:
1242:.\Generated_Source\PSoC5/Surtidor.c ****         {
1243:.\Generated_Source\PSoC5/Surtidor.c ****             do
1244:.\Generated_Source\PSoC5/Surtidor.c ****             {
1245:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_PutChar(string[buf_index]);
 1013              		.loc 1 1245 0 discriminator 1
 1014 000e 285D     		ldrb	r0, [r5, r4]	@ zero_extendqisi2
 1015 0010 FFF7FEFF 		bl	Surtidor_PutChar
 1016              	.LVL79:
1246:.\Generated_Source\PSoC5/Surtidor.c ****                 buf_index++;
 1017              		.loc 1 1246 0 discriminator 1
 1018 0014 0134     		adds	r4, r4, #1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 41


 1019              	.LVL80:
 1020 0016 E4B2     		uxtb	r4, r4
 1021              	.LVL81:
1247:.\Generated_Source\PSoC5/Surtidor.c ****             }while(buf_index < byteCount);
 1022              		.loc 1 1247 0 discriminator 1
 1023 0018 B442     		cmp	r4, r6
 1024 001a F8D3     		bcc	.L98
 1025 001c 70BD     		pop	{r4, r5, r6, pc}
 1026              	.LVL82:
 1027              	.L100:
 1028              		.cfi_def_cfa_offset 0
 1029              		.cfi_restore 4
 1030              		.cfi_restore 5
 1031              		.cfi_restore 6
 1032              		.cfi_restore 14
 1033 001e 7047     		bx	lr
 1034              	.L102:
 1035              		.align	2
 1036              	.L101:
 1037 0020 00000000 		.word	.LANCHOR0
 1038              		.cfi_endproc
 1039              	.LFE23:
 1040              		.size	Surtidor_PutArray, .-Surtidor_PutArray
 1041              		.section	.text.Surtidor_PutCRLF,"ax",%progbits
 1042              		.align	2
 1043              		.global	Surtidor_PutCRLF
 1044              		.thumb
 1045              		.thumb_func
 1046              		.type	Surtidor_PutCRLF, %function
 1047              	Surtidor_PutCRLF:
 1048              	.LFB24:
1248:.\Generated_Source\PSoC5/Surtidor.c ****         }
1249:.\Generated_Source\PSoC5/Surtidor.c ****     }
1250:.\Generated_Source\PSoC5/Surtidor.c **** 
1251:.\Generated_Source\PSoC5/Surtidor.c **** 
1252:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1253:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_PutCRLF
1254:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1255:.\Generated_Source\PSoC5/Surtidor.c ****     *
1256:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1257:.\Generated_Source\PSoC5/Surtidor.c ****     *  Write a character and then carriage return and line feed.
1258:.\Generated_Source\PSoC5/Surtidor.c ****     *
1259:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1260:.\Generated_Source\PSoC5/Surtidor.c ****     *  txDataByte: uint8 Character to send.
1261:.\Generated_Source\PSoC5/Surtidor.c ****     *
1262:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1263:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1264:.\Generated_Source\PSoC5/Surtidor.c ****     *
1265:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1266:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1267:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1268:.\Generated_Source\PSoC5/Surtidor.c ****     *
1269:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1270:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1271:.\Generated_Source\PSoC5/Surtidor.c ****     *
1272:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1273:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_PutCRLF(uint8 txDataByte) 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 42


1274:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1049              		.loc 1 1274 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 0, uses_anonymous_args = 0
 1053              	.LVL83:
 1054 0000 08B5     		push	{r3, lr}
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 3, -8
 1057              		.cfi_offset 14, -4
1275:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function*/
1276:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 1058              		.loc 1 1276 0
 1059 0002 064B     		ldr	r3, .L106
 1060 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1061 0006 3BB1     		cbz	r3, .L103
1277:.\Generated_Source\PSoC5/Surtidor.c ****         {
1278:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_PutChar(txDataByte);
 1062              		.loc 1 1278 0
 1063 0008 FFF7FEFF 		bl	Surtidor_PutChar
 1064              	.LVL84:
1279:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_PutChar(0x0Du);
 1065              		.loc 1 1279 0
 1066 000c 0D20     		movs	r0, #13
 1067 000e FFF7FEFF 		bl	Surtidor_PutChar
 1068              	.LVL85:
1280:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_PutChar(0x0Au);
 1069              		.loc 1 1280 0
 1070 0012 0A20     		movs	r0, #10
 1071 0014 FFF7FEFF 		bl	Surtidor_PutChar
 1072              	.LVL86:
 1073              	.L103:
 1074 0018 08BD     		pop	{r3, pc}
 1075              	.L107:
 1076 001a 00BF     		.align	2
 1077              	.L106:
 1078 001c 00000000 		.word	.LANCHOR0
 1079              		.cfi_endproc
 1080              	.LFE24:
 1081              		.size	Surtidor_PutCRLF, .-Surtidor_PutCRLF
 1082              		.section	.text.Surtidor_GetTxBufferSize,"ax",%progbits
 1083              		.align	2
 1084              		.global	Surtidor_GetTxBufferSize
 1085              		.thumb
 1086              		.thumb_func
 1087              		.type	Surtidor_GetTxBufferSize, %function
 1088              	Surtidor_GetTxBufferSize:
 1089              	.LFB25:
1281:.\Generated_Source\PSoC5/Surtidor.c ****         }
1282:.\Generated_Source\PSoC5/Surtidor.c ****     }
1283:.\Generated_Source\PSoC5/Surtidor.c **** 
1284:.\Generated_Source\PSoC5/Surtidor.c **** 
1285:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1286:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_GetTxBufferSize
1287:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1288:.\Generated_Source\PSoC5/Surtidor.c ****     *
1289:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 43


1290:.\Generated_Source\PSoC5/Surtidor.c ****     *  Determine the amount of space left in the TX buffer and return the count in
1291:.\Generated_Source\PSoC5/Surtidor.c ****     *  bytes
1292:.\Generated_Source\PSoC5/Surtidor.c ****     *
1293:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1294:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1295:.\Generated_Source\PSoC5/Surtidor.c ****     *
1296:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1297:.\Generated_Source\PSoC5/Surtidor.c ****     *  Integer count of the number of bytes left in the TX buffer
1298:.\Generated_Source\PSoC5/Surtidor.c ****     *
1299:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1300:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferWrite - used to calculate left space.
1301:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferRead - used to calculate left space.
1302:.\Generated_Source\PSoC5/Surtidor.c ****     *
1303:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1304:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1305:.\Generated_Source\PSoC5/Surtidor.c ****     *
1306:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1307:.\Generated_Source\PSoC5/Surtidor.c ****     *  Allows the user to find out how full the TX Buffer is.
1308:.\Generated_Source\PSoC5/Surtidor.c ****     *
1309:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1310:.\Generated_Source\PSoC5/Surtidor.c ****     uint8 Surtidor_GetTxBufferSize(void)
1311:.\Generated_Source\PSoC5/Surtidor.c ****                                                             
1312:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1090              		.loc 1 1312 0
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 0, uses_anonymous_args = 0
 1094              		@ link register save eliminated.
1313:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 size;
1314:.\Generated_Source\PSoC5/Surtidor.c **** 
1315:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH)
1316:.\Generated_Source\PSoC5/Surtidor.c **** 
1317:.\Generated_Source\PSoC5/Surtidor.c ****             /* Disable Tx interrupt. */
1318:.\Generated_Source\PSoC5/Surtidor.c ****             /* Protect variables that could change on interrupt. */
1319:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_TX_INTERRUPT_ENABLED)
1320:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_DisableTxInt();
1321:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_TX_INTERRUPT_ENABLED */
1322:.\Generated_Source\PSoC5/Surtidor.c **** 
1323:.\Generated_Source\PSoC5/Surtidor.c ****             if(Surtidor_txBufferRead == Surtidor_txBufferWrite)
1324:.\Generated_Source\PSoC5/Surtidor.c ****             {
1325:.\Generated_Source\PSoC5/Surtidor.c ****                 size = 0u;
1326:.\Generated_Source\PSoC5/Surtidor.c ****             }
1327:.\Generated_Source\PSoC5/Surtidor.c ****             else if(Surtidor_txBufferRead < Surtidor_txBufferWrite)
1328:.\Generated_Source\PSoC5/Surtidor.c ****             {
1329:.\Generated_Source\PSoC5/Surtidor.c ****                 size = (Surtidor_txBufferWrite - Surtidor_txBufferRead);
1330:.\Generated_Source\PSoC5/Surtidor.c ****             }
1331:.\Generated_Source\PSoC5/Surtidor.c ****             else
1332:.\Generated_Source\PSoC5/Surtidor.c ****             {
1333:.\Generated_Source\PSoC5/Surtidor.c ****                 size = (Surtidor_TXBUFFERSIZE - Surtidor_txBufferRead) + Surtidor_txBufferWrite;
1334:.\Generated_Source\PSoC5/Surtidor.c ****             }
1335:.\Generated_Source\PSoC5/Surtidor.c **** 
1336:.\Generated_Source\PSoC5/Surtidor.c ****             /* Enable Tx interrupt. */
1337:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_TX_INTERRUPT_ENABLED)
1338:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_EnableTxInt();
1339:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_TX_INTERRUPT_ENABLED */
1340:.\Generated_Source\PSoC5/Surtidor.c **** 
1341:.\Generated_Source\PSoC5/Surtidor.c ****         #else /* Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH */
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 44


1342:.\Generated_Source\PSoC5/Surtidor.c **** 
1343:.\Generated_Source\PSoC5/Surtidor.c ****             size = Surtidor_TXSTATUS_REG;
 1095              		.loc 1 1343 0
 1096 0000 074B     		ldr	r3, .L112
 1097 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1098 0004 DBB2     		uxtb	r3, r3
 1099              	.LVL87:
1344:.\Generated_Source\PSoC5/Surtidor.c **** 
1345:.\Generated_Source\PSoC5/Surtidor.c ****             /* Is the fifo is full. */
1346:.\Generated_Source\PSoC5/Surtidor.c ****             if((size & Surtidor_TX_STS_FIFO_FULL) != 0u)
 1100              		.loc 1 1346 0
 1101 0006 13F0040F 		tst	r3, #4
 1102 000a 04D1     		bne	.L110
1347:.\Generated_Source\PSoC5/Surtidor.c ****             {
1348:.\Generated_Source\PSoC5/Surtidor.c ****                 size = Surtidor_FIFO_LENGTH;
1349:.\Generated_Source\PSoC5/Surtidor.c ****             }
1350:.\Generated_Source\PSoC5/Surtidor.c ****             else if((size & Surtidor_TX_STS_FIFO_EMPTY) != 0u)
 1103              		.loc 1 1350 0
 1104 000c 13F0020F 		tst	r3, #2
 1105 0010 03D0     		beq	.L111
1351:.\Generated_Source\PSoC5/Surtidor.c ****             {
1352:.\Generated_Source\PSoC5/Surtidor.c ****                 size = 0u;
 1106              		.loc 1 1352 0
 1107 0012 0020     		movs	r0, #0
 1108 0014 7047     		bx	lr
 1109              	.L110:
1348:.\Generated_Source\PSoC5/Surtidor.c ****             }
 1110              		.loc 1 1348 0
 1111 0016 0420     		movs	r0, #4
 1112 0018 7047     		bx	lr
 1113              	.L111:
1353:.\Generated_Source\PSoC5/Surtidor.c ****             }
1354:.\Generated_Source\PSoC5/Surtidor.c ****             else
1355:.\Generated_Source\PSoC5/Surtidor.c ****             {
1356:.\Generated_Source\PSoC5/Surtidor.c ****                 /* We only know there is data in the fifo. */
1357:.\Generated_Source\PSoC5/Surtidor.c ****                 size = 1u;
 1114              		.loc 1 1357 0
 1115 001a 0120     		movs	r0, #1
 1116              	.LVL88:
1358:.\Generated_Source\PSoC5/Surtidor.c ****             }
1359:.\Generated_Source\PSoC5/Surtidor.c **** 
1360:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH */
1361:.\Generated_Source\PSoC5/Surtidor.c **** 
1362:.\Generated_Source\PSoC5/Surtidor.c ****         return(size);
1363:.\Generated_Source\PSoC5/Surtidor.c ****     }
 1117              		.loc 1 1363 0
 1118 001c 7047     		bx	lr
 1119              	.L113:
 1120 001e 00BF     		.align	2
 1121              	.L112:
 1122 0020 66640040 		.word	1073767526
 1123              		.cfi_endproc
 1124              	.LFE25:
 1125              		.size	Surtidor_GetTxBufferSize, .-Surtidor_GetTxBufferSize
 1126              		.section	.text.Surtidor_ClearTxBuffer,"ax",%progbits
 1127              		.align	2
 1128              		.global	Surtidor_ClearTxBuffer
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 45


 1129              		.thumb
 1130              		.thumb_func
 1131              		.type	Surtidor_ClearTxBuffer, %function
 1132              	Surtidor_ClearTxBuffer:
 1133              	.LFB26:
1364:.\Generated_Source\PSoC5/Surtidor.c **** 
1365:.\Generated_Source\PSoC5/Surtidor.c **** 
1366:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1367:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_ClearTxBuffer
1368:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1369:.\Generated_Source\PSoC5/Surtidor.c ****     *
1370:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1371:.\Generated_Source\PSoC5/Surtidor.c ****     *  Clears the TX RAM buffer by setting the read and write pointers both to zero.
1372:.\Generated_Source\PSoC5/Surtidor.c ****     *  Clears the hardware TX FIFO.  Any data present in the FIFO will not be sent.
1373:.\Generated_Source\PSoC5/Surtidor.c ****     *
1374:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1375:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1376:.\Generated_Source\PSoC5/Surtidor.c ****     *
1377:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1378:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1379:.\Generated_Source\PSoC5/Surtidor.c ****     *
1380:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1381:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferWrite - cleared to zero.
1382:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_txBufferRead - cleared to zero.
1383:.\Generated_Source\PSoC5/Surtidor.c ****     *
1384:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1385:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1386:.\Generated_Source\PSoC5/Surtidor.c ****     *
1387:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1388:.\Generated_Source\PSoC5/Surtidor.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1389:.\Generated_Source\PSoC5/Surtidor.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1390:.\Generated_Source\PSoC5/Surtidor.c ****     *  remained in the RAM.
1391:.\Generated_Source\PSoC5/Surtidor.c ****     *
1392:.\Generated_Source\PSoC5/Surtidor.c ****     * Side Effects:
1393:.\Generated_Source\PSoC5/Surtidor.c ****     *  Any received data not read from the RAM buffer will be lost when overwritten.
1394:.\Generated_Source\PSoC5/Surtidor.c ****     *
1395:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1396:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_ClearTxBuffer(void) 
1397:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1134              		.loc 1 1397 0
 1135              		.cfi_startproc
 1136              		@ args = 0, pretend = 0, frame = 0
 1137              		@ frame_needed = 0, uses_anonymous_args = 0
 1138 0000 08B5     		push	{r3, lr}
 1139              		.cfi_def_cfa_offset 8
 1140              		.cfi_offset 3, -8
 1141              		.cfi_offset 14, -4
1398:.\Generated_Source\PSoC5/Surtidor.c ****         uint8 enableInterrupts;
1399:.\Generated_Source\PSoC5/Surtidor.c **** 
1400:.\Generated_Source\PSoC5/Surtidor.c ****         /* Enter critical section */
1401:.\Generated_Source\PSoC5/Surtidor.c ****         enableInterrupts = CyEnterCriticalSection();
 1142              		.loc 1 1401 0
 1143 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 1144              	.LVL89:
1402:.\Generated_Source\PSoC5/Surtidor.c ****         /* clear the HW FIFO */
1403:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXDATA_AUX_CTL_REG |=  Surtidor_TX_FIFO_CLR;
 1145              		.loc 1 1403 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 46


 1146 0006 064B     		ldr	r3, .L116
 1147 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1148 000a 42F00102 		orr	r2, r2, #1
 1149 000e 1A70     		strb	r2, [r3]
1404:.\Generated_Source\PSoC5/Surtidor.c ****         Surtidor_TXDATA_AUX_CTL_REG &= (uint8)~Surtidor_TX_FIFO_CLR;
 1150              		.loc 1 1404 0
 1151 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1152 0012 02F0FE02 		and	r2, r2, #254
 1153 0016 1A70     		strb	r2, [r3]
1405:.\Generated_Source\PSoC5/Surtidor.c ****         /* Exit critical section */
1406:.\Generated_Source\PSoC5/Surtidor.c ****         CyExitCriticalSection(enableInterrupts);
 1154              		.loc 1 1406 0
 1155 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1156              	.LVL90:
 1157 001c 08BD     		pop	{r3, pc}
 1158              	.L117:
 1159 001e 00BF     		.align	2
 1160              	.L116:
 1161 0020 96640040 		.word	1073767574
 1162              		.cfi_endproc
 1163              	.LFE26:
 1164              		.size	Surtidor_ClearTxBuffer, .-Surtidor_ClearTxBuffer
 1165              		.section	.text.Surtidor_SendBreak,"ax",%progbits
 1166              		.align	2
 1167              		.global	Surtidor_SendBreak
 1168              		.thumb
 1169              		.thumb_func
 1170              		.type	Surtidor_SendBreak, %function
 1171              	Surtidor_SendBreak:
 1172              	.LFB27:
1407:.\Generated_Source\PSoC5/Surtidor.c **** 
1408:.\Generated_Source\PSoC5/Surtidor.c ****         #if(Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH)
1409:.\Generated_Source\PSoC5/Surtidor.c **** 
1410:.\Generated_Source\PSoC5/Surtidor.c ****             /* Disable Tx interrupt. */
1411:.\Generated_Source\PSoC5/Surtidor.c ****             /* Protect variables that could change on interrupt. */
1412:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_TX_INTERRUPT_ENABLED)
1413:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_DisableTxInt();
1414:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_TX_INTERRUPT_ENABLED */
1415:.\Generated_Source\PSoC5/Surtidor.c **** 
1416:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_txBufferRead = 0u;
1417:.\Generated_Source\PSoC5/Surtidor.c ****             Surtidor_txBufferWrite = 0u;
1418:.\Generated_Source\PSoC5/Surtidor.c **** 
1419:.\Generated_Source\PSoC5/Surtidor.c ****             /* Enable Tx interrupt. */
1420:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_TX_INTERRUPT_ENABLED)
1421:.\Generated_Source\PSoC5/Surtidor.c ****                 Surtidor_EnableTxInt();
1422:.\Generated_Source\PSoC5/Surtidor.c ****             #endif /* End Surtidor_TX_INTERRUPT_ENABLED */
1423:.\Generated_Source\PSoC5/Surtidor.c **** 
1424:.\Generated_Source\PSoC5/Surtidor.c ****         #endif /* End Surtidor_TXBUFFERSIZE > Surtidor_FIFO_LENGTH */
1425:.\Generated_Source\PSoC5/Surtidor.c ****     }
1426:.\Generated_Source\PSoC5/Surtidor.c **** 
1427:.\Generated_Source\PSoC5/Surtidor.c **** 
1428:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1429:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SendBreak
1430:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1431:.\Generated_Source\PSoC5/Surtidor.c ****     *
1432:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1433:.\Generated_Source\PSoC5/Surtidor.c ****     *  Write a Break command to the UART
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 47


1434:.\Generated_Source\PSoC5/Surtidor.c ****     *
1435:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1436:.\Generated_Source\PSoC5/Surtidor.c ****     *  uint8 retMode:  Wait mode,
1437:.\Generated_Source\PSoC5/Surtidor.c ****     *   0 - Initialize registers for Break, sends the Break signal and return
1438:.\Generated_Source\PSoC5/Surtidor.c ****     *       imediately.
1439:.\Generated_Source\PSoC5/Surtidor.c ****     *   1 - Wait until Break sending is complete, reinitialize registers to normal
1440:.\Generated_Source\PSoC5/Surtidor.c ****     *       transmission mode then return.
1441:.\Generated_Source\PSoC5/Surtidor.c ****     *   2 - Reinitialize registers to normal transmission mode then return.
1442:.\Generated_Source\PSoC5/Surtidor.c ****     *   3 - both steps: 0 and 1
1443:.\Generated_Source\PSoC5/Surtidor.c ****     *       init registers for Break, send Break signal
1444:.\Generated_Source\PSoC5/Surtidor.c ****     *       wait until Break sending is complete, reinit registers to normal
1445:.\Generated_Source\PSoC5/Surtidor.c ****     *       transmission mode then return.
1446:.\Generated_Source\PSoC5/Surtidor.c ****     *
1447:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1448:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1449:.\Generated_Source\PSoC5/Surtidor.c ****     *
1450:.\Generated_Source\PSoC5/Surtidor.c ****     * Global Variables:
1451:.\Generated_Source\PSoC5/Surtidor.c ****     *  Surtidor_initVar - checked to identify that the component has been
1452:.\Generated_Source\PSoC5/Surtidor.c ****     *     initialized.
1453:.\Generated_Source\PSoC5/Surtidor.c ****     *  tx_period - static variable, used for keeping TX period configuration.
1454:.\Generated_Source\PSoC5/Surtidor.c ****     *
1455:.\Generated_Source\PSoC5/Surtidor.c ****     * Reentrant:
1456:.\Generated_Source\PSoC5/Surtidor.c ****     *  No.
1457:.\Generated_Source\PSoC5/Surtidor.c ****     *
1458:.\Generated_Source\PSoC5/Surtidor.c ****     * Theory:
1459:.\Generated_Source\PSoC5/Surtidor.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1460:.\Generated_Source\PSoC5/Surtidor.c ****     *  important to return the registers configuration to normal for continue 8-bit
1461:.\Generated_Source\PSoC5/Surtidor.c ****     *  operation.
1462:.\Generated_Source\PSoC5/Surtidor.c ****     *  Trere are 3 variants for this API usage:
1463:.\Generated_Source\PSoC5/Surtidor.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1464:.\Generated_Source\PSoC5/Surtidor.c ****     *     configuration returning. Funcition will block CPU untill transmition
1465:.\Generated_Source\PSoC5/Surtidor.c ****     *     complete.
1466:.\Generated_Source\PSoC5/Surtidor.c ****     *  2) User may want to use bloking time if UART configured to the low speed
1467:.\Generated_Source\PSoC5/Surtidor.c ****     *     operation
1468:.\Generated_Source\PSoC5/Surtidor.c ****     *     Emample for this case:
1469:.\Generated_Source\PSoC5/Surtidor.c ****     *     SendBreak(0);     - init Break signal transmition
1470:.\Generated_Source\PSoC5/Surtidor.c ****     *         Add your code here to use CPU time
1471:.\Generated_Source\PSoC5/Surtidor.c ****     *     SendBreak(1);     - complete Break operation
1472:.\Generated_Source\PSoC5/Surtidor.c ****     *  3) Same to 2) but user may want to init and use the interrupt for complete
1473:.\Generated_Source\PSoC5/Surtidor.c ****     *     break operation.
1474:.\Generated_Source\PSoC5/Surtidor.c ****     *     Example for this case:
1475:.\Generated_Source\PSoC5/Surtidor.c ****     *     Init TX interrupt whith "TX - On TX Complete" parameter
1476:.\Generated_Source\PSoC5/Surtidor.c ****     *     SendBreak(0);     - init Break signal transmition
1477:.\Generated_Source\PSoC5/Surtidor.c ****     *         Add your code here to use CPU time
1478:.\Generated_Source\PSoC5/Surtidor.c ****     *     When interrupt appear with UART_TX_STS_COMPLETE status:
1479:.\Generated_Source\PSoC5/Surtidor.c ****     *     SendBreak(2);     - complete Break operation
1480:.\Generated_Source\PSoC5/Surtidor.c ****     *
1481:.\Generated_Source\PSoC5/Surtidor.c ****     * Side Effects:
1482:.\Generated_Source\PSoC5/Surtidor.c ****     *   Uses static variable to keep registers configuration.
1483:.\Generated_Source\PSoC5/Surtidor.c ****     *
1484:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1485:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SendBreak(uint8 retMode) 
1486:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1173              		.loc 1 1486 0
 1174              		.cfi_startproc
 1175              		@ args = 0, pretend = 0, frame = 0
 1176              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 48


 1177              		@ link register save eliminated.
 1178              	.LVL91:
1487:.\Generated_Source\PSoC5/Surtidor.c **** 
1488:.\Generated_Source\PSoC5/Surtidor.c ****         /* If not Initialized then skip this function*/
1489:.\Generated_Source\PSoC5/Surtidor.c ****         if(Surtidor_initVar != 0u)
 1179              		.loc 1 1489 0
 1180 0000 124B     		ldr	r3, .L125
 1181 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1182 0004 0BB3     		cbz	r3, .L118
 1183              	.LBB2:
1490:.\Generated_Source\PSoC5/Surtidor.c ****         {
1491:.\Generated_Source\PSoC5/Surtidor.c ****             /*Set the Counter to 13-bits and transmit a 00 byte*/
1492:.\Generated_Source\PSoC5/Surtidor.c ****             /*When that is done then reset the counter value back*/
1493:.\Generated_Source\PSoC5/Surtidor.c ****             uint8 tmpStat;
1494:.\Generated_Source\PSoC5/Surtidor.c **** 
1495:.\Generated_Source\PSoC5/Surtidor.c ****             #if(Surtidor_HD_ENABLED) /* Half Duplex mode*/
1496:.\Generated_Source\PSoC5/Surtidor.c **** 
1497:.\Generated_Source\PSoC5/Surtidor.c ****                 if( (retMode == Surtidor_SEND_BREAK) ||
1498:.\Generated_Source\PSoC5/Surtidor.c ****                     (retMode == Surtidor_SEND_WAIT_REINIT ) )
1499:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1500:.\Generated_Source\PSoC5/Surtidor.c ****                     /* CTRL_HD_SEND_BREAK - sends break bits in HD mode*/
1501:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() |
1502:.\Generated_Source\PSoC5/Surtidor.c ****                                                           Surtidor_CTRL_HD_SEND_BREAK);
1503:.\Generated_Source\PSoC5/Surtidor.c ****                     /* Send zeros*/
1504:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_TXDATA_REG = 0u;
1505:.\Generated_Source\PSoC5/Surtidor.c **** 
1506:.\Generated_Source\PSoC5/Surtidor.c ****                     do /*wait until transmit starts*/
1507:.\Generated_Source\PSoC5/Surtidor.c ****                     {
1508:.\Generated_Source\PSoC5/Surtidor.c ****                         tmpStat = Surtidor_TXSTATUS_REG;
1509:.\Generated_Source\PSoC5/Surtidor.c ****                     }while((tmpStat & Surtidor_TX_STS_FIFO_EMPTY) != 0u);
1510:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1511:.\Generated_Source\PSoC5/Surtidor.c **** 
1512:.\Generated_Source\PSoC5/Surtidor.c ****                 if( (retMode == Surtidor_WAIT_FOR_COMPLETE_REINIT) ||
1513:.\Generated_Source\PSoC5/Surtidor.c ****                     (retMode == Surtidor_SEND_WAIT_REINIT) )
1514:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1515:.\Generated_Source\PSoC5/Surtidor.c ****                     do /*wait until transmit complete*/
1516:.\Generated_Source\PSoC5/Surtidor.c ****                     {
1517:.\Generated_Source\PSoC5/Surtidor.c ****                         tmpStat = Surtidor_TXSTATUS_REG;
1518:.\Generated_Source\PSoC5/Surtidor.c ****                     }while(((uint8)~tmpStat & Surtidor_TX_STS_COMPLETE) != 0u);
1519:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1520:.\Generated_Source\PSoC5/Surtidor.c **** 
1521:.\Generated_Source\PSoC5/Surtidor.c ****                 if( (retMode == Surtidor_WAIT_FOR_COMPLETE_REINIT) ||
1522:.\Generated_Source\PSoC5/Surtidor.c ****                     (retMode == Surtidor_REINIT) ||
1523:.\Generated_Source\PSoC5/Surtidor.c ****                     (retMode == Surtidor_SEND_WAIT_REINIT) )
1524:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1525:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() &
1526:.\Generated_Source\PSoC5/Surtidor.c ****                                                   (uint8)~Surtidor_CTRL_HD_SEND_BREAK);
1527:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1528:.\Generated_Source\PSoC5/Surtidor.c **** 
1529:.\Generated_Source\PSoC5/Surtidor.c ****             #else /* Surtidor_HD_ENABLED Full Duplex mode */
1530:.\Generated_Source\PSoC5/Surtidor.c **** 
1531:.\Generated_Source\PSoC5/Surtidor.c ****                 static uint8 tx_period;
1532:.\Generated_Source\PSoC5/Surtidor.c **** 
1533:.\Generated_Source\PSoC5/Surtidor.c ****                 if( (retMode == Surtidor_SEND_BREAK) ||
 1184              		.loc 1 1533 0
 1185 0006 08B1     		cbz	r0, .L120
 1186              		.loc 1 1533 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 49


 1187 0008 0328     		cmp	r0, #3
 1188 000a 0DD1     		bne	.L121
 1189              	.L120:
1534:.\Generated_Source\PSoC5/Surtidor.c ****                     (retMode == Surtidor_SEND_WAIT_REINIT) )
1535:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1536:.\Generated_Source\PSoC5/Surtidor.c ****                     /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex 
1537:.\Generated_Source\PSoC5/Surtidor.c ****                     #if( (Surtidor_PARITY_TYPE != Surtidor__B_UART__NONE_REVB) || \
1538:.\Generated_Source\PSoC5/Surtidor.c ****                                         (Surtidor_PARITY_TYPE_SW != 0u) )
1539:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() |
1540:.\Generated_Source\PSoC5/Surtidor.c ****                                                               Surtidor_CTRL_HD_SEND_BREAK);
1541:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* End Surtidor_PARITY_TYPE != Surtidor__B_UART__NONE_REVB  */
1542:.\Generated_Source\PSoC5/Surtidor.c **** 
1543:.\Generated_Source\PSoC5/Surtidor.c ****                     #if(Surtidor_TXCLKGEN_DP)
1544:.\Generated_Source\PSoC5/Surtidor.c ****                         tx_period = Surtidor_TXBITCLKTX_COMPLETE_REG;
 1190              		.loc 1 1544 0 is_stmt 1
 1191 000c 104B     		ldr	r3, .L125+4
 1192 000e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1193 0010 0E4A     		ldr	r2, .L125
 1194 0012 1172     		strb	r1, [r2, #8]
1545:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_TXBITCLKTX_COMPLETE_REG = Surtidor_TXBITCTR_BREAKBITS;
 1195              		.loc 1 1545 0
 1196 0014 6722     		movs	r2, #103
 1197 0016 1A70     		strb	r2, [r3]
1546:.\Generated_Source\PSoC5/Surtidor.c ****                     #else
1547:.\Generated_Source\PSoC5/Surtidor.c ****                         tx_period = Surtidor_TXBITCTR_PERIOD_REG;
1548:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_TXBITCTR_PERIOD_REG = Surtidor_TXBITCTR_BREAKBITS8X;
1549:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* End Surtidor_TXCLKGEN_DP */
1550:.\Generated_Source\PSoC5/Surtidor.c **** 
1551:.\Generated_Source\PSoC5/Surtidor.c ****                     /* Send zeros*/
1552:.\Generated_Source\PSoC5/Surtidor.c ****                     Surtidor_TXDATA_REG = 0u;
 1198              		.loc 1 1552 0
 1199 0018 0022     		movs	r2, #0
 1200 001a 0F33     		adds	r3, r3, #15
 1201 001c 1A70     		strb	r2, [r3]
 1202              	.L122:
1553:.\Generated_Source\PSoC5/Surtidor.c **** 
1554:.\Generated_Source\PSoC5/Surtidor.c ****                     do /* wait until transmit starts */
1555:.\Generated_Source\PSoC5/Surtidor.c ****                     {
1556:.\Generated_Source\PSoC5/Surtidor.c ****                         tmpStat = Surtidor_TXSTATUS_REG;
 1203              		.loc 1 1556 0 discriminator 1
 1204 001e 0D4B     		ldr	r3, .L125+8
 1205 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1206              	.LVL92:
1557:.\Generated_Source\PSoC5/Surtidor.c ****                     }while((tmpStat & Surtidor_TX_STS_FIFO_EMPTY) != 0u);
 1207              		.loc 1 1557 0 discriminator 1
 1208 0022 13F0020F 		tst	r3, #2
 1209 0026 FAD1     		bne	.L122
 1210              	.LVL93:
 1211              	.L121:
1558:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1559:.\Generated_Source\PSoC5/Surtidor.c **** 
1560:.\Generated_Source\PSoC5/Surtidor.c ****                 if( (retMode == Surtidor_WAIT_FOR_COMPLETE_REINIT) ||
 1212              		.loc 1 1560 0
 1213 0028 0128     		cmp	r0, #1
 1214 002a 01D0     		beq	.L123
 1215              		.loc 1 1560 0 is_stmt 0 discriminator 1
 1216 002c 0328     		cmp	r0, #3
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 50


 1217 002e 04D1     		bne	.L124
 1218              	.L123:
1561:.\Generated_Source\PSoC5/Surtidor.c ****                     (retMode == Surtidor_SEND_WAIT_REINIT) )
1562:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1563:.\Generated_Source\PSoC5/Surtidor.c ****                     do /*wait until transmit complete*/
1564:.\Generated_Source\PSoC5/Surtidor.c ****                     {
1565:.\Generated_Source\PSoC5/Surtidor.c ****                         tmpStat = Surtidor_TXSTATUS_REG;
 1219              		.loc 1 1565 0 is_stmt 1 discriminator 1
 1220 0030 084B     		ldr	r3, .L125+8
 1221 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1222              	.LVL94:
1566:.\Generated_Source\PSoC5/Surtidor.c ****                     }while(((uint8)~tmpStat & Surtidor_TX_STS_COMPLETE) != 0u);
 1223              		.loc 1 1566 0 discriminator 1
 1224 0034 13F0010F 		tst	r3, #1
 1225 0038 FAD0     		beq	.L123
 1226              	.LVL95:
 1227              	.L124:
1567:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1568:.\Generated_Source\PSoC5/Surtidor.c **** 
1569:.\Generated_Source\PSoC5/Surtidor.c ****                 if( (retMode == Surtidor_WAIT_FOR_COMPLETE_REINIT) ||
1570:.\Generated_Source\PSoC5/Surtidor.c ****                     (retMode == Surtidor_REINIT) ||
 1228              		.loc 1 1570 0
 1229 003a 0138     		subs	r0, r0, #1
 1230              	.LVL96:
 1231 003c C0B2     		uxtb	r0, r0
1569:.\Generated_Source\PSoC5/Surtidor.c ****                     (retMode == Surtidor_REINIT) ||
 1232              		.loc 1 1569 0
 1233 003e 0228     		cmp	r0, #2
 1234 0040 03D8     		bhi	.L118
1571:.\Generated_Source\PSoC5/Surtidor.c ****                     (retMode == Surtidor_SEND_WAIT_REINIT) )
1572:.\Generated_Source\PSoC5/Surtidor.c ****                 {
1573:.\Generated_Source\PSoC5/Surtidor.c **** 
1574:.\Generated_Source\PSoC5/Surtidor.c ****                     #if(Surtidor_TXCLKGEN_DP)
1575:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_TXBITCLKTX_COMPLETE_REG = tx_period;
 1235              		.loc 1 1575 0
 1236 0042 024B     		ldr	r3, .L125
 1237 0044 1A7A     		ldrb	r2, [r3, #8]	@ zero_extendqisi2
 1238 0046 024B     		ldr	r3, .L125+4
 1239 0048 1A70     		strb	r2, [r3]
 1240              	.L118:
 1241 004a 7047     		bx	lr
 1242              	.L126:
 1243              		.align	2
 1244              	.L125:
 1245 004c 00000000 		.word	.LANCHOR0
 1246 0050 37640040 		.word	1073767479
 1247 0054 66640040 		.word	1073767526
 1248              	.LBE2:
 1249              		.cfi_endproc
 1250              	.LFE27:
 1251              		.size	Surtidor_SendBreak, .-Surtidor_SendBreak
 1252              		.section	.text.Surtidor_SetTxAddressMode,"ax",%progbits
 1253              		.align	2
 1254              		.global	Surtidor_SetTxAddressMode
 1255              		.thumb
 1256              		.thumb_func
 1257              		.type	Surtidor_SetTxAddressMode, %function
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 51


 1258              	Surtidor_SetTxAddressMode:
 1259              	.LFB28:
1576:.\Generated_Source\PSoC5/Surtidor.c ****                     #else
1577:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_TXBITCTR_PERIOD_REG = tx_period;
1578:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* End Surtidor_TXCLKGEN_DP */
1579:.\Generated_Source\PSoC5/Surtidor.c **** 
1580:.\Generated_Source\PSoC5/Surtidor.c ****                     #if( (Surtidor_PARITY_TYPE != Surtidor__B_UART__NONE_REVB) || \
1581:.\Generated_Source\PSoC5/Surtidor.c ****                          (Surtidor_PARITY_TYPE_SW != 0u) )
1582:.\Generated_Source\PSoC5/Surtidor.c ****                         Surtidor_WriteControlRegister(Surtidor_ReadControlRegister() &
1583:.\Generated_Source\PSoC5/Surtidor.c ****                                                       (uint8)~Surtidor_CTRL_HD_SEND_BREAK);
1584:.\Generated_Source\PSoC5/Surtidor.c ****                     #endif /* End Surtidor_PARITY_TYPE != NONE */
1585:.\Generated_Source\PSoC5/Surtidor.c ****                 }
1586:.\Generated_Source\PSoC5/Surtidor.c ****             #endif    /* End Surtidor_HD_ENABLED */
1587:.\Generated_Source\PSoC5/Surtidor.c ****         }
1588:.\Generated_Source\PSoC5/Surtidor.c ****     }
1589:.\Generated_Source\PSoC5/Surtidor.c **** 
1590:.\Generated_Source\PSoC5/Surtidor.c **** 
1591:.\Generated_Source\PSoC5/Surtidor.c ****     /*******************************************************************************
1592:.\Generated_Source\PSoC5/Surtidor.c ****     * Function Name: Surtidor_SetTxAddressMode
1593:.\Generated_Source\PSoC5/Surtidor.c ****     ********************************************************************************
1594:.\Generated_Source\PSoC5/Surtidor.c ****     *
1595:.\Generated_Source\PSoC5/Surtidor.c ****     * Summary:
1596:.\Generated_Source\PSoC5/Surtidor.c ****     *  Set the transmit addressing mode
1597:.\Generated_Source\PSoC5/Surtidor.c ****     *
1598:.\Generated_Source\PSoC5/Surtidor.c ****     * Parameters:
1599:.\Generated_Source\PSoC5/Surtidor.c ****     *  addressMode: 0 -> Space
1600:.\Generated_Source\PSoC5/Surtidor.c ****     *               1 -> Mark
1601:.\Generated_Source\PSoC5/Surtidor.c ****     *
1602:.\Generated_Source\PSoC5/Surtidor.c ****     * Return:
1603:.\Generated_Source\PSoC5/Surtidor.c ****     *  None.
1604:.\Generated_Source\PSoC5/Surtidor.c ****     *
1605:.\Generated_Source\PSoC5/Surtidor.c ****     *******************************************************************************/
1606:.\Generated_Source\PSoC5/Surtidor.c ****     void Surtidor_SetTxAddressMode(uint8 addressMode) 
1607:.\Generated_Source\PSoC5/Surtidor.c ****     {
 1260              		.loc 1 1607 0
 1261              		.cfi_startproc
 1262              		@ args = 0, pretend = 0, frame = 0
 1263              		@ frame_needed = 0, uses_anonymous_args = 0
 1264              		@ link register save eliminated.
 1265              	.LVL97:
 1266 0000 7047     		bx	lr
 1267              		.cfi_endproc
 1268              	.LFE28:
 1269              		.size	Surtidor_SetTxAddressMode, .-Surtidor_SetTxAddressMode
 1270              		.global	Surtidor_rxBufferOverflow
 1271              		.global	Surtidor_rxBufferLoopDetect
 1272              		.global	Surtidor_rxBufferWrite
 1273              		.global	Surtidor_rxBufferRead
 1274              		.comm	Surtidor_rxBuffer,256,4
 1275              		.global	Surtidor_initVar
 1276 0002 00BF     		.bss
 1277              		.align	1
 1278              		.set	.LANCHOR0,. + 0
 1279              		.type	Surtidor_initVar, %object
 1280              		.size	Surtidor_initVar, 1
 1281              	Surtidor_initVar:
 1282 0000 00       		.space	1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 52


 1283 0001 00       		.space	1
 1284              		.type	Surtidor_rxBufferRead, %object
 1285              		.size	Surtidor_rxBufferRead, 2
 1286              	Surtidor_rxBufferRead:
 1287 0002 0000     		.space	2
 1288              		.type	Surtidor_rxBufferWrite, %object
 1289              		.size	Surtidor_rxBufferWrite, 2
 1290              	Surtidor_rxBufferWrite:
 1291 0004 0000     		.space	2
 1292              		.type	Surtidor_rxBufferLoopDetect, %object
 1293              		.size	Surtidor_rxBufferLoopDetect, 1
 1294              	Surtidor_rxBufferLoopDetect:
 1295 0006 00       		.space	1
 1296              		.type	Surtidor_rxBufferOverflow, %object
 1297              		.size	Surtidor_rxBufferOverflow, 1
 1298              	Surtidor_rxBufferOverflow:
 1299 0007 00       		.space	1
 1300              		.type	tx_period.4993, %object
 1301              		.size	tx_period.4993, 1
 1302              	tx_period.4993:
 1303 0008 00       		.space	1
 1304 0009 00       		.text
 1305              	.Letext0:
 1306              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 1307              		.file 3 ".\\Generated_Source\\PSoC5\\CyLib.h"
 1308              		.section	.debug_info,"",%progbits
 1309              	.Ldebug_info0:
 1310 0000 84070000 		.4byte	0x784
 1311 0004 0400     		.2byte	0x4
 1312 0006 00000000 		.4byte	.Ldebug_abbrev0
 1313 000a 04       		.byte	0x4
 1314 000b 01       		.uleb128 0x1
 1315 000c BB040000 		.4byte	.LASF73
 1316 0010 01       		.byte	0x1
 1317 0011 CF010000 		.4byte	.LASF74
 1318 0015 38020000 		.4byte	.LASF75
 1319 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1320 001d 00000000 		.4byte	0
 1321 0021 00000000 		.4byte	.Ldebug_line0
 1322 0025 02       		.uleb128 0x2
 1323 0026 01       		.byte	0x1
 1324 0027 06       		.byte	0x6
 1325 0028 CF000000 		.4byte	.LASF0
 1326 002c 02       		.uleb128 0x2
 1327 002d 01       		.byte	0x1
 1328 002e 08       		.byte	0x8
 1329 002f A7030000 		.4byte	.LASF1
 1330 0033 02       		.uleb128 0x2
 1331 0034 02       		.byte	0x2
 1332 0035 05       		.byte	0x5
 1333 0036 B5030000 		.4byte	.LASF2
 1334 003a 02       		.uleb128 0x2
 1335 003b 02       		.byte	0x2
 1336 003c 07       		.byte	0x7
 1337 003d AA020000 		.4byte	.LASF3
 1338 0041 02       		.uleb128 0x2
 1339 0042 04       		.byte	0x4
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 53


 1340 0043 05       		.byte	0x5
 1341 0044 08010000 		.4byte	.LASF4
 1342 0048 02       		.uleb128 0x2
 1343 0049 04       		.byte	0x4
 1344 004a 07       		.byte	0x7
 1345 004b 26020000 		.4byte	.LASF5
 1346 004f 02       		.uleb128 0x2
 1347 0050 08       		.byte	0x8
 1348 0051 05       		.byte	0x5
 1349 0052 C1000000 		.4byte	.LASF6
 1350 0056 02       		.uleb128 0x2
 1351 0057 08       		.byte	0x8
 1352 0058 07       		.byte	0x7
 1353 0059 7D000000 		.4byte	.LASF7
 1354 005d 03       		.uleb128 0x3
 1355 005e 04       		.byte	0x4
 1356 005f 05       		.byte	0x5
 1357 0060 696E7400 		.ascii	"int\000"
 1358 0064 02       		.uleb128 0x2
 1359 0065 04       		.byte	0x4
 1360 0066 07       		.byte	0x7
 1361 0067 F3010000 		.4byte	.LASF8
 1362 006b 04       		.uleb128 0x4
 1363 006c 11010000 		.4byte	.LASF9
 1364 0070 02       		.byte	0x2
 1365 0071 B4       		.byte	0xb4
 1366 0072 2C000000 		.4byte	0x2c
 1367 0076 04       		.uleb128 0x4
 1368 0077 11000000 		.4byte	.LASF10
 1369 007b 02       		.byte	0x2
 1370 007c B5       		.byte	0xb5
 1371 007d 3A000000 		.4byte	0x3a
 1372 0081 04       		.uleb128 0x4
 1373 0082 6E010000 		.4byte	.LASF11
 1374 0086 02       		.byte	0x2
 1375 0087 B6       		.byte	0xb6
 1376 0088 48000000 		.4byte	0x48
 1377 008c 02       		.uleb128 0x2
 1378 008d 04       		.byte	0x4
 1379 008e 04       		.byte	0x4
 1380 008f 9C030000 		.4byte	.LASF12
 1381 0093 02       		.uleb128 0x2
 1382 0094 08       		.byte	0x8
 1383 0095 04       		.byte	0x4
 1384 0096 28010000 		.4byte	.LASF13
 1385 009a 04       		.uleb128 0x4
 1386 009b 6C040000 		.4byte	.LASF14
 1387 009f 02       		.byte	0x2
 1388 00a0 C5       		.byte	0xc5
 1389 00a1 A5000000 		.4byte	0xa5
 1390 00a5 02       		.uleb128 0x2
 1391 00a6 01       		.byte	0x1
 1392 00a7 08       		.byte	0x8
 1393 00a8 34040000 		.4byte	.LASF15
 1394 00ac 05       		.uleb128 0x5
 1395 00ad A2030000 		.4byte	.LASF16
 1396 00b1 02       		.byte	0x2
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 54


 1397 00b2 5E01     		.2byte	0x15e
 1398 00b4 B8000000 		.4byte	0xb8
 1399 00b8 06       		.uleb128 0x6
 1400 00b9 6B000000 		.4byte	0x6b
 1401 00bd 06       		.uleb128 0x6
 1402 00be 76000000 		.4byte	0x76
 1403 00c2 05       		.uleb128 0x5
 1404 00c3 EE020000 		.4byte	.LASF17
 1405 00c7 02       		.byte	0x2
 1406 00c8 6001     		.2byte	0x160
 1407 00ca CE000000 		.4byte	0xce
 1408 00ce 06       		.uleb128 0x6
 1409 00cf 81000000 		.4byte	0x81
 1410 00d3 05       		.uleb128 0x5
 1411 00d4 4F040000 		.4byte	.LASF18
 1412 00d8 02       		.byte	0x2
 1413 00d9 7001     		.2byte	0x170
 1414 00db DF000000 		.4byte	0xdf
 1415 00df 07       		.uleb128 0x7
 1416 00e0 04       		.byte	0x4
 1417 00e1 E5000000 		.4byte	0xe5
 1418 00e5 08       		.uleb128 0x8
 1419 00e6 02       		.uleb128 0x2
 1420 00e7 04       		.byte	0x4
 1421 00e8 07       		.byte	0x7
 1422 00e9 12030000 		.4byte	.LASF19
 1423 00ed 09       		.uleb128 0x9
 1424 00ee 92050000 		.4byte	.LASF20
 1425 00f2 01       		.byte	0x1
 1426 00f3 65       		.byte	0x65
 1427 00f4 00000000 		.4byte	.LFB1
 1428 00f8 3C000000 		.4byte	.LFE1-.LFB1
 1429 00fc 01       		.uleb128 0x1
 1430 00fd 9C       		.byte	0x9c
 1431 00fe 2A010000 		.4byte	0x12a
 1432 0102 0A       		.uleb128 0xa
 1433 0103 0A000000 		.4byte	.LVL0
 1434 0107 3F070000 		.4byte	0x73f
 1435 010b 15010000 		.4byte	0x115
 1436 010f 0B       		.uleb128 0xb
 1437 0110 01       		.uleb128 0x1
 1438 0111 50       		.byte	0x50
 1439 0112 01       		.uleb128 0x1
 1440 0113 34       		.byte	0x34
 1441 0114 00       		.byte	0
 1442 0115 0C       		.uleb128 0xc
 1443 0116 12000000 		.4byte	.LVL1
 1444 011a 59070000 		.4byte	0x759
 1445 011e 0B       		.uleb128 0xb
 1446 011f 01       		.uleb128 0x1
 1447 0120 51       		.byte	0x51
 1448 0121 01       		.uleb128 0x1
 1449 0122 37       		.byte	0x37
 1450 0123 0B       		.uleb128 0xb
 1451 0124 01       		.uleb128 0x1
 1452 0125 50       		.byte	0x50
 1453 0126 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 55


 1454 0127 34       		.byte	0x34
 1455 0128 00       		.byte	0
 1456 0129 00       		.byte	0
 1457 012a 09       		.uleb128 0x9
 1458 012b 5C040000 		.4byte	.LASF21
 1459 012f 01       		.byte	0x1
 1460 0130 AE       		.byte	0xae
 1461 0131 00000000 		.4byte	.LFB2
 1462 0135 3C000000 		.4byte	.LFE2-.LFB2
 1463 0139 01       		.uleb128 0x1
 1464 013a 9C       		.byte	0x9c
 1465 013b 61010000 		.4byte	0x161
 1466 013f 0D       		.uleb128 0xd
 1467 0140 A3040000 		.4byte	.LASF27
 1468 0144 01       		.byte	0x1
 1469 0145 B0       		.byte	0xb0
 1470 0146 6B000000 		.4byte	0x6b
 1471 014a 00000000 		.4byte	.LLST0
 1472 014e 0E       		.uleb128 0xe
 1473 014f 06000000 		.4byte	.LVL2
 1474 0153 6F070000 		.4byte	0x76f
 1475 0157 0E       		.uleb128 0xe
 1476 0158 2E000000 		.4byte	.LVL3
 1477 015c 7A070000 		.4byte	0x77a
 1478 0160 00       		.byte	0
 1479 0161 09       		.uleb128 0x9
 1480 0162 BF030000 		.4byte	.LASF22
 1481 0166 01       		.byte	0x1
 1482 0167 49       		.byte	0x49
 1483 0168 00000000 		.4byte	.LFB0
 1484 016c 1C000000 		.4byte	.LFE0-.LFB0
 1485 0170 01       		.uleb128 0x1
 1486 0171 9C       		.byte	0x9c
 1487 0172 89010000 		.4byte	0x189
 1488 0176 0E       		.uleb128 0xe
 1489 0177 0C000000 		.4byte	.LVL4
 1490 017b ED000000 		.4byte	0xed
 1491 017f 0E       		.uleb128 0xe
 1492 0180 16000000 		.4byte	.LVL5
 1493 0184 2A010000 		.4byte	0x12a
 1494 0188 00       		.byte	0
 1495 0189 0F       		.uleb128 0xf
 1496 018a 51010000 		.4byte	.LASF51
 1497 018e 01       		.byte	0x1
 1498 018f 1901     		.2byte	0x119
 1499 0191 6B000000 		.4byte	0x6b
 1500 0195 00000000 		.4byte	.LFB4
 1501 0199 04000000 		.4byte	.LFE4-.LFB4
 1502 019d 01       		.uleb128 0x1
 1503 019e 9C       		.byte	0x9c
 1504 019f 10       		.uleb128 0x10
 1505 01a0 49050000 		.4byte	.LASF23
 1506 01a4 01       		.byte	0x1
 1507 01a5 3101     		.2byte	0x131
 1508 01a7 00000000 		.4byte	.LFB5
 1509 01ab 02000000 		.4byte	.LFE5-.LFB5
 1510 01af 01       		.uleb128 0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 56


 1511 01b0 9C       		.byte	0x9c
 1512 01b1 C4010000 		.4byte	0x1c4
 1513 01b5 11       		.uleb128 0x11
 1514 01b6 75010000 		.4byte	.LASF29
 1515 01ba 01       		.byte	0x1
 1516 01bb 3101     		.2byte	0x131
 1517 01bd 6B000000 		.4byte	0x6b
 1518 01c1 01       		.uleb128 0x1
 1519 01c2 50       		.byte	0x50
 1520 01c3 00       		.byte	0
 1521 01c4 12       		.uleb128 0x12
 1522 01c5 43030000 		.4byte	.LASF24
 1523 01c9 01       		.byte	0x1
 1524 01ca 5001     		.2byte	0x150
 1525 01cc 00000000 		.4byte	.LFB6
 1526 01d0 0C000000 		.4byte	.LFE6-.LFB6
 1527 01d4 01       		.uleb128 0x1
 1528 01d5 9C       		.byte	0x9c
 1529 01d6 12       		.uleb128 0x12
 1530 01d7 3B010000 		.4byte	.LASF25
 1531 01db 01       		.byte	0x1
 1532 01dc 6701     		.2byte	0x167
 1533 01de 00000000 		.4byte	.LFB7
 1534 01e2 0C000000 		.4byte	.LFE7-.LFB7
 1535 01e6 01       		.uleb128 0x1
 1536 01e7 9C       		.byte	0x9c
 1537 01e8 09       		.uleb128 0x9
 1538 01e9 7D030000 		.4byte	.LASF26
 1539 01ed 01       		.byte	0x1
 1540 01ee E3       		.byte	0xe3
 1541 01ef 00000000 		.4byte	.LFB3
 1542 01f3 3C000000 		.4byte	.LFE3-.LFB3
 1543 01f7 01       		.uleb128 0x1
 1544 01f8 9C       		.byte	0x9c
 1545 01f9 2F020000 		.4byte	0x22f
 1546 01fd 0D       		.uleb128 0xd
 1547 01fe A3040000 		.4byte	.LASF27
 1548 0202 01       		.byte	0x1
 1549 0203 E5       		.byte	0xe5
 1550 0204 6B000000 		.4byte	0x6b
 1551 0208 13000000 		.4byte	.LLST1
 1552 020c 0E       		.uleb128 0xe
 1553 020d 06000000 		.4byte	.LVL7
 1554 0211 6F070000 		.4byte	0x76f
 1555 0215 0E       		.uleb128 0xe
 1556 0216 20000000 		.4byte	.LVL9
 1557 021a D6010000 		.4byte	0x1d6
 1558 021e 0C       		.uleb128 0xc
 1559 021f 30000000 		.4byte	.LVL10
 1560 0223 7A070000 		.4byte	0x77a
 1561 0227 0B       		.uleb128 0xb
 1562 0228 01       		.uleb128 0x1
 1563 0229 50       		.byte	0x50
 1564 022a 02       		.uleb128 0x2
 1565 022b 74       		.byte	0x74
 1566 022c 00       		.sleb128 0
 1567 022d 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 57


 1568 022e 00       		.byte	0
 1569 022f 10       		.uleb128 0x10
 1570 0230 99010000 		.4byte	.LASF28
 1571 0234 01       		.byte	0x1
 1572 0235 8101     		.2byte	0x181
 1573 0237 00000000 		.4byte	.LFB8
 1574 023b 0C000000 		.4byte	.LFE8-.LFB8
 1575 023f 01       		.uleb128 0x1
 1576 0240 9C       		.byte	0x9c
 1577 0241 54020000 		.4byte	0x254
 1578 0245 11       		.uleb128 0x11
 1579 0246 E7020000 		.4byte	.LASF30
 1580 024a 01       		.byte	0x1
 1581 024b 8101     		.2byte	0x181
 1582 024d 6B000000 		.4byte	0x6b
 1583 0251 01       		.uleb128 0x1
 1584 0252 50       		.byte	0x50
 1585 0253 00       		.byte	0
 1586 0254 13       		.uleb128 0x13
 1587 0255 20040000 		.4byte	.LASF34
 1588 0259 01       		.byte	0x1
 1589 025a A201     		.2byte	0x1a2
 1590 025c 6B000000 		.4byte	0x6b
 1591 0260 00000000 		.4byte	.LFB9
 1592 0264 5C000000 		.4byte	.LFE9-.LFB9
 1593 0268 01       		.uleb128 0x1
 1594 0269 9C       		.byte	0x9c
 1595 026a B1020000 		.4byte	0x2b1
 1596 026e 14       		.uleb128 0x14
 1597 026f 19040000 		.4byte	.LASF31
 1598 0273 01       		.byte	0x1
 1599 0274 A401     		.2byte	0x1a4
 1600 0276 6B000000 		.4byte	0x6b
 1601 027a 26000000 		.4byte	.LLST2
 1602 027e 14       		.uleb128 0x14
 1603 027f CC020000 		.4byte	.LASF32
 1604 0283 01       		.byte	0x1
 1605 0284 A701     		.2byte	0x1a7
 1606 0286 76000000 		.4byte	0x76
 1607 028a 44000000 		.4byte	.LLST3
 1608 028e 14       		.uleb128 0x14
 1609 028f 18000000 		.4byte	.LASF33
 1610 0293 01       		.byte	0x1
 1611 0294 A801     		.2byte	0x1a8
 1612 0296 76000000 		.4byte	0x76
 1613 029a 89000000 		.4byte	.LLST4
 1614 029e 0E       		.uleb128 0xe
 1615 029f 06000000 		.4byte	.LVL13
 1616 02a3 D6010000 		.4byte	0x1d6
 1617 02a7 0E       		.uleb128 0xe
 1618 02a8 4A000000 		.4byte	.LVL25
 1619 02ac C4010000 		.4byte	0x1c4
 1620 02b0 00       		.byte	0
 1621 02b1 13       		.uleb128 0x13
 1622 02b2 94000000 		.4byte	.LASF35
 1623 02b6 01       		.byte	0x1
 1624 02b7 FD01     		.2byte	0x1fd
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 58


 1625 02b9 6B000000 		.4byte	0x6b
 1626 02bd 00000000 		.4byte	.LFB10
 1627 02c1 28000000 		.4byte	.LFE10-.LFB10
 1628 02c5 01       		.uleb128 0x1
 1629 02c6 9C       		.byte	0x9c
 1630 02c7 DA020000 		.4byte	0x2da
 1631 02cb 15       		.uleb128 0x15
 1632 02cc B4040000 		.4byte	.LASF36
 1633 02d0 01       		.byte	0x1
 1634 02d1 FF01     		.2byte	0x1ff
 1635 02d3 6B000000 		.4byte	0x6b
 1636 02d7 01       		.uleb128 0x1
 1637 02d8 50       		.byte	0x50
 1638 02d9 00       		.byte	0
 1639 02da 13       		.uleb128 0x13
 1640 02db 00000000 		.4byte	.LASF37
 1641 02df 01       		.byte	0x1
 1642 02e0 2C02     		.2byte	0x22c
 1643 02e2 6B000000 		.4byte	0x6b
 1644 02e6 00000000 		.4byte	.LFB11
 1645 02ea 78000000 		.4byte	.LFE11-.LFB11
 1646 02ee 01       		.uleb128 0x1
 1647 02ef 9C       		.byte	0x9c
 1648 02f0 47030000 		.4byte	0x347
 1649 02f4 14       		.uleb128 0x14
 1650 02f5 19040000 		.4byte	.LASF31
 1651 02f9 01       		.byte	0x1
 1652 02fa 2E02     		.2byte	0x22e
 1653 02fc 6B000000 		.4byte	0x6b
 1654 0300 9C000000 		.4byte	.LLST5
 1655 0304 14       		.uleb128 0x14
 1656 0305 74030000 		.4byte	.LASF38
 1657 0309 01       		.byte	0x1
 1658 030a 2F02     		.2byte	0x22f
 1659 030c 6B000000 		.4byte	0x6b
 1660 0310 E9000000 		.4byte	.LLST6
 1661 0314 14       		.uleb128 0x14
 1662 0315 CC020000 		.4byte	.LASF32
 1663 0319 01       		.byte	0x1
 1664 031a 3202     		.2byte	0x232
 1665 031c 76000000 		.4byte	0x76
 1666 0320 FC000000 		.4byte	.LLST7
 1667 0324 14       		.uleb128 0x14
 1668 0325 18000000 		.4byte	.LASF33
 1669 0329 01       		.byte	0x1
 1670 032a 3302     		.2byte	0x233
 1671 032c 76000000 		.4byte	0x76
 1672 0330 41010000 		.4byte	.LLST8
 1673 0334 0E       		.uleb128 0xe
 1674 0335 06000000 		.4byte	.LVL30
 1675 0339 D6010000 		.4byte	0x1d6
 1676 033d 0E       		.uleb128 0xe
 1677 033e 64000000 		.4byte	.LVL46
 1678 0342 C4010000 		.4byte	0x1c4
 1679 0346 00       		.byte	0
 1680 0347 13       		.uleb128 0x13
 1681 0348 32030000 		.4byte	.LASF39
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 59


 1682 034c 01       		.byte	0x1
 1683 034d 9202     		.2byte	0x292
 1684 034f 76000000 		.4byte	0x76
 1685 0353 00000000 		.4byte	.LFB12
 1686 0357 12000000 		.4byte	.LFE12-.LFB12
 1687 035b 01       		.uleb128 0x1
 1688 035c 9C       		.byte	0x9c
 1689 035d 74030000 		.4byte	0x374
 1690 0361 0E       		.uleb128 0xe
 1691 0362 06000000 		.4byte	.LVL48
 1692 0366 B1020000 		.4byte	0x2b1
 1693 036a 0E       		.uleb128 0xe
 1694 036b 0C000000 		.4byte	.LVL49
 1695 036f 54020000 		.4byte	0x254
 1696 0373 00       		.byte	0
 1697 0374 13       		.uleb128 0x13
 1698 0375 6F050000 		.4byte	.LASF40
 1699 0379 01       		.byte	0x1
 1700 037a B302     		.2byte	0x2b3
 1701 037c 76000000 		.4byte	0x76
 1702 0380 00000000 		.4byte	.LFB13
 1703 0384 60000000 		.4byte	.LFE13-.LFB13
 1704 0388 01       		.uleb128 0x1
 1705 0389 9C       		.byte	0x9c
 1706 038a B1030000 		.4byte	0x3b1
 1707 038e 14       		.uleb128 0x14
 1708 038f A5020000 		.4byte	.LASF41
 1709 0393 01       		.byte	0x1
 1710 0394 B602     		.2byte	0x2b6
 1711 0396 76000000 		.4byte	0x76
 1712 039a 54010000 		.4byte	.LLST9
 1713 039e 0E       		.uleb128 0xe
 1714 039f 06000000 		.4byte	.LVL50
 1715 03a3 D6010000 		.4byte	0x1d6
 1716 03a7 0E       		.uleb128 0xe
 1717 03a8 58000000 		.4byte	.LVL56
 1718 03ac C4010000 		.4byte	0x1c4
 1719 03b0 00       		.byte	0
 1720 03b1 10       		.uleb128 0x10
 1721 03b2 72040000 		.4byte	.LASF42
 1722 03b6 01       		.byte	0x1
 1723 03b7 0303     		.2byte	0x303
 1724 03b9 00000000 		.4byte	.LFB14
 1725 03bd 3C000000 		.4byte	.LFE14-.LFB14
 1726 03c1 01       		.uleb128 0x1
 1727 03c2 9C       		.byte	0x9c
 1728 03c3 FC030000 		.4byte	0x3fc
 1729 03c7 14       		.uleb128 0x14
 1730 03c8 A3040000 		.4byte	.LASF27
 1731 03cc 01       		.byte	0x1
 1732 03cd 0503     		.2byte	0x305
 1733 03cf 6B000000 		.4byte	0x6b
 1734 03d3 7D010000 		.4byte	.LLST10
 1735 03d7 0E       		.uleb128 0xe
 1736 03d8 06000000 		.4byte	.LVL58
 1737 03dc 6F070000 		.4byte	0x76f
 1738 03e0 0E       		.uleb128 0xe
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 60


 1739 03e1 1C000000 		.4byte	.LVL59
 1740 03e5 7A070000 		.4byte	0x77a
 1741 03e9 0E       		.uleb128 0xe
 1742 03ea 20000000 		.4byte	.LVL60
 1743 03ee D6010000 		.4byte	0x1d6
 1744 03f2 0E       		.uleb128 0xe
 1745 03f3 30000000 		.4byte	.LVL61
 1746 03f7 C4010000 		.4byte	0x1c4
 1747 03fb 00       		.byte	0
 1748 03fc 10       		.uleb128 0x10
 1749 03fd 8B020000 		.4byte	.LASF43
 1750 0401 01       		.byte	0x1
 1751 0402 4003     		.2byte	0x340
 1752 0404 00000000 		.4byte	.LFB15
 1753 0408 02000000 		.4byte	.LFE15-.LFB15
 1754 040c 01       		.uleb128 0x1
 1755 040d 9C       		.byte	0x9c
 1756 040e 21040000 		.4byte	0x421
 1757 0412 11       		.uleb128 0x11
 1758 0413 2F010000 		.4byte	.LASF44
 1759 0417 01       		.byte	0x1
 1760 0418 4003     		.2byte	0x340
 1761 041a 6B000000 		.4byte	0x6b
 1762 041e 01       		.uleb128 0x1
 1763 041f 50       		.byte	0x50
 1764 0420 00       		.byte	0
 1765 0421 10       		.uleb128 0x10
 1766 0422 D8030000 		.4byte	.LASF45
 1767 0426 01       		.byte	0x1
 1768 0427 6503     		.2byte	0x365
 1769 0429 00000000 		.4byte	.LFB16
 1770 042d 0C000000 		.4byte	.LFE16-.LFB16
 1771 0431 01       		.uleb128 0x1
 1772 0432 9C       		.byte	0x9c
 1773 0433 46040000 		.4byte	0x446
 1774 0437 11       		.uleb128 0x11
 1775 0438 67050000 		.4byte	.LASF46
 1776 043c 01       		.byte	0x1
 1777 043d 6503     		.2byte	0x365
 1778 043f 6B000000 		.4byte	0x6b
 1779 0443 01       		.uleb128 0x1
 1780 0444 50       		.byte	0x50
 1781 0445 00       		.byte	0
 1782 0446 10       		.uleb128 0x10
 1783 0447 EF030000 		.4byte	.LASF47
 1784 044b 01       		.byte	0x1
 1785 044c 7A03     		.2byte	0x37a
 1786 044e 00000000 		.4byte	.LFB17
 1787 0452 0C000000 		.4byte	.LFE17-.LFB17
 1788 0456 01       		.uleb128 0x1
 1789 0457 9C       		.byte	0x9c
 1790 0458 6B040000 		.4byte	0x46b
 1791 045c 11       		.uleb128 0x11
 1792 045d 67050000 		.4byte	.LASF46
 1793 0461 01       		.byte	0x1
 1794 0462 7A03     		.2byte	0x37a
 1795 0464 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 61


 1796 0468 01       		.uleb128 0x1
 1797 0469 50       		.byte	0x50
 1798 046a 00       		.byte	0
 1799 046b 10       		.uleb128 0x10
 1800 046c 7D010000 		.4byte	.LASF48
 1801 0470 01       		.byte	0x1
 1802 0471 C803     		.2byte	0x3c8
 1803 0473 00000000 		.4byte	.LFB18
 1804 0477 0C000000 		.4byte	.LFE18-.LFB18
 1805 047b 01       		.uleb128 0x1
 1806 047c 9C       		.byte	0x9c
 1807 047d 90040000 		.4byte	0x490
 1808 0481 11       		.uleb128 0x11
 1809 0482 E7020000 		.4byte	.LASF30
 1810 0486 01       		.byte	0x1
 1811 0487 C803     		.2byte	0x3c8
 1812 0489 6B000000 		.4byte	0x6b
 1813 048d 01       		.uleb128 0x1
 1814 048e 50       		.byte	0x50
 1815 048f 00       		.byte	0
 1816 0490 10       		.uleb128 0x10
 1817 0491 00020000 		.4byte	.LASF49
 1818 0495 01       		.byte	0x1
 1819 0496 EA03     		.2byte	0x3ea
 1820 0498 00000000 		.4byte	.LFB19
 1821 049c 14000000 		.4byte	.LFE19-.LFB19
 1822 04a0 01       		.uleb128 0x1
 1823 04a1 9C       		.byte	0x9c
 1824 04a2 B5040000 		.4byte	0x4b5
 1825 04a6 11       		.uleb128 0x11
 1826 04a7 59000000 		.4byte	.LASF50
 1827 04ab 01       		.byte	0x1
 1828 04ac EA03     		.2byte	0x3ea
 1829 04ae 6B000000 		.4byte	0x6b
 1830 04b2 01       		.uleb128 0x1
 1831 04b3 50       		.byte	0x50
 1832 04b4 00       		.byte	0
 1833 04b5 0F       		.uleb128 0xf
 1834 04b6 FC020000 		.4byte	.LASF52
 1835 04ba 01       		.byte	0x1
 1836 04bb 2E04     		.2byte	0x42e
 1837 04bd 6B000000 		.4byte	0x6b
 1838 04c1 00000000 		.4byte	.LFB20
 1839 04c5 0C000000 		.4byte	.LFE20-.LFB20
 1840 04c9 01       		.uleb128 0x1
 1841 04ca 9C       		.byte	0x9c
 1842 04cb 10       		.uleb128 0x10
 1843 04cc 15020000 		.4byte	.LASF53
 1844 04d0 01       		.byte	0x1
 1845 04d1 5204     		.2byte	0x452
 1846 04d3 00000000 		.4byte	.LFB21
 1847 04d7 18000000 		.4byte	.LFE21-.LFB21
 1848 04db 01       		.uleb128 0x1
 1849 04dc 9C       		.byte	0x9c
 1850 04dd F0040000 		.4byte	0x4f0
 1851 04e1 11       		.uleb128 0x11
 1852 04e2 59000000 		.4byte	.LASF50
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 62


 1853 04e6 01       		.byte	0x1
 1854 04e7 5204     		.2byte	0x452
 1855 04e9 6B000000 		.4byte	0x6b
 1856 04ed 01       		.uleb128 0x1
 1857 04ee 50       		.byte	0x50
 1858 04ef 00       		.byte	0
 1859 04f0 10       		.uleb128 0x10
 1860 04f1 06040000 		.4byte	.LASF54
 1861 04f5 01       		.byte	0x1
 1862 04f6 AE04     		.2byte	0x4ae
 1863 04f8 00000000 		.4byte	.LFB22
 1864 04fc 24000000 		.4byte	.LFE22-.LFB22
 1865 0500 01       		.uleb128 0x1
 1866 0501 9C       		.byte	0x9c
 1867 0502 30050000 		.4byte	0x530
 1868 0506 16       		.uleb128 0x16
 1869 0507 64000000 		.4byte	.LASF55
 1870 050b 01       		.byte	0x1
 1871 050c AE04     		.2byte	0x4ae
 1872 050e 30050000 		.4byte	0x530
 1873 0512 90010000 		.4byte	.LLST11
 1874 0516 14       		.uleb128 0x14
 1875 0517 88050000 		.4byte	.LASF56
 1876 051b 01       		.byte	0x1
 1877 051c B004     		.2byte	0x4b0
 1878 051e 76000000 		.4byte	0x76
 1879 0522 D2010000 		.4byte	.LLST12
 1880 0526 0E       		.uleb128 0xe
 1881 0527 0E000000 		.4byte	.LVL71
 1882 052b CB040000 		.4byte	0x4cb
 1883 052f 00       		.byte	0
 1884 0530 07       		.uleb128 0x7
 1885 0531 04       		.byte	0x4
 1886 0532 36050000 		.4byte	0x536
 1887 0536 17       		.uleb128 0x17
 1888 0537 9A000000 		.4byte	0x9a
 1889 053b 10       		.uleb128 0x10
 1890 053c 6B000000 		.4byte	.LASF57
 1891 0540 01       		.byte	0x1
 1892 0541 D404     		.2byte	0x4d4
 1893 0543 00000000 		.4byte	.LFB23
 1894 0547 24000000 		.4byte	.LFE23-.LFB23
 1895 054b 01       		.uleb128 0x1
 1896 054c 9C       		.byte	0x9c
 1897 054d 8B050000 		.4byte	0x58b
 1898 0551 16       		.uleb128 0x16
 1899 0552 64000000 		.4byte	.LASF55
 1900 0556 01       		.byte	0x1
 1901 0557 D404     		.2byte	0x4d4
 1902 0559 8B050000 		.4byte	0x58b
 1903 055d 13020000 		.4byte	.LLST13
 1904 0561 16       		.uleb128 0x16
 1905 0562 CE030000 		.4byte	.LASF58
 1906 0566 01       		.byte	0x1
 1907 0567 D404     		.2byte	0x4d4
 1908 0569 6B000000 		.4byte	0x6b
 1909 056d 3C020000 		.4byte	.LLST14
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 63


 1910 0571 14       		.uleb128 0x14
 1911 0572 88050000 		.4byte	.LASF56
 1912 0576 01       		.byte	0x1
 1913 0577 D704     		.2byte	0x4d7
 1914 0579 6B000000 		.4byte	0x6b
 1915 057d 68020000 		.4byte	.LLST15
 1916 0581 0E       		.uleb128 0xe
 1917 0582 14000000 		.4byte	.LVL79
 1918 0586 CB040000 		.4byte	0x4cb
 1919 058a 00       		.byte	0
 1920 058b 07       		.uleb128 0x7
 1921 058c 04       		.byte	0x4
 1922 058d 91050000 		.4byte	0x591
 1923 0591 17       		.uleb128 0x17
 1924 0592 6B000000 		.4byte	0x6b
 1925 0596 10       		.uleb128 0x10
 1926 0597 17010000 		.4byte	.LASF59
 1927 059b 01       		.byte	0x1
 1928 059c F904     		.2byte	0x4f9
 1929 059e 00000000 		.4byte	.LFB24
 1930 05a2 20000000 		.4byte	.LFE24-.LFB24
 1931 05a6 01       		.uleb128 0x1
 1932 05a7 9C       		.byte	0x9c
 1933 05a8 E8050000 		.4byte	0x5e8
 1934 05ac 16       		.uleb128 0x16
 1935 05ad 59000000 		.4byte	.LASF50
 1936 05b1 01       		.byte	0x1
 1937 05b2 F904     		.2byte	0x4f9
 1938 05b4 6B000000 		.4byte	0x6b
 1939 05b8 9E020000 		.4byte	.LLST16
 1940 05bc 0E       		.uleb128 0xe
 1941 05bd 0C000000 		.4byte	.LVL84
 1942 05c1 CB040000 		.4byte	0x4cb
 1943 05c5 0A       		.uleb128 0xa
 1944 05c6 12000000 		.4byte	.LVL85
 1945 05ca CB040000 		.4byte	0x4cb
 1946 05ce D8050000 		.4byte	0x5d8
 1947 05d2 0B       		.uleb128 0xb
 1948 05d3 01       		.uleb128 0x1
 1949 05d4 50       		.byte	0x50
 1950 05d5 01       		.uleb128 0x1
 1951 05d6 3D       		.byte	0x3d
 1952 05d7 00       		.byte	0
 1953 05d8 0C       		.uleb128 0xc
 1954 05d9 18000000 		.4byte	.LVL86
 1955 05dd CB040000 		.4byte	0x4cb
 1956 05e1 0B       		.uleb128 0xb
 1957 05e2 01       		.uleb128 0x1
 1958 05e3 50       		.byte	0x50
 1959 05e4 01       		.uleb128 0x1
 1960 05e5 3A       		.byte	0x3a
 1961 05e6 00       		.byte	0
 1962 05e7 00       		.byte	0
 1963 05e8 13       		.uleb128 0x13
 1964 05e9 2A000000 		.4byte	.LASF60
 1965 05ed 01       		.byte	0x1
 1966 05ee 1E05     		.2byte	0x51e
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 64


 1967 05f0 6B000000 		.4byte	0x6b
 1968 05f4 00000000 		.4byte	.LFB25
 1969 05f8 24000000 		.4byte	.LFE25-.LFB25
 1970 05fc 01       		.uleb128 0x1
 1971 05fd 9C       		.byte	0x9c
 1972 05fe 13060000 		.4byte	0x613
 1973 0602 14       		.uleb128 0x14
 1974 0603 A5020000 		.4byte	.LASF41
 1975 0607 01       		.byte	0x1
 1976 0608 2105     		.2byte	0x521
 1977 060a 6B000000 		.4byte	0x6b
 1978 060e BF020000 		.4byte	.LLST17
 1979 0612 00       		.byte	0
 1980 0613 10       		.uleb128 0x10
 1981 0614 1B030000 		.4byte	.LASF61
 1982 0618 01       		.byte	0x1
 1983 0619 7405     		.2byte	0x574
 1984 061b 00000000 		.4byte	.LFB26
 1985 061f 24000000 		.4byte	.LFE26-.LFB26
 1986 0623 01       		.uleb128 0x1
 1987 0624 9C       		.byte	0x9c
 1988 0625 4C060000 		.4byte	0x64c
 1989 0629 14       		.uleb128 0x14
 1990 062a A3040000 		.4byte	.LASF27
 1991 062e 01       		.byte	0x1
 1992 062f 7605     		.2byte	0x576
 1993 0631 6B000000 		.4byte	0x6b
 1994 0635 DD020000 		.4byte	.LLST18
 1995 0639 0E       		.uleb128 0xe
 1996 063a 06000000 		.4byte	.LVL89
 1997 063e 6F070000 		.4byte	0x76f
 1998 0642 0E       		.uleb128 0xe
 1999 0643 1C000000 		.4byte	.LVL90
 2000 0647 7A070000 		.4byte	0x77a
 2001 064b 00       		.byte	0
 2002 064c 10       		.uleb128 0x10
 2003 064d F5000000 		.4byte	.LASF62
 2004 0651 01       		.byte	0x1
 2005 0652 CD05     		.2byte	0x5cd
 2006 0654 00000000 		.4byte	.LFB27
 2007 0658 58000000 		.4byte	.LFE27-.LFB27
 2008 065c 01       		.uleb128 0x1
 2009 065d 9C       		.byte	0x9c
 2010 065e 9F060000 		.4byte	0x69f
 2011 0662 16       		.uleb128 0x16
 2012 0663 C7010000 		.4byte	.LASF63
 2013 0667 01       		.byte	0x1
 2014 0668 CD05     		.2byte	0x5cd
 2015 066a 6B000000 		.4byte	0x6b
 2016 066e F0020000 		.4byte	.LLST19
 2017 0672 18       		.uleb128 0x18
 2018 0673 06000000 		.4byte	.LBB2
 2019 0677 52000000 		.4byte	.LBE2-.LBB2
 2020 067b 14       		.uleb128 0x14
 2021 067c F4020000 		.4byte	.LASF64
 2022 0680 01       		.byte	0x1
 2023 0681 D505     		.2byte	0x5d5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 65


 2024 0683 6B000000 		.4byte	0x6b
 2025 0687 11030000 		.4byte	.LLST20
 2026 068b 15       		.uleb128 0x15
 2027 068c DD020000 		.4byte	.LASF65
 2028 0690 01       		.byte	0x1
 2029 0691 FB05     		.2byte	0x5fb
 2030 0693 6B000000 		.4byte	0x6b
 2031 0697 05       		.uleb128 0x5
 2032 0698 03       		.byte	0x3
 2033 0699 08000000 		.4byte	tx_period.4993
 2034 069d 00       		.byte	0
 2035 069e 00       		.byte	0
 2036 069f 10       		.uleb128 0x10
 2037 06a0 DB000000 		.4byte	.LASF66
 2038 06a4 01       		.byte	0x1
 2039 06a5 4606     		.2byte	0x646
 2040 06a7 00000000 		.4byte	.LFB28
 2041 06ab 02000000 		.4byte	.LFE28-.LFB28
 2042 06af 01       		.uleb128 0x1
 2043 06b0 9C       		.byte	0x9c
 2044 06b1 C4060000 		.4byte	0x6c4
 2045 06b5 11       		.uleb128 0x11
 2046 06b6 2F010000 		.4byte	.LASF44
 2047 06ba 01       		.byte	0x1
 2048 06bb 4606     		.2byte	0x646
 2049 06bd 6B000000 		.4byte	0x6b
 2050 06c1 01       		.uleb128 0x1
 2051 06c2 50       		.byte	0x50
 2052 06c3 00       		.byte	0
 2053 06c4 19       		.uleb128 0x19
 2054 06c5 A0050000 		.4byte	.LASF67
 2055 06c9 01       		.byte	0x1
 2056 06ca 1C       		.byte	0x1c
 2057 06cb 6B000000 		.4byte	0x6b
 2058 06cf 05       		.uleb128 0x5
 2059 06d0 03       		.byte	0x3
 2060 06d1 00000000 		.4byte	Surtidor_initVar
 2061 06d5 1A       		.uleb128 0x1a
 2062 06d6 6B000000 		.4byte	0x6b
 2063 06da E5060000 		.4byte	0x6e5
 2064 06de 1B       		.uleb128 0x1b
 2065 06df E6000000 		.4byte	0xe6
 2066 06e3 FF       		.byte	0xff
 2067 06e4 00       		.byte	0
 2068 06e5 19       		.uleb128 0x19
 2069 06e6 B5010000 		.4byte	.LASF68
 2070 06ea 01       		.byte	0x1
 2071 06eb 24       		.byte	0x24
 2072 06ec F6060000 		.4byte	0x6f6
 2073 06f0 05       		.uleb128 0x5
 2074 06f1 03       		.byte	0x3
 2075 06f2 00000000 		.4byte	Surtidor_rxBuffer
 2076 06f6 06       		.uleb128 0x6
 2077 06f7 D5060000 		.4byte	0x6d5
 2078 06fb 19       		.uleb128 0x19
 2079 06fc 39040000 		.4byte	.LASF69
 2080 0700 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 66


 2081 0701 25       		.byte	0x25
 2082 0702 BD000000 		.4byte	0xbd
 2083 0706 05       		.uleb128 0x5
 2084 0707 03       		.byte	0x3
 2085 0708 00000000 		.4byte	Surtidor_rxBufferRead
 2086 070c 19       		.uleb128 0x19
 2087 070d AA000000 		.4byte	.LASF70
 2088 0711 01       		.byte	0x1
 2089 0712 26       		.byte	0x26
 2090 0713 BD000000 		.4byte	0xbd
 2091 0717 05       		.uleb128 0x5
 2092 0718 03       		.byte	0x3
 2093 0719 00000000 		.4byte	Surtidor_rxBufferWrite
 2094 071d 19       		.uleb128 0x19
 2095 071e 58030000 		.4byte	.LASF71
 2096 0722 01       		.byte	0x1
 2097 0723 27       		.byte	0x27
 2098 0724 B8000000 		.4byte	0xb8
 2099 0728 05       		.uleb128 0x5
 2100 0729 03       		.byte	0x3
 2101 072a 00000000 		.4byte	Surtidor_rxBufferLoopDetect
 2102 072e 19       		.uleb128 0x19
 2103 072f 89040000 		.4byte	.LASF72
 2104 0733 01       		.byte	0x1
 2105 0734 28       		.byte	0x28
 2106 0735 B8000000 		.4byte	0xb8
 2107 0739 05       		.uleb128 0x5
 2108 073a 03       		.byte	0x3
 2109 073b 00000000 		.4byte	Surtidor_rxBufferOverflow
 2110 073f 1C       		.uleb128 0x1c
 2111 0740 BD020000 		.4byte	.LASF76
 2112 0744 03       		.byte	0x3
 2113 0745 89       		.byte	0x89
 2114 0746 D3000000 		.4byte	0xd3
 2115 074a 59070000 		.4byte	0x759
 2116 074e 1D       		.uleb128 0x1d
 2117 074f 6B000000 		.4byte	0x6b
 2118 0753 1D       		.uleb128 0x1d
 2119 0754 D3000000 		.4byte	0xd3
 2120 0758 00       		.byte	0
 2121 0759 1E       		.uleb128 0x1e
 2122 075a 8B030000 		.4byte	.LASF77
 2123 075e 03       		.byte	0x3
 2124 075f 8C       		.byte	0x8c
 2125 0760 6F070000 		.4byte	0x76f
 2126 0764 1D       		.uleb128 0x1d
 2127 0765 6B000000 		.4byte	0x6b
 2128 0769 1D       		.uleb128 0x1d
 2129 076a 6B000000 		.4byte	0x6b
 2130 076e 00       		.byte	0
 2131 076f 1F       		.uleb128 0x1f
 2132 0770 74020000 		.4byte	.LASF78
 2133 0774 03       		.byte	0x3
 2134 0775 7E       		.byte	0x7e
 2135 0776 6B000000 		.4byte	0x6b
 2136 077a 20       		.uleb128 0x20
 2137 077b 43000000 		.4byte	.LASF79
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 67


 2138 077f 03       		.byte	0x3
 2139 0780 7F       		.byte	0x7f
 2140 0781 1D       		.uleb128 0x1d
 2141 0782 6B000000 		.4byte	0x6b
 2142 0786 00       		.byte	0
 2143 0787 00       		.byte	0
 2144              		.section	.debug_abbrev,"",%progbits
 2145              	.Ldebug_abbrev0:
 2146 0000 01       		.uleb128 0x1
 2147 0001 11       		.uleb128 0x11
 2148 0002 01       		.byte	0x1
 2149 0003 25       		.uleb128 0x25
 2150 0004 0E       		.uleb128 0xe
 2151 0005 13       		.uleb128 0x13
 2152 0006 0B       		.uleb128 0xb
 2153 0007 03       		.uleb128 0x3
 2154 0008 0E       		.uleb128 0xe
 2155 0009 1B       		.uleb128 0x1b
 2156 000a 0E       		.uleb128 0xe
 2157 000b 55       		.uleb128 0x55
 2158 000c 17       		.uleb128 0x17
 2159 000d 11       		.uleb128 0x11
 2160 000e 01       		.uleb128 0x1
 2161 000f 10       		.uleb128 0x10
 2162 0010 17       		.uleb128 0x17
 2163 0011 00       		.byte	0
 2164 0012 00       		.byte	0
 2165 0013 02       		.uleb128 0x2
 2166 0014 24       		.uleb128 0x24
 2167 0015 00       		.byte	0
 2168 0016 0B       		.uleb128 0xb
 2169 0017 0B       		.uleb128 0xb
 2170 0018 3E       		.uleb128 0x3e
 2171 0019 0B       		.uleb128 0xb
 2172 001a 03       		.uleb128 0x3
 2173 001b 0E       		.uleb128 0xe
 2174 001c 00       		.byte	0
 2175 001d 00       		.byte	0
 2176 001e 03       		.uleb128 0x3
 2177 001f 24       		.uleb128 0x24
 2178 0020 00       		.byte	0
 2179 0021 0B       		.uleb128 0xb
 2180 0022 0B       		.uleb128 0xb
 2181 0023 3E       		.uleb128 0x3e
 2182 0024 0B       		.uleb128 0xb
 2183 0025 03       		.uleb128 0x3
 2184 0026 08       		.uleb128 0x8
 2185 0027 00       		.byte	0
 2186 0028 00       		.byte	0
 2187 0029 04       		.uleb128 0x4
 2188 002a 16       		.uleb128 0x16
 2189 002b 00       		.byte	0
 2190 002c 03       		.uleb128 0x3
 2191 002d 0E       		.uleb128 0xe
 2192 002e 3A       		.uleb128 0x3a
 2193 002f 0B       		.uleb128 0xb
 2194 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 68


 2195 0031 0B       		.uleb128 0xb
 2196 0032 49       		.uleb128 0x49
 2197 0033 13       		.uleb128 0x13
 2198 0034 00       		.byte	0
 2199 0035 00       		.byte	0
 2200 0036 05       		.uleb128 0x5
 2201 0037 16       		.uleb128 0x16
 2202 0038 00       		.byte	0
 2203 0039 03       		.uleb128 0x3
 2204 003a 0E       		.uleb128 0xe
 2205 003b 3A       		.uleb128 0x3a
 2206 003c 0B       		.uleb128 0xb
 2207 003d 3B       		.uleb128 0x3b
 2208 003e 05       		.uleb128 0x5
 2209 003f 49       		.uleb128 0x49
 2210 0040 13       		.uleb128 0x13
 2211 0041 00       		.byte	0
 2212 0042 00       		.byte	0
 2213 0043 06       		.uleb128 0x6
 2214 0044 35       		.uleb128 0x35
 2215 0045 00       		.byte	0
 2216 0046 49       		.uleb128 0x49
 2217 0047 13       		.uleb128 0x13
 2218 0048 00       		.byte	0
 2219 0049 00       		.byte	0
 2220 004a 07       		.uleb128 0x7
 2221 004b 0F       		.uleb128 0xf
 2222 004c 00       		.byte	0
 2223 004d 0B       		.uleb128 0xb
 2224 004e 0B       		.uleb128 0xb
 2225 004f 49       		.uleb128 0x49
 2226 0050 13       		.uleb128 0x13
 2227 0051 00       		.byte	0
 2228 0052 00       		.byte	0
 2229 0053 08       		.uleb128 0x8
 2230 0054 15       		.uleb128 0x15
 2231 0055 00       		.byte	0
 2232 0056 27       		.uleb128 0x27
 2233 0057 19       		.uleb128 0x19
 2234 0058 00       		.byte	0
 2235 0059 00       		.byte	0
 2236 005a 09       		.uleb128 0x9
 2237 005b 2E       		.uleb128 0x2e
 2238 005c 01       		.byte	0x1
 2239 005d 3F       		.uleb128 0x3f
 2240 005e 19       		.uleb128 0x19
 2241 005f 03       		.uleb128 0x3
 2242 0060 0E       		.uleb128 0xe
 2243 0061 3A       		.uleb128 0x3a
 2244 0062 0B       		.uleb128 0xb
 2245 0063 3B       		.uleb128 0x3b
 2246 0064 0B       		.uleb128 0xb
 2247 0065 27       		.uleb128 0x27
 2248 0066 19       		.uleb128 0x19
 2249 0067 11       		.uleb128 0x11
 2250 0068 01       		.uleb128 0x1
 2251 0069 12       		.uleb128 0x12
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 69


 2252 006a 06       		.uleb128 0x6
 2253 006b 40       		.uleb128 0x40
 2254 006c 18       		.uleb128 0x18
 2255 006d 9742     		.uleb128 0x2117
 2256 006f 19       		.uleb128 0x19
 2257 0070 01       		.uleb128 0x1
 2258 0071 13       		.uleb128 0x13
 2259 0072 00       		.byte	0
 2260 0073 00       		.byte	0
 2261 0074 0A       		.uleb128 0xa
 2262 0075 898201   		.uleb128 0x4109
 2263 0078 01       		.byte	0x1
 2264 0079 11       		.uleb128 0x11
 2265 007a 01       		.uleb128 0x1
 2266 007b 31       		.uleb128 0x31
 2267 007c 13       		.uleb128 0x13
 2268 007d 01       		.uleb128 0x1
 2269 007e 13       		.uleb128 0x13
 2270 007f 00       		.byte	0
 2271 0080 00       		.byte	0
 2272 0081 0B       		.uleb128 0xb
 2273 0082 8A8201   		.uleb128 0x410a
 2274 0085 00       		.byte	0
 2275 0086 02       		.uleb128 0x2
 2276 0087 18       		.uleb128 0x18
 2277 0088 9142     		.uleb128 0x2111
 2278 008a 18       		.uleb128 0x18
 2279 008b 00       		.byte	0
 2280 008c 00       		.byte	0
 2281 008d 0C       		.uleb128 0xc
 2282 008e 898201   		.uleb128 0x4109
 2283 0091 01       		.byte	0x1
 2284 0092 11       		.uleb128 0x11
 2285 0093 01       		.uleb128 0x1
 2286 0094 31       		.uleb128 0x31
 2287 0095 13       		.uleb128 0x13
 2288 0096 00       		.byte	0
 2289 0097 00       		.byte	0
 2290 0098 0D       		.uleb128 0xd
 2291 0099 34       		.uleb128 0x34
 2292 009a 00       		.byte	0
 2293 009b 03       		.uleb128 0x3
 2294 009c 0E       		.uleb128 0xe
 2295 009d 3A       		.uleb128 0x3a
 2296 009e 0B       		.uleb128 0xb
 2297 009f 3B       		.uleb128 0x3b
 2298 00a0 0B       		.uleb128 0xb
 2299 00a1 49       		.uleb128 0x49
 2300 00a2 13       		.uleb128 0x13
 2301 00a3 02       		.uleb128 0x2
 2302 00a4 17       		.uleb128 0x17
 2303 00a5 00       		.byte	0
 2304 00a6 00       		.byte	0
 2305 00a7 0E       		.uleb128 0xe
 2306 00a8 898201   		.uleb128 0x4109
 2307 00ab 00       		.byte	0
 2308 00ac 11       		.uleb128 0x11
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 70


 2309 00ad 01       		.uleb128 0x1
 2310 00ae 31       		.uleb128 0x31
 2311 00af 13       		.uleb128 0x13
 2312 00b0 00       		.byte	0
 2313 00b1 00       		.byte	0
 2314 00b2 0F       		.uleb128 0xf
 2315 00b3 2E       		.uleb128 0x2e
 2316 00b4 00       		.byte	0
 2317 00b5 3F       		.uleb128 0x3f
 2318 00b6 19       		.uleb128 0x19
 2319 00b7 03       		.uleb128 0x3
 2320 00b8 0E       		.uleb128 0xe
 2321 00b9 3A       		.uleb128 0x3a
 2322 00ba 0B       		.uleb128 0xb
 2323 00bb 3B       		.uleb128 0x3b
 2324 00bc 05       		.uleb128 0x5
 2325 00bd 27       		.uleb128 0x27
 2326 00be 19       		.uleb128 0x19
 2327 00bf 49       		.uleb128 0x49
 2328 00c0 13       		.uleb128 0x13
 2329 00c1 11       		.uleb128 0x11
 2330 00c2 01       		.uleb128 0x1
 2331 00c3 12       		.uleb128 0x12
 2332 00c4 06       		.uleb128 0x6
 2333 00c5 40       		.uleb128 0x40
 2334 00c6 18       		.uleb128 0x18
 2335 00c7 9742     		.uleb128 0x2117
 2336 00c9 19       		.uleb128 0x19
 2337 00ca 00       		.byte	0
 2338 00cb 00       		.byte	0
 2339 00cc 10       		.uleb128 0x10
 2340 00cd 2E       		.uleb128 0x2e
 2341 00ce 01       		.byte	0x1
 2342 00cf 3F       		.uleb128 0x3f
 2343 00d0 19       		.uleb128 0x19
 2344 00d1 03       		.uleb128 0x3
 2345 00d2 0E       		.uleb128 0xe
 2346 00d3 3A       		.uleb128 0x3a
 2347 00d4 0B       		.uleb128 0xb
 2348 00d5 3B       		.uleb128 0x3b
 2349 00d6 05       		.uleb128 0x5
 2350 00d7 27       		.uleb128 0x27
 2351 00d8 19       		.uleb128 0x19
 2352 00d9 11       		.uleb128 0x11
 2353 00da 01       		.uleb128 0x1
 2354 00db 12       		.uleb128 0x12
 2355 00dc 06       		.uleb128 0x6
 2356 00dd 40       		.uleb128 0x40
 2357 00de 18       		.uleb128 0x18
 2358 00df 9742     		.uleb128 0x2117
 2359 00e1 19       		.uleb128 0x19
 2360 00e2 01       		.uleb128 0x1
 2361 00e3 13       		.uleb128 0x13
 2362 00e4 00       		.byte	0
 2363 00e5 00       		.byte	0
 2364 00e6 11       		.uleb128 0x11
 2365 00e7 05       		.uleb128 0x5
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 71


 2366 00e8 00       		.byte	0
 2367 00e9 03       		.uleb128 0x3
 2368 00ea 0E       		.uleb128 0xe
 2369 00eb 3A       		.uleb128 0x3a
 2370 00ec 0B       		.uleb128 0xb
 2371 00ed 3B       		.uleb128 0x3b
 2372 00ee 05       		.uleb128 0x5
 2373 00ef 49       		.uleb128 0x49
 2374 00f0 13       		.uleb128 0x13
 2375 00f1 02       		.uleb128 0x2
 2376 00f2 18       		.uleb128 0x18
 2377 00f3 00       		.byte	0
 2378 00f4 00       		.byte	0
 2379 00f5 12       		.uleb128 0x12
 2380 00f6 2E       		.uleb128 0x2e
 2381 00f7 00       		.byte	0
 2382 00f8 3F       		.uleb128 0x3f
 2383 00f9 19       		.uleb128 0x19
 2384 00fa 03       		.uleb128 0x3
 2385 00fb 0E       		.uleb128 0xe
 2386 00fc 3A       		.uleb128 0x3a
 2387 00fd 0B       		.uleb128 0xb
 2388 00fe 3B       		.uleb128 0x3b
 2389 00ff 05       		.uleb128 0x5
 2390 0100 27       		.uleb128 0x27
 2391 0101 19       		.uleb128 0x19
 2392 0102 11       		.uleb128 0x11
 2393 0103 01       		.uleb128 0x1
 2394 0104 12       		.uleb128 0x12
 2395 0105 06       		.uleb128 0x6
 2396 0106 40       		.uleb128 0x40
 2397 0107 18       		.uleb128 0x18
 2398 0108 9742     		.uleb128 0x2117
 2399 010a 19       		.uleb128 0x19
 2400 010b 00       		.byte	0
 2401 010c 00       		.byte	0
 2402 010d 13       		.uleb128 0x13
 2403 010e 2E       		.uleb128 0x2e
 2404 010f 01       		.byte	0x1
 2405 0110 3F       		.uleb128 0x3f
 2406 0111 19       		.uleb128 0x19
 2407 0112 03       		.uleb128 0x3
 2408 0113 0E       		.uleb128 0xe
 2409 0114 3A       		.uleb128 0x3a
 2410 0115 0B       		.uleb128 0xb
 2411 0116 3B       		.uleb128 0x3b
 2412 0117 05       		.uleb128 0x5
 2413 0118 27       		.uleb128 0x27
 2414 0119 19       		.uleb128 0x19
 2415 011a 49       		.uleb128 0x49
 2416 011b 13       		.uleb128 0x13
 2417 011c 11       		.uleb128 0x11
 2418 011d 01       		.uleb128 0x1
 2419 011e 12       		.uleb128 0x12
 2420 011f 06       		.uleb128 0x6
 2421 0120 40       		.uleb128 0x40
 2422 0121 18       		.uleb128 0x18
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 72


 2423 0122 9742     		.uleb128 0x2117
 2424 0124 19       		.uleb128 0x19
 2425 0125 01       		.uleb128 0x1
 2426 0126 13       		.uleb128 0x13
 2427 0127 00       		.byte	0
 2428 0128 00       		.byte	0
 2429 0129 14       		.uleb128 0x14
 2430 012a 34       		.uleb128 0x34
 2431 012b 00       		.byte	0
 2432 012c 03       		.uleb128 0x3
 2433 012d 0E       		.uleb128 0xe
 2434 012e 3A       		.uleb128 0x3a
 2435 012f 0B       		.uleb128 0xb
 2436 0130 3B       		.uleb128 0x3b
 2437 0131 05       		.uleb128 0x5
 2438 0132 49       		.uleb128 0x49
 2439 0133 13       		.uleb128 0x13
 2440 0134 02       		.uleb128 0x2
 2441 0135 17       		.uleb128 0x17
 2442 0136 00       		.byte	0
 2443 0137 00       		.byte	0
 2444 0138 15       		.uleb128 0x15
 2445 0139 34       		.uleb128 0x34
 2446 013a 00       		.byte	0
 2447 013b 03       		.uleb128 0x3
 2448 013c 0E       		.uleb128 0xe
 2449 013d 3A       		.uleb128 0x3a
 2450 013e 0B       		.uleb128 0xb
 2451 013f 3B       		.uleb128 0x3b
 2452 0140 05       		.uleb128 0x5
 2453 0141 49       		.uleb128 0x49
 2454 0142 13       		.uleb128 0x13
 2455 0143 02       		.uleb128 0x2
 2456 0144 18       		.uleb128 0x18
 2457 0145 00       		.byte	0
 2458 0146 00       		.byte	0
 2459 0147 16       		.uleb128 0x16
 2460 0148 05       		.uleb128 0x5
 2461 0149 00       		.byte	0
 2462 014a 03       		.uleb128 0x3
 2463 014b 0E       		.uleb128 0xe
 2464 014c 3A       		.uleb128 0x3a
 2465 014d 0B       		.uleb128 0xb
 2466 014e 3B       		.uleb128 0x3b
 2467 014f 05       		.uleb128 0x5
 2468 0150 49       		.uleb128 0x49
 2469 0151 13       		.uleb128 0x13
 2470 0152 02       		.uleb128 0x2
 2471 0153 17       		.uleb128 0x17
 2472 0154 00       		.byte	0
 2473 0155 00       		.byte	0
 2474 0156 17       		.uleb128 0x17
 2475 0157 26       		.uleb128 0x26
 2476 0158 00       		.byte	0
 2477 0159 49       		.uleb128 0x49
 2478 015a 13       		.uleb128 0x13
 2479 015b 00       		.byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 73


 2480 015c 00       		.byte	0
 2481 015d 18       		.uleb128 0x18
 2482 015e 0B       		.uleb128 0xb
 2483 015f 01       		.byte	0x1
 2484 0160 11       		.uleb128 0x11
 2485 0161 01       		.uleb128 0x1
 2486 0162 12       		.uleb128 0x12
 2487 0163 06       		.uleb128 0x6
 2488 0164 00       		.byte	0
 2489 0165 00       		.byte	0
 2490 0166 19       		.uleb128 0x19
 2491 0167 34       		.uleb128 0x34
 2492 0168 00       		.byte	0
 2493 0169 03       		.uleb128 0x3
 2494 016a 0E       		.uleb128 0xe
 2495 016b 3A       		.uleb128 0x3a
 2496 016c 0B       		.uleb128 0xb
 2497 016d 3B       		.uleb128 0x3b
 2498 016e 0B       		.uleb128 0xb
 2499 016f 49       		.uleb128 0x49
 2500 0170 13       		.uleb128 0x13
 2501 0171 3F       		.uleb128 0x3f
 2502 0172 19       		.uleb128 0x19
 2503 0173 02       		.uleb128 0x2
 2504 0174 18       		.uleb128 0x18
 2505 0175 00       		.byte	0
 2506 0176 00       		.byte	0
 2507 0177 1A       		.uleb128 0x1a
 2508 0178 01       		.uleb128 0x1
 2509 0179 01       		.byte	0x1
 2510 017a 49       		.uleb128 0x49
 2511 017b 13       		.uleb128 0x13
 2512 017c 01       		.uleb128 0x1
 2513 017d 13       		.uleb128 0x13
 2514 017e 00       		.byte	0
 2515 017f 00       		.byte	0
 2516 0180 1B       		.uleb128 0x1b
 2517 0181 21       		.uleb128 0x21
 2518 0182 00       		.byte	0
 2519 0183 49       		.uleb128 0x49
 2520 0184 13       		.uleb128 0x13
 2521 0185 2F       		.uleb128 0x2f
 2522 0186 0B       		.uleb128 0xb
 2523 0187 00       		.byte	0
 2524 0188 00       		.byte	0
 2525 0189 1C       		.uleb128 0x1c
 2526 018a 2E       		.uleb128 0x2e
 2527 018b 01       		.byte	0x1
 2528 018c 3F       		.uleb128 0x3f
 2529 018d 19       		.uleb128 0x19
 2530 018e 03       		.uleb128 0x3
 2531 018f 0E       		.uleb128 0xe
 2532 0190 3A       		.uleb128 0x3a
 2533 0191 0B       		.uleb128 0xb
 2534 0192 3B       		.uleb128 0x3b
 2535 0193 0B       		.uleb128 0xb
 2536 0194 27       		.uleb128 0x27
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 74


 2537 0195 19       		.uleb128 0x19
 2538 0196 49       		.uleb128 0x49
 2539 0197 13       		.uleb128 0x13
 2540 0198 3C       		.uleb128 0x3c
 2541 0199 19       		.uleb128 0x19
 2542 019a 01       		.uleb128 0x1
 2543 019b 13       		.uleb128 0x13
 2544 019c 00       		.byte	0
 2545 019d 00       		.byte	0
 2546 019e 1D       		.uleb128 0x1d
 2547 019f 05       		.uleb128 0x5
 2548 01a0 00       		.byte	0
 2549 01a1 49       		.uleb128 0x49
 2550 01a2 13       		.uleb128 0x13
 2551 01a3 00       		.byte	0
 2552 01a4 00       		.byte	0
 2553 01a5 1E       		.uleb128 0x1e
 2554 01a6 2E       		.uleb128 0x2e
 2555 01a7 01       		.byte	0x1
 2556 01a8 3F       		.uleb128 0x3f
 2557 01a9 19       		.uleb128 0x19
 2558 01aa 03       		.uleb128 0x3
 2559 01ab 0E       		.uleb128 0xe
 2560 01ac 3A       		.uleb128 0x3a
 2561 01ad 0B       		.uleb128 0xb
 2562 01ae 3B       		.uleb128 0x3b
 2563 01af 0B       		.uleb128 0xb
 2564 01b0 27       		.uleb128 0x27
 2565 01b1 19       		.uleb128 0x19
 2566 01b2 3C       		.uleb128 0x3c
 2567 01b3 19       		.uleb128 0x19
 2568 01b4 01       		.uleb128 0x1
 2569 01b5 13       		.uleb128 0x13
 2570 01b6 00       		.byte	0
 2571 01b7 00       		.byte	0
 2572 01b8 1F       		.uleb128 0x1f
 2573 01b9 2E       		.uleb128 0x2e
 2574 01ba 00       		.byte	0
 2575 01bb 3F       		.uleb128 0x3f
 2576 01bc 19       		.uleb128 0x19
 2577 01bd 03       		.uleb128 0x3
 2578 01be 0E       		.uleb128 0xe
 2579 01bf 3A       		.uleb128 0x3a
 2580 01c0 0B       		.uleb128 0xb
 2581 01c1 3B       		.uleb128 0x3b
 2582 01c2 0B       		.uleb128 0xb
 2583 01c3 27       		.uleb128 0x27
 2584 01c4 19       		.uleb128 0x19
 2585 01c5 49       		.uleb128 0x49
 2586 01c6 13       		.uleb128 0x13
 2587 01c7 3C       		.uleb128 0x3c
 2588 01c8 19       		.uleb128 0x19
 2589 01c9 00       		.byte	0
 2590 01ca 00       		.byte	0
 2591 01cb 20       		.uleb128 0x20
 2592 01cc 2E       		.uleb128 0x2e
 2593 01cd 01       		.byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 75


 2594 01ce 3F       		.uleb128 0x3f
 2595 01cf 19       		.uleb128 0x19
 2596 01d0 03       		.uleb128 0x3
 2597 01d1 0E       		.uleb128 0xe
 2598 01d2 3A       		.uleb128 0x3a
 2599 01d3 0B       		.uleb128 0xb
 2600 01d4 3B       		.uleb128 0x3b
 2601 01d5 0B       		.uleb128 0xb
 2602 01d6 27       		.uleb128 0x27
 2603 01d7 19       		.uleb128 0x19
 2604 01d8 3C       		.uleb128 0x3c
 2605 01d9 19       		.uleb128 0x19
 2606 01da 00       		.byte	0
 2607 01db 00       		.byte	0
 2608 01dc 00       		.byte	0
 2609              		.section	.debug_loc,"",%progbits
 2610              	.Ldebug_loc0:
 2611              	.LLST0:
 2612 0000 06000000 		.4byte	.LVL2
 2613 0004 2D000000 		.4byte	.LVL3-1
 2614 0008 0100     		.2byte	0x1
 2615 000a 50       		.byte	0x50
 2616 000b 00000000 		.4byte	0
 2617 000f 00000000 		.4byte	0
 2618              	.LLST1:
 2619 0013 08000000 		.4byte	.LVL8
 2620 0017 32000000 		.4byte	.LVL11
 2621 001b 0100     		.2byte	0x1
 2622 001d 54       		.byte	0x54
 2623 001e 00000000 		.4byte	0
 2624 0022 00000000 		.4byte	0
 2625              	.LLST2:
 2626 0026 22000000 		.4byte	.LVL16
 2627 002a 40000000 		.4byte	.LVL22
 2628 002e 0100     		.2byte	0x1
 2629 0030 54       		.byte	0x54
 2630 0031 46000000 		.4byte	.LVL24
 2631 0035 4E000000 		.4byte	.LVL26
 2632 0039 0100     		.2byte	0x1
 2633 003b 54       		.byte	0x54
 2634 003c 00000000 		.4byte	0
 2635 0040 00000000 		.4byte	0
 2636              	.LLST3:
 2637 0044 0C000000 		.4byte	.LVL14
 2638 0048 24000000 		.4byte	.LVL17
 2639 004c 0100     		.2byte	0x1
 2640 004e 53       		.byte	0x53
 2641 004f 24000000 		.4byte	.LVL17
 2642 0053 26000000 		.4byte	.LVL18
 2643 0057 0300     		.2byte	0x3
 2644 0059 73       		.byte	0x73
 2645 005a 7F       		.sleb128 -1
 2646 005b 9F       		.byte	0x9f
 2647 005c 26000000 		.4byte	.LVL18
 2648 0060 32000000 		.4byte	.LVL20
 2649 0064 0100     		.2byte	0x1
 2650 0066 53       		.byte	0x53
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 76


 2651 0067 32000000 		.4byte	.LVL20
 2652 006b 3E000000 		.4byte	.LVL21
 2653 006f 0500     		.2byte	0x5
 2654 0071 03       		.byte	0x3
 2655 0072 00000000 		.4byte	Surtidor_rxBufferRead
 2656 0076 40000000 		.4byte	.LVL22
 2657 007a 42000000 		.4byte	.LVL23
 2658 007e 0100     		.2byte	0x1
 2659 0080 53       		.byte	0x53
 2660 0081 00000000 		.4byte	0
 2661 0085 00000000 		.4byte	0
 2662              	.LLST4:
 2663 0089 10000000 		.4byte	.LVL15
 2664 008d 49000000 		.4byte	.LVL25-1
 2665 0091 0100     		.2byte	0x1
 2666 0093 51       		.byte	0x51
 2667 0094 00000000 		.4byte	0
 2668 0098 00000000 		.4byte	0
 2669              	.LLST5:
 2670 009c 02000000 		.4byte	.LVL29
 2671 00a0 22000000 		.4byte	.LVL33
 2672 00a4 0200     		.2byte	0x2
 2673 00a6 30       		.byte	0x30
 2674 00a7 9F       		.byte	0x9f
 2675 00a8 22000000 		.4byte	.LVL33
 2676 00ac 40000000 		.4byte	.LVL39
 2677 00b0 0100     		.2byte	0x1
 2678 00b2 54       		.byte	0x54
 2679 00b3 40000000 		.4byte	.LVL39
 2680 00b7 52000000 		.4byte	.LVL42
 2681 00bb 0200     		.2byte	0x2
 2682 00bd 30       		.byte	0x30
 2683 00be 9F       		.byte	0x9f
 2684 00bf 52000000 		.4byte	.LVL42
 2685 00c3 5A000000 		.4byte	.LVL43
 2686 00c7 0100     		.2byte	0x1
 2687 00c9 54       		.byte	0x54
 2688 00ca 5A000000 		.4byte	.LVL43
 2689 00ce 5E000000 		.4byte	.LVL44
 2690 00d2 0200     		.2byte	0x2
 2691 00d4 30       		.byte	0x30
 2692 00d5 9F       		.byte	0x9f
 2693 00d6 5E000000 		.4byte	.LVL44
 2694 00da 68000000 		.4byte	.LVL47
 2695 00de 0100     		.2byte	0x1
 2696 00e0 54       		.byte	0x54
 2697 00e1 00000000 		.4byte	0
 2698 00e5 00000000 		.4byte	0
 2699              	.LLST6:
 2700 00e9 46000000 		.4byte	.LVL41
 2701 00ed 60000000 		.4byte	.LVL45
 2702 00f1 0100     		.2byte	0x1
 2703 00f3 53       		.byte	0x53
 2704 00f4 00000000 		.4byte	0
 2705 00f8 00000000 		.4byte	0
 2706              	.LLST7:
 2707 00fc 0C000000 		.4byte	.LVL31
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 77


 2708 0100 24000000 		.4byte	.LVL34
 2709 0104 0100     		.2byte	0x1
 2710 0106 53       		.byte	0x53
 2711 0107 24000000 		.4byte	.LVL34
 2712 010b 26000000 		.4byte	.LVL35
 2713 010f 0300     		.2byte	0x3
 2714 0111 73       		.byte	0x73
 2715 0112 7F       		.sleb128 -1
 2716 0113 9F       		.byte	0x9f
 2717 0114 26000000 		.4byte	.LVL35
 2718 0118 32000000 		.4byte	.LVL37
 2719 011c 0100     		.2byte	0x1
 2720 011e 53       		.byte	0x53
 2721 011f 32000000 		.4byte	.LVL37
 2722 0123 3E000000 		.4byte	.LVL38
 2723 0127 0500     		.2byte	0x5
 2724 0129 03       		.byte	0x3
 2725 012a 00000000 		.4byte	Surtidor_rxBufferRead
 2726 012e 40000000 		.4byte	.LVL39
 2727 0132 42000000 		.4byte	.LVL40
 2728 0136 0100     		.2byte	0x1
 2729 0138 53       		.byte	0x53
 2730 0139 00000000 		.4byte	0
 2731 013d 00000000 		.4byte	0
 2732              	.LLST8:
 2733 0141 10000000 		.4byte	.LVL32
 2734 0145 63000000 		.4byte	.LVL46-1
 2735 0149 0100     		.2byte	0x1
 2736 014b 51       		.byte	0x51
 2737 014c 00000000 		.4byte	0
 2738 0150 00000000 		.4byte	0
 2739              	.LLST9:
 2740 0154 3C000000 		.4byte	.LVL51
 2741 0158 3E000000 		.4byte	.LVL52
 2742 015c 0100     		.2byte	0x1
 2743 015e 54       		.byte	0x54
 2744 015f 50000000 		.4byte	.LVL53
 2745 0163 52000000 		.4byte	.LVL54
 2746 0167 0100     		.2byte	0x1
 2747 0169 54       		.byte	0x54
 2748 016a 54000000 		.4byte	.LVL55
 2749 016e 5C000000 		.4byte	.LVL57
 2750 0172 0100     		.2byte	0x1
 2751 0174 54       		.byte	0x54
 2752 0175 00000000 		.4byte	0
 2753 0179 00000000 		.4byte	0
 2754              	.LLST10:
 2755 017d 06000000 		.4byte	.LVL58
 2756 0181 1B000000 		.4byte	.LVL59-1
 2757 0185 0100     		.2byte	0x1
 2758 0187 50       		.byte	0x50
 2759 0188 00000000 		.4byte	0
 2760 018c 00000000 		.4byte	0
 2761              	.LLST11:
 2762 0190 00000000 		.4byte	.LVL68
 2763 0194 0A000000 		.4byte	.LVL70
 2764 0198 0100     		.2byte	0x1
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 78


 2765 019a 50       		.byte	0x50
 2766 019b 0A000000 		.4byte	.LVL70
 2767 019f 14000000 		.4byte	.LVL74
 2768 01a3 0100     		.2byte	0x1
 2769 01a5 55       		.byte	0x55
 2770 01a6 14000000 		.4byte	.LVL74
 2771 01aa 18000000 		.4byte	.LVL75
 2772 01ae 0100     		.2byte	0x1
 2773 01b0 50       		.byte	0x50
 2774 01b1 18000000 		.4byte	.LVL75
 2775 01b5 20000000 		.4byte	.LVL76
 2776 01b9 0100     		.2byte	0x1
 2777 01bb 55       		.byte	0x55
 2778 01bc 20000000 		.4byte	.LVL76
 2779 01c0 24000000 		.4byte	.LFE22
 2780 01c4 0400     		.2byte	0x4
 2781 01c6 F3       		.byte	0xf3
 2782 01c7 01       		.uleb128 0x1
 2783 01c8 50       		.byte	0x50
 2784 01c9 9F       		.byte	0x9f
 2785 01ca 00000000 		.4byte	0
 2786 01ce 00000000 		.4byte	0
 2787              	.LLST12:
 2788 01d2 02000000 		.4byte	.LVL69
 2789 01d6 0A000000 		.4byte	.LVL70
 2790 01da 0200     		.2byte	0x2
 2791 01dc 30       		.byte	0x30
 2792 01dd 9F       		.byte	0x9f
 2793 01de 0A000000 		.4byte	.LVL70
 2794 01e2 10000000 		.4byte	.LVL72
 2795 01e6 0100     		.2byte	0x1
 2796 01e8 54       		.byte	0x54
 2797 01e9 12000000 		.4byte	.LVL73
 2798 01ed 14000000 		.4byte	.LVL74
 2799 01f1 0100     		.2byte	0x1
 2800 01f3 54       		.byte	0x54
 2801 01f4 14000000 		.4byte	.LVL74
 2802 01f8 18000000 		.4byte	.LVL75
 2803 01fc 0200     		.2byte	0x2
 2804 01fe 30       		.byte	0x30
 2805 01ff 9F       		.byte	0x9f
 2806 0200 18000000 		.4byte	.LVL75
 2807 0204 20000000 		.4byte	.LVL76
 2808 0208 0100     		.2byte	0x1
 2809 020a 54       		.byte	0x54
 2810 020b 00000000 		.4byte	0
 2811 020f 00000000 		.4byte	0
 2812              	.LLST13:
 2813 0213 00000000 		.4byte	.LVL77
 2814 0217 0E000000 		.4byte	.LVL78
 2815 021b 0100     		.2byte	0x1
 2816 021d 50       		.byte	0x50
 2817 021e 0E000000 		.4byte	.LVL78
 2818 0222 1E000000 		.4byte	.LVL82
 2819 0226 0100     		.2byte	0x1
 2820 0228 55       		.byte	0x55
 2821 0229 1E000000 		.4byte	.LVL82
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 79


 2822 022d 24000000 		.4byte	.LFE23
 2823 0231 0100     		.2byte	0x1
 2824 0233 50       		.byte	0x50
 2825 0234 00000000 		.4byte	0
 2826 0238 00000000 		.4byte	0
 2827              	.LLST14:
 2828 023c 00000000 		.4byte	.LVL77
 2829 0240 0E000000 		.4byte	.LVL78
 2830 0244 0100     		.2byte	0x1
 2831 0246 51       		.byte	0x51
 2832 0247 0E000000 		.4byte	.LVL78
 2833 024b 1E000000 		.4byte	.LVL82
 2834 024f 0400     		.2byte	0x4
 2835 0251 F3       		.byte	0xf3
 2836 0252 01       		.uleb128 0x1
 2837 0253 51       		.byte	0x51
 2838 0254 9F       		.byte	0x9f
 2839 0255 1E000000 		.4byte	.LVL82
 2840 0259 24000000 		.4byte	.LFE23
 2841 025d 0100     		.2byte	0x1
 2842 025f 51       		.byte	0x51
 2843 0260 00000000 		.4byte	0
 2844 0264 00000000 		.4byte	0
 2845              	.LLST15:
 2846 0268 00000000 		.4byte	.LVL77
 2847 026c 0E000000 		.4byte	.LVL78
 2848 0270 0200     		.2byte	0x2
 2849 0272 30       		.byte	0x30
 2850 0273 9F       		.byte	0x9f
 2851 0274 0E000000 		.4byte	.LVL78
 2852 0278 16000000 		.4byte	.LVL80
 2853 027c 0100     		.2byte	0x1
 2854 027e 54       		.byte	0x54
 2855 027f 18000000 		.4byte	.LVL81
 2856 0283 1E000000 		.4byte	.LVL82
 2857 0287 0100     		.2byte	0x1
 2858 0289 54       		.byte	0x54
 2859 028a 1E000000 		.4byte	.LVL82
 2860 028e 24000000 		.4byte	.LFE23
 2861 0292 0200     		.2byte	0x2
 2862 0294 30       		.byte	0x30
 2863 0295 9F       		.byte	0x9f
 2864 0296 00000000 		.4byte	0
 2865 029a 00000000 		.4byte	0
 2866              	.LLST16:
 2867 029e 00000000 		.4byte	.LVL83
 2868 02a2 0B000000 		.4byte	.LVL84-1
 2869 02a6 0100     		.2byte	0x1
 2870 02a8 50       		.byte	0x50
 2871 02a9 0B000000 		.4byte	.LVL84-1
 2872 02ad 20000000 		.4byte	.LFE24
 2873 02b1 0400     		.2byte	0x4
 2874 02b3 F3       		.byte	0xf3
 2875 02b4 01       		.uleb128 0x1
 2876 02b5 50       		.byte	0x50
 2877 02b6 9F       		.byte	0x9f
 2878 02b7 00000000 		.4byte	0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 80


 2879 02bb 00000000 		.4byte	0
 2880              	.LLST17:
 2881 02bf 06000000 		.4byte	.LVL87
 2882 02c3 1C000000 		.4byte	.LVL88
 2883 02c7 0100     		.2byte	0x1
 2884 02c9 53       		.byte	0x53
 2885 02ca 1C000000 		.4byte	.LVL88
 2886 02ce 24000000 		.4byte	.LFE25
 2887 02d2 0100     		.2byte	0x1
 2888 02d4 50       		.byte	0x50
 2889 02d5 00000000 		.4byte	0
 2890 02d9 00000000 		.4byte	0
 2891              	.LLST18:
 2892 02dd 06000000 		.4byte	.LVL89
 2893 02e1 1B000000 		.4byte	.LVL90-1
 2894 02e5 0100     		.2byte	0x1
 2895 02e7 50       		.byte	0x50
 2896 02e8 00000000 		.4byte	0
 2897 02ec 00000000 		.4byte	0
 2898              	.LLST19:
 2899 02f0 00000000 		.4byte	.LVL91
 2900 02f4 3C000000 		.4byte	.LVL96
 2901 02f8 0100     		.2byte	0x1
 2902 02fa 50       		.byte	0x50
 2903 02fb 3C000000 		.4byte	.LVL96
 2904 02ff 58000000 		.4byte	.LFE27
 2905 0303 0400     		.2byte	0x4
 2906 0305 F3       		.byte	0xf3
 2907 0306 01       		.uleb128 0x1
 2908 0307 50       		.byte	0x50
 2909 0308 9F       		.byte	0x9f
 2910 0309 00000000 		.4byte	0
 2911 030d 00000000 		.4byte	0
 2912              	.LLST20:
 2913 0311 22000000 		.4byte	.LVL92
 2914 0315 28000000 		.4byte	.LVL93
 2915 0319 0100     		.2byte	0x1
 2916 031b 53       		.byte	0x53
 2917 031c 34000000 		.4byte	.LVL94
 2918 0320 3A000000 		.4byte	.LVL95
 2919 0324 0100     		.2byte	0x1
 2920 0326 53       		.byte	0x53
 2921 0327 00000000 		.4byte	0
 2922 032b 00000000 		.4byte	0
 2923              		.section	.debug_aranges,"",%progbits
 2924 0000 FC000000 		.4byte	0xfc
 2925 0004 0200     		.2byte	0x2
 2926 0006 00000000 		.4byte	.Ldebug_info0
 2927 000a 04       		.byte	0x4
 2928 000b 00       		.byte	0
 2929 000c 0000     		.2byte	0
 2930 000e 0000     		.2byte	0
 2931 0010 00000000 		.4byte	.LFB1
 2932 0014 3C000000 		.4byte	.LFE1-.LFB1
 2933 0018 00000000 		.4byte	.LFB2
 2934 001c 3C000000 		.4byte	.LFE2-.LFB2
 2935 0020 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 81


 2936 0024 1C000000 		.4byte	.LFE0-.LFB0
 2937 0028 00000000 		.4byte	.LFB4
 2938 002c 04000000 		.4byte	.LFE4-.LFB4
 2939 0030 00000000 		.4byte	.LFB5
 2940 0034 02000000 		.4byte	.LFE5-.LFB5
 2941 0038 00000000 		.4byte	.LFB6
 2942 003c 0C000000 		.4byte	.LFE6-.LFB6
 2943 0040 00000000 		.4byte	.LFB7
 2944 0044 0C000000 		.4byte	.LFE7-.LFB7
 2945 0048 00000000 		.4byte	.LFB3
 2946 004c 3C000000 		.4byte	.LFE3-.LFB3
 2947 0050 00000000 		.4byte	.LFB8
 2948 0054 0C000000 		.4byte	.LFE8-.LFB8
 2949 0058 00000000 		.4byte	.LFB9
 2950 005c 5C000000 		.4byte	.LFE9-.LFB9
 2951 0060 00000000 		.4byte	.LFB10
 2952 0064 28000000 		.4byte	.LFE10-.LFB10
 2953 0068 00000000 		.4byte	.LFB11
 2954 006c 78000000 		.4byte	.LFE11-.LFB11
 2955 0070 00000000 		.4byte	.LFB12
 2956 0074 12000000 		.4byte	.LFE12-.LFB12
 2957 0078 00000000 		.4byte	.LFB13
 2958 007c 60000000 		.4byte	.LFE13-.LFB13
 2959 0080 00000000 		.4byte	.LFB14
 2960 0084 3C000000 		.4byte	.LFE14-.LFB14
 2961 0088 00000000 		.4byte	.LFB15
 2962 008c 02000000 		.4byte	.LFE15-.LFB15
 2963 0090 00000000 		.4byte	.LFB16
 2964 0094 0C000000 		.4byte	.LFE16-.LFB16
 2965 0098 00000000 		.4byte	.LFB17
 2966 009c 0C000000 		.4byte	.LFE17-.LFB17
 2967 00a0 00000000 		.4byte	.LFB18
 2968 00a4 0C000000 		.4byte	.LFE18-.LFB18
 2969 00a8 00000000 		.4byte	.LFB19
 2970 00ac 14000000 		.4byte	.LFE19-.LFB19
 2971 00b0 00000000 		.4byte	.LFB20
 2972 00b4 0C000000 		.4byte	.LFE20-.LFB20
 2973 00b8 00000000 		.4byte	.LFB21
 2974 00bc 18000000 		.4byte	.LFE21-.LFB21
 2975 00c0 00000000 		.4byte	.LFB22
 2976 00c4 24000000 		.4byte	.LFE22-.LFB22
 2977 00c8 00000000 		.4byte	.LFB23
 2978 00cc 24000000 		.4byte	.LFE23-.LFB23
 2979 00d0 00000000 		.4byte	.LFB24
 2980 00d4 20000000 		.4byte	.LFE24-.LFB24
 2981 00d8 00000000 		.4byte	.LFB25
 2982 00dc 24000000 		.4byte	.LFE25-.LFB25
 2983 00e0 00000000 		.4byte	.LFB26
 2984 00e4 24000000 		.4byte	.LFE26-.LFB26
 2985 00e8 00000000 		.4byte	.LFB27
 2986 00ec 58000000 		.4byte	.LFE27-.LFB27
 2987 00f0 00000000 		.4byte	.LFB28
 2988 00f4 02000000 		.4byte	.LFE28-.LFB28
 2989 00f8 00000000 		.4byte	0
 2990 00fc 00000000 		.4byte	0
 2991              		.section	.debug_ranges,"",%progbits
 2992              	.Ldebug_ranges0:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 82


 2993 0000 00000000 		.4byte	.LFB1
 2994 0004 3C000000 		.4byte	.LFE1
 2995 0008 00000000 		.4byte	.LFB2
 2996 000c 3C000000 		.4byte	.LFE2
 2997 0010 00000000 		.4byte	.LFB0
 2998 0014 1C000000 		.4byte	.LFE0
 2999 0018 00000000 		.4byte	.LFB4
 3000 001c 04000000 		.4byte	.LFE4
 3001 0020 00000000 		.4byte	.LFB5
 3002 0024 02000000 		.4byte	.LFE5
 3003 0028 00000000 		.4byte	.LFB6
 3004 002c 0C000000 		.4byte	.LFE6
 3005 0030 00000000 		.4byte	.LFB7
 3006 0034 0C000000 		.4byte	.LFE7
 3007 0038 00000000 		.4byte	.LFB3
 3008 003c 3C000000 		.4byte	.LFE3
 3009 0040 00000000 		.4byte	.LFB8
 3010 0044 0C000000 		.4byte	.LFE8
 3011 0048 00000000 		.4byte	.LFB9
 3012 004c 5C000000 		.4byte	.LFE9
 3013 0050 00000000 		.4byte	.LFB10
 3014 0054 28000000 		.4byte	.LFE10
 3015 0058 00000000 		.4byte	.LFB11
 3016 005c 78000000 		.4byte	.LFE11
 3017 0060 00000000 		.4byte	.LFB12
 3018 0064 12000000 		.4byte	.LFE12
 3019 0068 00000000 		.4byte	.LFB13
 3020 006c 60000000 		.4byte	.LFE13
 3021 0070 00000000 		.4byte	.LFB14
 3022 0074 3C000000 		.4byte	.LFE14
 3023 0078 00000000 		.4byte	.LFB15
 3024 007c 02000000 		.4byte	.LFE15
 3025 0080 00000000 		.4byte	.LFB16
 3026 0084 0C000000 		.4byte	.LFE16
 3027 0088 00000000 		.4byte	.LFB17
 3028 008c 0C000000 		.4byte	.LFE17
 3029 0090 00000000 		.4byte	.LFB18
 3030 0094 0C000000 		.4byte	.LFE18
 3031 0098 00000000 		.4byte	.LFB19
 3032 009c 14000000 		.4byte	.LFE19
 3033 00a0 00000000 		.4byte	.LFB20
 3034 00a4 0C000000 		.4byte	.LFE20
 3035 00a8 00000000 		.4byte	.LFB21
 3036 00ac 18000000 		.4byte	.LFE21
 3037 00b0 00000000 		.4byte	.LFB22
 3038 00b4 24000000 		.4byte	.LFE22
 3039 00b8 00000000 		.4byte	.LFB23
 3040 00bc 24000000 		.4byte	.LFE23
 3041 00c0 00000000 		.4byte	.LFB24
 3042 00c4 20000000 		.4byte	.LFE24
 3043 00c8 00000000 		.4byte	.LFB25
 3044 00cc 24000000 		.4byte	.LFE25
 3045 00d0 00000000 		.4byte	.LFB26
 3046 00d4 24000000 		.4byte	.LFE26
 3047 00d8 00000000 		.4byte	.LFB27
 3048 00dc 58000000 		.4byte	.LFE27
 3049 00e0 00000000 		.4byte	.LFB28
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 83


 3050 00e4 02000000 		.4byte	.LFE28
 3051 00e8 00000000 		.4byte	0
 3052 00ec 00000000 		.4byte	0
 3053              		.section	.debug_line,"",%progbits
 3054              	.Ldebug_line0:
 3055 0000 17030000 		.section	.debug_str,"MS",%progbits,1
 3055      02005200 
 3055      00000201 
 3055      FB0E0D00 
 3055      01010101 
 3056              	.LASF37:
 3057 0000 53757274 		.ascii	"Surtidor_GetChar\000"
 3057      69646F72 
 3057      5F476574 
 3057      43686172 
 3057      00
 3058              	.LASF10:
 3059 0011 75696E74 		.ascii	"uint16\000"
 3059      313600
 3060              	.LASF33:
 3061 0018 6C6F635F 		.ascii	"loc_rxBufferWrite\000"
 3061      72784275 
 3061      66666572 
 3061      57726974 
 3061      6500
 3062              	.LASF60:
 3063 002a 53757274 		.ascii	"Surtidor_GetTxBufferSize\000"
 3063      69646F72 
 3063      5F476574 
 3063      54784275 
 3063      66666572 
 3064              	.LASF79:
 3065 0043 43794578 		.ascii	"CyExitCriticalSection\000"
 3065      69744372 
 3065      69746963 
 3065      616C5365 
 3065      6374696F 
 3066              	.LASF50:
 3067 0059 74784461 		.ascii	"txDataByte\000"
 3067      74614279 
 3067      746500
 3068              	.LASF55:
 3069 0064 73747269 		.ascii	"string\000"
 3069      6E6700
 3070              	.LASF57:
 3071 006b 53757274 		.ascii	"Surtidor_PutArray\000"
 3071      69646F72 
 3071      5F507574 
 3071      41727261 
 3071      7900
 3072              	.LASF7:
 3073 007d 6C6F6E67 		.ascii	"long long unsigned int\000"
 3073      206C6F6E 
 3073      6720756E 
 3073      7369676E 
 3073      65642069 
 3074              	.LASF35:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 84


 3075 0094 53757274 		.ascii	"Surtidor_ReadRxStatus\000"
 3075      69646F72 
 3075      5F526561 
 3075      64527853 
 3075      74617475 
 3076              	.LASF70:
 3077 00aa 53757274 		.ascii	"Surtidor_rxBufferWrite\000"
 3077      69646F72 
 3077      5F727842 
 3077      75666665 
 3077      72577269 
 3078              	.LASF6:
 3079 00c1 6C6F6E67 		.ascii	"long long int\000"
 3079      206C6F6E 
 3079      6720696E 
 3079      7400
 3080              	.LASF0:
 3081 00cf 7369676E 		.ascii	"signed char\000"
 3081      65642063 
 3081      68617200 
 3082              	.LASF66:
 3083 00db 53757274 		.ascii	"Surtidor_SetTxAddressMode\000"
 3083      69646F72 
 3083      5F536574 
 3083      54784164 
 3083      64726573 
 3084              	.LASF62:
 3085 00f5 53757274 		.ascii	"Surtidor_SendBreak\000"
 3085      69646F72 
 3085      5F53656E 
 3085      64427265 
 3085      616B00
 3086              	.LASF4:
 3087 0108 6C6F6E67 		.ascii	"long int\000"
 3087      20696E74 
 3087      00
 3088              	.LASF9:
 3089 0111 75696E74 		.ascii	"uint8\000"
 3089      3800
 3090              	.LASF59:
 3091 0117 53757274 		.ascii	"Surtidor_PutCRLF\000"
 3091      69646F72 
 3091      5F507574 
 3091      43524C46 
 3091      00
 3092              	.LASF13:
 3093 0128 646F7562 		.ascii	"double\000"
 3093      6C6500
 3094              	.LASF44:
 3095 012f 61646472 		.ascii	"addressMode\000"
 3095      6573734D 
 3095      6F646500 
 3096              	.LASF25:
 3097 013b 53757274 		.ascii	"Surtidor_DisableRxInt\000"
 3097      69646F72 
 3097      5F446973 
 3097      61626C65 
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 85


 3097      5278496E 
 3098              	.LASF51:
 3099 0151 53757274 		.ascii	"Surtidor_ReadControlRegister\000"
 3099      69646F72 
 3099      5F526561 
 3099      64436F6E 
 3099      74726F6C 
 3100              	.LASF11:
 3101 016e 75696E74 		.ascii	"uint32\000"
 3101      333200
 3102              	.LASF29:
 3103 0175 636F6E74 		.ascii	"control\000"
 3103      726F6C00 
 3104              	.LASF48:
 3105 017d 53757274 		.ascii	"Surtidor_SetTxInterruptMode\000"
 3105      69646F72 
 3105      5F536574 
 3105      5478496E 
 3105      74657272 
 3106              	.LASF28:
 3107 0199 53757274 		.ascii	"Surtidor_SetRxInterruptMode\000"
 3107      69646F72 
 3107      5F536574 
 3107      5278496E 
 3107      74657272 
 3108              	.LASF68:
 3109 01b5 53757274 		.ascii	"Surtidor_rxBuffer\000"
 3109      69646F72 
 3109      5F727842 
 3109      75666665 
 3109      7200
 3110              	.LASF63:
 3111 01c7 7265744D 		.ascii	"retMode\000"
 3111      6F646500 
 3112              	.LASF74:
 3113 01cf 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Surtidor.c\000"
 3113      6E657261 
 3113      7465645F 
 3113      536F7572 
 3113      63655C50 
 3114              	.LASF8:
 3115 01f3 756E7369 		.ascii	"unsigned int\000"
 3115      676E6564 
 3115      20696E74 
 3115      00
 3116              	.LASF49:
 3117 0200 53757274 		.ascii	"Surtidor_WriteTxData\000"
 3117      69646F72 
 3117      5F577269 
 3117      74655478 
 3117      44617461 
 3118              	.LASF53:
 3119 0215 53757274 		.ascii	"Surtidor_PutChar\000"
 3119      69646F72 
 3119      5F507574 
 3119      43686172 
 3119      00
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 86


 3120              	.LASF5:
 3121 0226 6C6F6E67 		.ascii	"long unsigned int\000"
 3121      20756E73 
 3121      69676E65 
 3121      6420696E 
 3121      7400
 3122              	.LASF75:
 3123 0238 433A5C55 		.ascii	"C:\\Users\\Recepcion\\Documents\\NMUX\\Unificada\\U"
 3123      73657273 
 3123      5C526563 
 3123      65706369 
 3123      6F6E5C44 
 3124 0265 6E696669 		.ascii	"nificada.cydsn\000"
 3124      63616461 
 3124      2E637964 
 3124      736E00
 3125              	.LASF78:
 3126 0274 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3126      74657243 
 3126      72697469 
 3126      63616C53 
 3126      65637469 
 3127              	.LASF43:
 3128 028b 53757274 		.ascii	"Surtidor_SetRxAddressMode\000"
 3128      69646F72 
 3128      5F536574 
 3128      52784164 
 3128      64726573 
 3129              	.LASF41:
 3130 02a5 73697A65 		.ascii	"size\000"
 3130      00
 3131              	.LASF3:
 3132 02aa 73686F72 		.ascii	"short unsigned int\000"
 3132      7420756E 
 3132      7369676E 
 3132      65642069 
 3132      6E7400
 3133              	.LASF76:
 3134 02bd 4379496E 		.ascii	"CyIntSetVector\000"
 3134      74536574 
 3134      56656374 
 3134      6F7200
 3135              	.LASF32:
 3136 02cc 6C6F635F 		.ascii	"loc_rxBufferRead\000"
 3136      72784275 
 3136      66666572 
 3136      52656164 
 3136      00
 3137              	.LASF65:
 3138 02dd 74785F70 		.ascii	"tx_period\000"
 3138      6572696F 
 3138      6400
 3139              	.LASF30:
 3140 02e7 696E7453 		.ascii	"intSrc\000"
 3140      726300
 3141              	.LASF17:
 3142 02ee 72656733 		.ascii	"reg32\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 87


 3142      3200
 3143              	.LASF64:
 3144 02f4 746D7053 		.ascii	"tmpStat\000"
 3144      74617400 
 3145              	.LASF52:
 3146 02fc 53757274 		.ascii	"Surtidor_ReadTxStatus\000"
 3146      69646F72 
 3146      5F526561 
 3146      64547853 
 3146      74617475 
 3147              	.LASF19:
 3148 0312 73697A65 		.ascii	"sizetype\000"
 3148      74797065 
 3148      00
 3149              	.LASF61:
 3150 031b 53757274 		.ascii	"Surtidor_ClearTxBuffer\000"
 3150      69646F72 
 3150      5F436C65 
 3150      61725478 
 3150      42756666 
 3151              	.LASF39:
 3152 0332 53757274 		.ascii	"Surtidor_GetByte\000"
 3152      69646F72 
 3152      5F476574 
 3152      42797465 
 3152      00
 3153              	.LASF24:
 3154 0343 53757274 		.ascii	"Surtidor_EnableRxInt\000"
 3154      69646F72 
 3154      5F456E61 
 3154      626C6552 
 3154      78496E74 
 3155              	.LASF71:
 3156 0358 53757274 		.ascii	"Surtidor_rxBufferLoopDetect\000"
 3156      69646F72 
 3156      5F727842 
 3156      75666665 
 3156      724C6F6F 
 3157              	.LASF38:
 3158 0374 72785374 		.ascii	"rxStatus\000"
 3158      61747573 
 3158      00
 3159              	.LASF26:
 3160 037d 53757274 		.ascii	"Surtidor_Stop\000"
 3160      69646F72 
 3160      5F53746F 
 3160      7000
 3161              	.LASF77:
 3162 038b 4379496E 		.ascii	"CyIntSetPriority\000"
 3162      74536574 
 3162      5072696F 
 3162      72697479 
 3162      00
 3163              	.LASF12:
 3164 039c 666C6F61 		.ascii	"float\000"
 3164      7400
 3165              	.LASF16:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 88


 3166 03a2 72656738 		.ascii	"reg8\000"
 3166      00
 3167              	.LASF1:
 3168 03a7 756E7369 		.ascii	"unsigned char\000"
 3168      676E6564 
 3168      20636861 
 3168      7200
 3169              	.LASF2:
 3170 03b5 73686F72 		.ascii	"short int\000"
 3170      7420696E 
 3170      7400
 3171              	.LASF22:
 3172 03bf 53757274 		.ascii	"Surtidor_Start\000"
 3172      69646F72 
 3172      5F537461 
 3172      727400
 3173              	.LASF58:
 3174 03ce 62797465 		.ascii	"byteCount\000"
 3174      436F756E 
 3174      7400
 3175              	.LASF45:
 3176 03d8 53757274 		.ascii	"Surtidor_SetRxAddress1\000"
 3176      69646F72 
 3176      5F536574 
 3176      52784164 
 3176      64726573 
 3177              	.LASF47:
 3178 03ef 53757274 		.ascii	"Surtidor_SetRxAddress2\000"
 3178      69646F72 
 3178      5F536574 
 3178      52784164 
 3178      64726573 
 3179              	.LASF54:
 3180 0406 53757274 		.ascii	"Surtidor_PutString\000"
 3180      69646F72 
 3180      5F507574 
 3180      53747269 
 3180      6E6700
 3181              	.LASF31:
 3182 0419 72784461 		.ascii	"rxData\000"
 3182      746100
 3183              	.LASF34:
 3184 0420 53757274 		.ascii	"Surtidor_ReadRxData\000"
 3184      69646F72 
 3184      5F526561 
 3184      64527844 
 3184      61746100 
 3185              	.LASF15:
 3186 0434 63686172 		.ascii	"char\000"
 3186      00
 3187              	.LASF69:
 3188 0439 53757274 		.ascii	"Surtidor_rxBufferRead\000"
 3188      69646F72 
 3188      5F727842 
 3188      75666665 
 3188      72526561 
 3189              	.LASF18:
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 89


 3190 044f 63796973 		.ascii	"cyisraddress\000"
 3190      72616464 
 3190      72657373 
 3190      00
 3191              	.LASF21:
 3192 045c 53757274 		.ascii	"Surtidor_Enable\000"
 3192      69646F72 
 3192      5F456E61 
 3192      626C6500 
 3193              	.LASF14:
 3194 046c 63686172 		.ascii	"char8\000"
 3194      3800
 3195              	.LASF42:
 3196 0472 53757274 		.ascii	"Surtidor_ClearRxBuffer\000"
 3196      69646F72 
 3196      5F436C65 
 3196      61725278 
 3196      42756666 
 3197              	.LASF72:
 3198 0489 53757274 		.ascii	"Surtidor_rxBufferOverflow\000"
 3198      69646F72 
 3198      5F727842 
 3198      75666665 
 3198      724F7665 
 3199              	.LASF27:
 3200 04a3 656E6162 		.ascii	"enableInterrupts\000"
 3200      6C65496E 
 3200      74657272 
 3200      75707473 
 3200      00
 3201              	.LASF36:
 3202 04b4 73746174 		.ascii	"status\000"
 3202      757300
 3203              	.LASF73:
 3204 04bb 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3204      4320342E 
 3204      392E3320 
 3204      32303135 
 3204      30333033 
 3205 04ee 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3205      20726576 
 3205      6973696F 
 3205      6E203232 
 3205      31323230 
 3206 0521 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3206      66756E63 
 3206      74696F6E 
 3206      2D736563 
 3206      74696F6E 
 3207              	.LASF23:
 3208 0549 53757274 		.ascii	"Surtidor_WriteControlRegister\000"
 3208      69646F72 
 3208      5F577269 
 3208      7465436F 
 3208      6E74726F 
 3209              	.LASF46:
 3210 0567 61646472 		.ascii	"address\000"
ARM GAS  C:\Users\RECEPC~1\AppData\Local\Temp\ccVnMXgQ.s 			page 90


 3210      65737300 
 3211              	.LASF40:
 3212 056f 53757274 		.ascii	"Surtidor_GetRxBufferSize\000"
 3212      69646F72 
 3212      5F476574 
 3212      52784275 
 3212      66666572 
 3213              	.LASF56:
 3214 0588 6275665F 		.ascii	"buf_index\000"
 3214      696E6465 
 3214      7800
 3215              	.LASF20:
 3216 0592 53757274 		.ascii	"Surtidor_Init\000"
 3216      69646F72 
 3216      5F496E69 
 3216      7400
 3217              	.LASF67:
 3218 05a0 53757274 		.ascii	"Surtidor_initVar\000"
 3218      69646F72 
 3218      5F696E69 
 3218      74566172 
 3218      00
 3219              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
